
sensors.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00009ee4  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004bc  08009fa8  08009fa8  0000afa8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800a464  0800a464  0000c1d4  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  0800a464  0800a464  0000c1d4  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  0800a464  0800a464  0000c1d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800a464  0800a464  0000b464  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800a468  0800a468  0000b468  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001d4  20000000  0800a46c  0000c000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000024c  200001d4  0800a640  0000c1d4  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000420  0800a640  0000c420  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0000c1d4  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000a9d5  00000000  00000000  0000c1fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001a5a  00000000  00000000  00016bd1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000978  00000000  00000000  00018630  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000759  00000000  00000000  00018fa8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001095f  00000000  00000000  00019701  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000d204  00000000  00000000  0002a060  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0005fb52  00000000  00000000  00037264  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00096db6  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003788  00000000  00000000  00096dfc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005e  00000000  00000000  0009a584  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	200001d4 	.word	0x200001d4
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08009f8c 	.word	0x08009f8c

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	200001d8 	.word	0x200001d8
 8000104:	08009f8c 	.word	0x08009f8c

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			@ (mov r8, r8)

0800012c <__gnu_thumb1_case_shi>:
 800012c:	b403      	push	{r0, r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0040      	lsls	r0, r0, #1
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	5e09      	ldrsh	r1, [r1, r0]
 8000138:	0049      	lsls	r1, r1, #1
 800013a:	448e      	add	lr, r1
 800013c:	bc03      	pop	{r0, r1}
 800013e:	4770      	bx	lr

08000140 <__udivsi3>:
 8000140:	2200      	movs	r2, #0
 8000142:	0843      	lsrs	r3, r0, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d374      	bcc.n	8000232 <__udivsi3+0xf2>
 8000148:	0903      	lsrs	r3, r0, #4
 800014a:	428b      	cmp	r3, r1
 800014c:	d35f      	bcc.n	800020e <__udivsi3+0xce>
 800014e:	0a03      	lsrs	r3, r0, #8
 8000150:	428b      	cmp	r3, r1
 8000152:	d344      	bcc.n	80001de <__udivsi3+0x9e>
 8000154:	0b03      	lsrs	r3, r0, #12
 8000156:	428b      	cmp	r3, r1
 8000158:	d328      	bcc.n	80001ac <__udivsi3+0x6c>
 800015a:	0c03      	lsrs	r3, r0, #16
 800015c:	428b      	cmp	r3, r1
 800015e:	d30d      	bcc.n	800017c <__udivsi3+0x3c>
 8000160:	22ff      	movs	r2, #255	@ 0xff
 8000162:	0209      	lsls	r1, r1, #8
 8000164:	ba12      	rev	r2, r2
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d302      	bcc.n	8000172 <__udivsi3+0x32>
 800016c:	1212      	asrs	r2, r2, #8
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	d065      	beq.n	800023e <__udivsi3+0xfe>
 8000172:	0b03      	lsrs	r3, r0, #12
 8000174:	428b      	cmp	r3, r1
 8000176:	d319      	bcc.n	80001ac <__udivsi3+0x6c>
 8000178:	e000      	b.n	800017c <__udivsi3+0x3c>
 800017a:	0a09      	lsrs	r1, r1, #8
 800017c:	0bc3      	lsrs	r3, r0, #15
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x46>
 8000182:	03cb      	lsls	r3, r1, #15
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b83      	lsrs	r3, r0, #14
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x52>
 800018e:	038b      	lsls	r3, r1, #14
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b43      	lsrs	r3, r0, #13
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x5e>
 800019a:	034b      	lsls	r3, r1, #13
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b03      	lsrs	r3, r0, #12
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x6a>
 80001a6:	030b      	lsls	r3, r1, #12
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0ac3      	lsrs	r3, r0, #11
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x76>
 80001b2:	02cb      	lsls	r3, r1, #11
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a83      	lsrs	r3, r0, #10
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x82>
 80001be:	028b      	lsls	r3, r1, #10
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a43      	lsrs	r3, r0, #9
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x8e>
 80001ca:	024b      	lsls	r3, r1, #9
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a03      	lsrs	r3, r0, #8
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x9a>
 80001d6:	020b      	lsls	r3, r1, #8
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	d2cd      	bcs.n	800017a <__udivsi3+0x3a>
 80001de:	09c3      	lsrs	r3, r0, #7
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xa8>
 80001e4:	01cb      	lsls	r3, r1, #7
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0983      	lsrs	r3, r0, #6
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xb4>
 80001f0:	018b      	lsls	r3, r1, #6
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0943      	lsrs	r3, r0, #5
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xc0>
 80001fc:	014b      	lsls	r3, r1, #5
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0903      	lsrs	r3, r0, #4
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xcc>
 8000208:	010b      	lsls	r3, r1, #4
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	08c3      	lsrs	r3, r0, #3
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xd8>
 8000214:	00cb      	lsls	r3, r1, #3
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0883      	lsrs	r3, r0, #2
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xe4>
 8000220:	008b      	lsls	r3, r1, #2
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0843      	lsrs	r3, r0, #1
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xf0>
 800022c:	004b      	lsls	r3, r1, #1
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	1a41      	subs	r1, r0, r1
 8000234:	d200      	bcs.n	8000238 <__udivsi3+0xf8>
 8000236:	4601      	mov	r1, r0
 8000238:	4152      	adcs	r2, r2
 800023a:	4610      	mov	r0, r2
 800023c:	4770      	bx	lr
 800023e:	e7ff      	b.n	8000240 <__udivsi3+0x100>
 8000240:	b501      	push	{r0, lr}
 8000242:	2000      	movs	r0, #0
 8000244:	f000 f8f0 	bl	8000428 <__aeabi_idiv0>
 8000248:	bd02      	pop	{r1, pc}
 800024a:	46c0      	nop			@ (mov r8, r8)

0800024c <__aeabi_uidivmod>:
 800024c:	2900      	cmp	r1, #0
 800024e:	d0f7      	beq.n	8000240 <__udivsi3+0x100>
 8000250:	e776      	b.n	8000140 <__udivsi3>
 8000252:	4770      	bx	lr

08000254 <__divsi3>:
 8000254:	4603      	mov	r3, r0
 8000256:	430b      	orrs	r3, r1
 8000258:	d47f      	bmi.n	800035a <__divsi3+0x106>
 800025a:	2200      	movs	r2, #0
 800025c:	0843      	lsrs	r3, r0, #1
 800025e:	428b      	cmp	r3, r1
 8000260:	d374      	bcc.n	800034c <__divsi3+0xf8>
 8000262:	0903      	lsrs	r3, r0, #4
 8000264:	428b      	cmp	r3, r1
 8000266:	d35f      	bcc.n	8000328 <__divsi3+0xd4>
 8000268:	0a03      	lsrs	r3, r0, #8
 800026a:	428b      	cmp	r3, r1
 800026c:	d344      	bcc.n	80002f8 <__divsi3+0xa4>
 800026e:	0b03      	lsrs	r3, r0, #12
 8000270:	428b      	cmp	r3, r1
 8000272:	d328      	bcc.n	80002c6 <__divsi3+0x72>
 8000274:	0c03      	lsrs	r3, r0, #16
 8000276:	428b      	cmp	r3, r1
 8000278:	d30d      	bcc.n	8000296 <__divsi3+0x42>
 800027a:	22ff      	movs	r2, #255	@ 0xff
 800027c:	0209      	lsls	r1, r1, #8
 800027e:	ba12      	rev	r2, r2
 8000280:	0c03      	lsrs	r3, r0, #16
 8000282:	428b      	cmp	r3, r1
 8000284:	d302      	bcc.n	800028c <__divsi3+0x38>
 8000286:	1212      	asrs	r2, r2, #8
 8000288:	0209      	lsls	r1, r1, #8
 800028a:	d065      	beq.n	8000358 <__divsi3+0x104>
 800028c:	0b03      	lsrs	r3, r0, #12
 800028e:	428b      	cmp	r3, r1
 8000290:	d319      	bcc.n	80002c6 <__divsi3+0x72>
 8000292:	e000      	b.n	8000296 <__divsi3+0x42>
 8000294:	0a09      	lsrs	r1, r1, #8
 8000296:	0bc3      	lsrs	r3, r0, #15
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x4c>
 800029c:	03cb      	lsls	r3, r1, #15
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0b83      	lsrs	r3, r0, #14
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x58>
 80002a8:	038b      	lsls	r3, r1, #14
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0b43      	lsrs	r3, r0, #13
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x64>
 80002b4:	034b      	lsls	r3, r1, #13
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0b03      	lsrs	r3, r0, #12
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x70>
 80002c0:	030b      	lsls	r3, r1, #12
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0ac3      	lsrs	r3, r0, #11
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x7c>
 80002cc:	02cb      	lsls	r3, r1, #11
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0a83      	lsrs	r3, r0, #10
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0x88>
 80002d8:	028b      	lsls	r3, r1, #10
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	0a43      	lsrs	r3, r0, #9
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d301      	bcc.n	80002e8 <__divsi3+0x94>
 80002e4:	024b      	lsls	r3, r1, #9
 80002e6:	1ac0      	subs	r0, r0, r3
 80002e8:	4152      	adcs	r2, r2
 80002ea:	0a03      	lsrs	r3, r0, #8
 80002ec:	428b      	cmp	r3, r1
 80002ee:	d301      	bcc.n	80002f4 <__divsi3+0xa0>
 80002f0:	020b      	lsls	r3, r1, #8
 80002f2:	1ac0      	subs	r0, r0, r3
 80002f4:	4152      	adcs	r2, r2
 80002f6:	d2cd      	bcs.n	8000294 <__divsi3+0x40>
 80002f8:	09c3      	lsrs	r3, r0, #7
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xae>
 80002fe:	01cb      	lsls	r3, r1, #7
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	0983      	lsrs	r3, r0, #6
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xba>
 800030a:	018b      	lsls	r3, r1, #6
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0943      	lsrs	r3, r0, #5
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xc6>
 8000316:	014b      	lsls	r3, r1, #5
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0903      	lsrs	r3, r0, #4
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xd2>
 8000322:	010b      	lsls	r3, r1, #4
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	08c3      	lsrs	r3, r0, #3
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xde>
 800032e:	00cb      	lsls	r3, r1, #3
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	0883      	lsrs	r3, r0, #2
 8000336:	428b      	cmp	r3, r1
 8000338:	d301      	bcc.n	800033e <__divsi3+0xea>
 800033a:	008b      	lsls	r3, r1, #2
 800033c:	1ac0      	subs	r0, r0, r3
 800033e:	4152      	adcs	r2, r2
 8000340:	0843      	lsrs	r3, r0, #1
 8000342:	428b      	cmp	r3, r1
 8000344:	d301      	bcc.n	800034a <__divsi3+0xf6>
 8000346:	004b      	lsls	r3, r1, #1
 8000348:	1ac0      	subs	r0, r0, r3
 800034a:	4152      	adcs	r2, r2
 800034c:	1a41      	subs	r1, r0, r1
 800034e:	d200      	bcs.n	8000352 <__divsi3+0xfe>
 8000350:	4601      	mov	r1, r0
 8000352:	4152      	adcs	r2, r2
 8000354:	4610      	mov	r0, r2
 8000356:	4770      	bx	lr
 8000358:	e05d      	b.n	8000416 <__divsi3+0x1c2>
 800035a:	0fca      	lsrs	r2, r1, #31
 800035c:	d000      	beq.n	8000360 <__divsi3+0x10c>
 800035e:	4249      	negs	r1, r1
 8000360:	1003      	asrs	r3, r0, #32
 8000362:	d300      	bcc.n	8000366 <__divsi3+0x112>
 8000364:	4240      	negs	r0, r0
 8000366:	4053      	eors	r3, r2
 8000368:	2200      	movs	r2, #0
 800036a:	469c      	mov	ip, r3
 800036c:	0903      	lsrs	r3, r0, #4
 800036e:	428b      	cmp	r3, r1
 8000370:	d32d      	bcc.n	80003ce <__divsi3+0x17a>
 8000372:	0a03      	lsrs	r3, r0, #8
 8000374:	428b      	cmp	r3, r1
 8000376:	d312      	bcc.n	800039e <__divsi3+0x14a>
 8000378:	22fc      	movs	r2, #252	@ 0xfc
 800037a:	0189      	lsls	r1, r1, #6
 800037c:	ba12      	rev	r2, r2
 800037e:	0a03      	lsrs	r3, r0, #8
 8000380:	428b      	cmp	r3, r1
 8000382:	d30c      	bcc.n	800039e <__divsi3+0x14a>
 8000384:	0189      	lsls	r1, r1, #6
 8000386:	1192      	asrs	r2, r2, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d308      	bcc.n	800039e <__divsi3+0x14a>
 800038c:	0189      	lsls	r1, r1, #6
 800038e:	1192      	asrs	r2, r2, #6
 8000390:	428b      	cmp	r3, r1
 8000392:	d304      	bcc.n	800039e <__divsi3+0x14a>
 8000394:	0189      	lsls	r1, r1, #6
 8000396:	d03a      	beq.n	800040e <__divsi3+0x1ba>
 8000398:	1192      	asrs	r2, r2, #6
 800039a:	e000      	b.n	800039e <__divsi3+0x14a>
 800039c:	0989      	lsrs	r1, r1, #6
 800039e:	09c3      	lsrs	r3, r0, #7
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x154>
 80003a4:	01cb      	lsls	r3, r1, #7
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	0983      	lsrs	r3, r0, #6
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x160>
 80003b0:	018b      	lsls	r3, r1, #6
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0943      	lsrs	r3, r0, #5
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x16c>
 80003bc:	014b      	lsls	r3, r1, #5
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	0903      	lsrs	r3, r0, #4
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x178>
 80003c8:	010b      	lsls	r3, r1, #4
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	08c3      	lsrs	r3, r0, #3
 80003d0:	428b      	cmp	r3, r1
 80003d2:	d301      	bcc.n	80003d8 <__divsi3+0x184>
 80003d4:	00cb      	lsls	r3, r1, #3
 80003d6:	1ac0      	subs	r0, r0, r3
 80003d8:	4152      	adcs	r2, r2
 80003da:	0883      	lsrs	r3, r0, #2
 80003dc:	428b      	cmp	r3, r1
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x190>
 80003e0:	008b      	lsls	r3, r1, #2
 80003e2:	1ac0      	subs	r0, r0, r3
 80003e4:	4152      	adcs	r2, r2
 80003e6:	d2d9      	bcs.n	800039c <__divsi3+0x148>
 80003e8:	0843      	lsrs	r3, r0, #1
 80003ea:	428b      	cmp	r3, r1
 80003ec:	d301      	bcc.n	80003f2 <__divsi3+0x19e>
 80003ee:	004b      	lsls	r3, r1, #1
 80003f0:	1ac0      	subs	r0, r0, r3
 80003f2:	4152      	adcs	r2, r2
 80003f4:	1a41      	subs	r1, r0, r1
 80003f6:	d200      	bcs.n	80003fa <__divsi3+0x1a6>
 80003f8:	4601      	mov	r1, r0
 80003fa:	4663      	mov	r3, ip
 80003fc:	4152      	adcs	r2, r2
 80003fe:	105b      	asrs	r3, r3, #1
 8000400:	4610      	mov	r0, r2
 8000402:	d301      	bcc.n	8000408 <__divsi3+0x1b4>
 8000404:	4240      	negs	r0, r0
 8000406:	2b00      	cmp	r3, #0
 8000408:	d500      	bpl.n	800040c <__divsi3+0x1b8>
 800040a:	4249      	negs	r1, r1
 800040c:	4770      	bx	lr
 800040e:	4663      	mov	r3, ip
 8000410:	105b      	asrs	r3, r3, #1
 8000412:	d300      	bcc.n	8000416 <__divsi3+0x1c2>
 8000414:	4240      	negs	r0, r0
 8000416:	b501      	push	{r0, lr}
 8000418:	2000      	movs	r0, #0
 800041a:	f000 f805 	bl	8000428 <__aeabi_idiv0>
 800041e:	bd02      	pop	{r1, pc}

08000420 <__aeabi_idivmod>:
 8000420:	2900      	cmp	r1, #0
 8000422:	d0f8      	beq.n	8000416 <__divsi3+0x1c2>
 8000424:	e716      	b.n	8000254 <__divsi3>
 8000426:	4770      	bx	lr

08000428 <__aeabi_idiv0>:
 8000428:	4770      	bx	lr
 800042a:	46c0      	nop			@ (mov r8, r8)

0800042c <__aeabi_cdrcmple>:
 800042c:	4684      	mov	ip, r0
 800042e:	0010      	movs	r0, r2
 8000430:	4662      	mov	r2, ip
 8000432:	468c      	mov	ip, r1
 8000434:	0019      	movs	r1, r3
 8000436:	4663      	mov	r3, ip
 8000438:	e000      	b.n	800043c <__aeabi_cdcmpeq>
 800043a:	46c0      	nop			@ (mov r8, r8)

0800043c <__aeabi_cdcmpeq>:
 800043c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800043e:	f001 facf 	bl	80019e0 <__ledf2>
 8000442:	2800      	cmp	r0, #0
 8000444:	d401      	bmi.n	800044a <__aeabi_cdcmpeq+0xe>
 8000446:	2100      	movs	r1, #0
 8000448:	42c8      	cmn	r0, r1
 800044a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800044c <__aeabi_dcmpeq>:
 800044c:	b510      	push	{r4, lr}
 800044e:	f001 fa13 	bl	8001878 <__eqdf2>
 8000452:	4240      	negs	r0, r0
 8000454:	3001      	adds	r0, #1
 8000456:	bd10      	pop	{r4, pc}

08000458 <__aeabi_dcmplt>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f001 fac1 	bl	80019e0 <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	db01      	blt.n	8000466 <__aeabi_dcmplt+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			@ (mov r8, r8)

0800046c <__aeabi_dcmple>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f001 fab7 	bl	80019e0 <__ledf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dd01      	ble.n	800047a <__aeabi_dcmple+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			@ (mov r8, r8)

08000480 <__aeabi_dcmpgt>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f001 fa3d 	bl	8001900 <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	dc01      	bgt.n	800048e <__aeabi_dcmpgt+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			@ (mov r8, r8)

08000494 <__aeabi_dcmpge>:
 8000494:	b510      	push	{r4, lr}
 8000496:	f001 fa33 	bl	8001900 <__gedf2>
 800049a:	2800      	cmp	r0, #0
 800049c:	da01      	bge.n	80004a2 <__aeabi_dcmpge+0xe>
 800049e:	2000      	movs	r0, #0
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	2001      	movs	r0, #1
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	46c0      	nop			@ (mov r8, r8)

080004a8 <__aeabi_cfrcmple>:
 80004a8:	4684      	mov	ip, r0
 80004aa:	0008      	movs	r0, r1
 80004ac:	4661      	mov	r1, ip
 80004ae:	e7ff      	b.n	80004b0 <__aeabi_cfcmpeq>

080004b0 <__aeabi_cfcmpeq>:
 80004b0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80004b2:	f000 f911 	bl	80006d8 <__lesf2>
 80004b6:	2800      	cmp	r0, #0
 80004b8:	d401      	bmi.n	80004be <__aeabi_cfcmpeq+0xe>
 80004ba:	2100      	movs	r1, #0
 80004bc:	42c8      	cmn	r0, r1
 80004be:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

080004c0 <__aeabi_fcmpeq>:
 80004c0:	b510      	push	{r4, lr}
 80004c2:	f000 f899 	bl	80005f8 <__eqsf2>
 80004c6:	4240      	negs	r0, r0
 80004c8:	3001      	adds	r0, #1
 80004ca:	bd10      	pop	{r4, pc}

080004cc <__aeabi_fcmplt>:
 80004cc:	b510      	push	{r4, lr}
 80004ce:	f000 f903 	bl	80006d8 <__lesf2>
 80004d2:	2800      	cmp	r0, #0
 80004d4:	db01      	blt.n	80004da <__aeabi_fcmplt+0xe>
 80004d6:	2000      	movs	r0, #0
 80004d8:	bd10      	pop	{r4, pc}
 80004da:	2001      	movs	r0, #1
 80004dc:	bd10      	pop	{r4, pc}
 80004de:	46c0      	nop			@ (mov r8, r8)

080004e0 <__aeabi_fcmple>:
 80004e0:	b510      	push	{r4, lr}
 80004e2:	f000 f8f9 	bl	80006d8 <__lesf2>
 80004e6:	2800      	cmp	r0, #0
 80004e8:	dd01      	ble.n	80004ee <__aeabi_fcmple+0xe>
 80004ea:	2000      	movs	r0, #0
 80004ec:	bd10      	pop	{r4, pc}
 80004ee:	2001      	movs	r0, #1
 80004f0:	bd10      	pop	{r4, pc}
 80004f2:	46c0      	nop			@ (mov r8, r8)

080004f4 <__aeabi_fcmpgt>:
 80004f4:	b510      	push	{r4, lr}
 80004f6:	f000 f8a7 	bl	8000648 <__gesf2>
 80004fa:	2800      	cmp	r0, #0
 80004fc:	dc01      	bgt.n	8000502 <__aeabi_fcmpgt+0xe>
 80004fe:	2000      	movs	r0, #0
 8000500:	bd10      	pop	{r4, pc}
 8000502:	2001      	movs	r0, #1
 8000504:	bd10      	pop	{r4, pc}
 8000506:	46c0      	nop			@ (mov r8, r8)

08000508 <__aeabi_fcmpge>:
 8000508:	b510      	push	{r4, lr}
 800050a:	f000 f89d 	bl	8000648 <__gesf2>
 800050e:	2800      	cmp	r0, #0
 8000510:	da01      	bge.n	8000516 <__aeabi_fcmpge+0xe>
 8000512:	2000      	movs	r0, #0
 8000514:	bd10      	pop	{r4, pc}
 8000516:	2001      	movs	r0, #1
 8000518:	bd10      	pop	{r4, pc}
 800051a:	46c0      	nop			@ (mov r8, r8)

0800051c <__aeabi_d2uiz>:
 800051c:	b570      	push	{r4, r5, r6, lr}
 800051e:	2200      	movs	r2, #0
 8000520:	4b0c      	ldr	r3, [pc, #48]	@ (8000554 <__aeabi_d2uiz+0x38>)
 8000522:	0004      	movs	r4, r0
 8000524:	000d      	movs	r5, r1
 8000526:	f7ff ffb5 	bl	8000494 <__aeabi_dcmpge>
 800052a:	2800      	cmp	r0, #0
 800052c:	d104      	bne.n	8000538 <__aeabi_d2uiz+0x1c>
 800052e:	0020      	movs	r0, r4
 8000530:	0029      	movs	r1, r5
 8000532:	f002 f9d5 	bl	80028e0 <__aeabi_d2iz>
 8000536:	bd70      	pop	{r4, r5, r6, pc}
 8000538:	4b06      	ldr	r3, [pc, #24]	@ (8000554 <__aeabi_d2uiz+0x38>)
 800053a:	2200      	movs	r2, #0
 800053c:	0020      	movs	r0, r4
 800053e:	0029      	movs	r1, r5
 8000540:	f001 fda2 	bl	8002088 <__aeabi_dsub>
 8000544:	f002 f9cc 	bl	80028e0 <__aeabi_d2iz>
 8000548:	2380      	movs	r3, #128	@ 0x80
 800054a:	061b      	lsls	r3, r3, #24
 800054c:	469c      	mov	ip, r3
 800054e:	4460      	add	r0, ip
 8000550:	e7f1      	b.n	8000536 <__aeabi_d2uiz+0x1a>
 8000552:	46c0      	nop			@ (mov r8, r8)
 8000554:	41e00000 	.word	0x41e00000

08000558 <__aeabi_d2lz>:
 8000558:	b570      	push	{r4, r5, r6, lr}
 800055a:	2200      	movs	r2, #0
 800055c:	2300      	movs	r3, #0
 800055e:	0004      	movs	r4, r0
 8000560:	000d      	movs	r5, r1
 8000562:	f7ff ff79 	bl	8000458 <__aeabi_dcmplt>
 8000566:	2800      	cmp	r0, #0
 8000568:	d108      	bne.n	800057c <__aeabi_d2lz+0x24>
 800056a:	0020      	movs	r0, r4
 800056c:	0029      	movs	r1, r5
 800056e:	f000 f80f 	bl	8000590 <__aeabi_d2ulz>
 8000572:	0002      	movs	r2, r0
 8000574:	000b      	movs	r3, r1
 8000576:	0010      	movs	r0, r2
 8000578:	0019      	movs	r1, r3
 800057a:	bd70      	pop	{r4, r5, r6, pc}
 800057c:	2380      	movs	r3, #128	@ 0x80
 800057e:	061b      	lsls	r3, r3, #24
 8000580:	18e9      	adds	r1, r5, r3
 8000582:	0020      	movs	r0, r4
 8000584:	f000 f804 	bl	8000590 <__aeabi_d2ulz>
 8000588:	2300      	movs	r3, #0
 800058a:	4242      	negs	r2, r0
 800058c:	418b      	sbcs	r3, r1
 800058e:	e7f2      	b.n	8000576 <__aeabi_d2lz+0x1e>

08000590 <__aeabi_d2ulz>:
 8000590:	b570      	push	{r4, r5, r6, lr}
 8000592:	2200      	movs	r2, #0
 8000594:	4b0b      	ldr	r3, [pc, #44]	@ (80005c4 <__aeabi_d2ulz+0x34>)
 8000596:	000d      	movs	r5, r1
 8000598:	0004      	movs	r4, r0
 800059a:	f001 fa8f 	bl	8001abc <__aeabi_dmul>
 800059e:	f7ff ffbd 	bl	800051c <__aeabi_d2uiz>
 80005a2:	0006      	movs	r6, r0
 80005a4:	f002 fa06 	bl	80029b4 <__aeabi_ui2d>
 80005a8:	2200      	movs	r2, #0
 80005aa:	4b07      	ldr	r3, [pc, #28]	@ (80005c8 <__aeabi_d2ulz+0x38>)
 80005ac:	f001 fa86 	bl	8001abc <__aeabi_dmul>
 80005b0:	0002      	movs	r2, r0
 80005b2:	000b      	movs	r3, r1
 80005b4:	0020      	movs	r0, r4
 80005b6:	0029      	movs	r1, r5
 80005b8:	f001 fd66 	bl	8002088 <__aeabi_dsub>
 80005bc:	f7ff ffae 	bl	800051c <__aeabi_d2uiz>
 80005c0:	0031      	movs	r1, r6
 80005c2:	bd70      	pop	{r4, r5, r6, pc}
 80005c4:	3df00000 	.word	0x3df00000
 80005c8:	41f00000 	.word	0x41f00000

080005cc <__aeabi_l2d>:
 80005cc:	b570      	push	{r4, r5, r6, lr}
 80005ce:	0006      	movs	r6, r0
 80005d0:	0008      	movs	r0, r1
 80005d2:	f002 f9c1 	bl	8002958 <__aeabi_i2d>
 80005d6:	2200      	movs	r2, #0
 80005d8:	4b06      	ldr	r3, [pc, #24]	@ (80005f4 <__aeabi_l2d+0x28>)
 80005da:	f001 fa6f 	bl	8001abc <__aeabi_dmul>
 80005de:	000d      	movs	r5, r1
 80005e0:	0004      	movs	r4, r0
 80005e2:	0030      	movs	r0, r6
 80005e4:	f002 f9e6 	bl	80029b4 <__aeabi_ui2d>
 80005e8:	002b      	movs	r3, r5
 80005ea:	0022      	movs	r2, r4
 80005ec:	f000 fa66 	bl	8000abc <__aeabi_dadd>
 80005f0:	bd70      	pop	{r4, r5, r6, pc}
 80005f2:	46c0      	nop			@ (mov r8, r8)
 80005f4:	41f00000 	.word	0x41f00000

080005f8 <__eqsf2>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	0042      	lsls	r2, r0, #1
 80005fc:	024e      	lsls	r6, r1, #9
 80005fe:	004c      	lsls	r4, r1, #1
 8000600:	0245      	lsls	r5, r0, #9
 8000602:	0a6d      	lsrs	r5, r5, #9
 8000604:	0e12      	lsrs	r2, r2, #24
 8000606:	0fc3      	lsrs	r3, r0, #31
 8000608:	0a76      	lsrs	r6, r6, #9
 800060a:	0e24      	lsrs	r4, r4, #24
 800060c:	0fc9      	lsrs	r1, r1, #31
 800060e:	2aff      	cmp	r2, #255	@ 0xff
 8000610:	d010      	beq.n	8000634 <__eqsf2+0x3c>
 8000612:	2cff      	cmp	r4, #255	@ 0xff
 8000614:	d00c      	beq.n	8000630 <__eqsf2+0x38>
 8000616:	2001      	movs	r0, #1
 8000618:	42a2      	cmp	r2, r4
 800061a:	d10a      	bne.n	8000632 <__eqsf2+0x3a>
 800061c:	42b5      	cmp	r5, r6
 800061e:	d108      	bne.n	8000632 <__eqsf2+0x3a>
 8000620:	428b      	cmp	r3, r1
 8000622:	d00f      	beq.n	8000644 <__eqsf2+0x4c>
 8000624:	2a00      	cmp	r2, #0
 8000626:	d104      	bne.n	8000632 <__eqsf2+0x3a>
 8000628:	0028      	movs	r0, r5
 800062a:	1e43      	subs	r3, r0, #1
 800062c:	4198      	sbcs	r0, r3
 800062e:	e000      	b.n	8000632 <__eqsf2+0x3a>
 8000630:	2001      	movs	r0, #1
 8000632:	bd70      	pop	{r4, r5, r6, pc}
 8000634:	2001      	movs	r0, #1
 8000636:	2cff      	cmp	r4, #255	@ 0xff
 8000638:	d1fb      	bne.n	8000632 <__eqsf2+0x3a>
 800063a:	4335      	orrs	r5, r6
 800063c:	d1f9      	bne.n	8000632 <__eqsf2+0x3a>
 800063e:	404b      	eors	r3, r1
 8000640:	0018      	movs	r0, r3
 8000642:	e7f6      	b.n	8000632 <__eqsf2+0x3a>
 8000644:	2000      	movs	r0, #0
 8000646:	e7f4      	b.n	8000632 <__eqsf2+0x3a>

08000648 <__gesf2>:
 8000648:	b530      	push	{r4, r5, lr}
 800064a:	0042      	lsls	r2, r0, #1
 800064c:	0244      	lsls	r4, r0, #9
 800064e:	024d      	lsls	r5, r1, #9
 8000650:	0fc3      	lsrs	r3, r0, #31
 8000652:	0048      	lsls	r0, r1, #1
 8000654:	0a64      	lsrs	r4, r4, #9
 8000656:	0e12      	lsrs	r2, r2, #24
 8000658:	0a6d      	lsrs	r5, r5, #9
 800065a:	0e00      	lsrs	r0, r0, #24
 800065c:	0fc9      	lsrs	r1, r1, #31
 800065e:	2aff      	cmp	r2, #255	@ 0xff
 8000660:	d018      	beq.n	8000694 <__gesf2+0x4c>
 8000662:	28ff      	cmp	r0, #255	@ 0xff
 8000664:	d00a      	beq.n	800067c <__gesf2+0x34>
 8000666:	2a00      	cmp	r2, #0
 8000668:	d11e      	bne.n	80006a8 <__gesf2+0x60>
 800066a:	2800      	cmp	r0, #0
 800066c:	d10a      	bne.n	8000684 <__gesf2+0x3c>
 800066e:	2d00      	cmp	r5, #0
 8000670:	d029      	beq.n	80006c6 <__gesf2+0x7e>
 8000672:	2c00      	cmp	r4, #0
 8000674:	d12d      	bne.n	80006d2 <__gesf2+0x8a>
 8000676:	0048      	lsls	r0, r1, #1
 8000678:	3801      	subs	r0, #1
 800067a:	bd30      	pop	{r4, r5, pc}
 800067c:	2d00      	cmp	r5, #0
 800067e:	d125      	bne.n	80006cc <__gesf2+0x84>
 8000680:	2a00      	cmp	r2, #0
 8000682:	d101      	bne.n	8000688 <__gesf2+0x40>
 8000684:	2c00      	cmp	r4, #0
 8000686:	d0f6      	beq.n	8000676 <__gesf2+0x2e>
 8000688:	428b      	cmp	r3, r1
 800068a:	d019      	beq.n	80006c0 <__gesf2+0x78>
 800068c:	2001      	movs	r0, #1
 800068e:	425b      	negs	r3, r3
 8000690:	4318      	orrs	r0, r3
 8000692:	e7f2      	b.n	800067a <__gesf2+0x32>
 8000694:	2c00      	cmp	r4, #0
 8000696:	d119      	bne.n	80006cc <__gesf2+0x84>
 8000698:	28ff      	cmp	r0, #255	@ 0xff
 800069a:	d1f7      	bne.n	800068c <__gesf2+0x44>
 800069c:	2d00      	cmp	r5, #0
 800069e:	d115      	bne.n	80006cc <__gesf2+0x84>
 80006a0:	2000      	movs	r0, #0
 80006a2:	428b      	cmp	r3, r1
 80006a4:	d1f2      	bne.n	800068c <__gesf2+0x44>
 80006a6:	e7e8      	b.n	800067a <__gesf2+0x32>
 80006a8:	2800      	cmp	r0, #0
 80006aa:	d0ef      	beq.n	800068c <__gesf2+0x44>
 80006ac:	428b      	cmp	r3, r1
 80006ae:	d1ed      	bne.n	800068c <__gesf2+0x44>
 80006b0:	4282      	cmp	r2, r0
 80006b2:	dceb      	bgt.n	800068c <__gesf2+0x44>
 80006b4:	db04      	blt.n	80006c0 <__gesf2+0x78>
 80006b6:	42ac      	cmp	r4, r5
 80006b8:	d8e8      	bhi.n	800068c <__gesf2+0x44>
 80006ba:	2000      	movs	r0, #0
 80006bc:	42ac      	cmp	r4, r5
 80006be:	d2dc      	bcs.n	800067a <__gesf2+0x32>
 80006c0:	0058      	lsls	r0, r3, #1
 80006c2:	3801      	subs	r0, #1
 80006c4:	e7d9      	b.n	800067a <__gesf2+0x32>
 80006c6:	2c00      	cmp	r4, #0
 80006c8:	d0d7      	beq.n	800067a <__gesf2+0x32>
 80006ca:	e7df      	b.n	800068c <__gesf2+0x44>
 80006cc:	2002      	movs	r0, #2
 80006ce:	4240      	negs	r0, r0
 80006d0:	e7d3      	b.n	800067a <__gesf2+0x32>
 80006d2:	428b      	cmp	r3, r1
 80006d4:	d1da      	bne.n	800068c <__gesf2+0x44>
 80006d6:	e7ee      	b.n	80006b6 <__gesf2+0x6e>

080006d8 <__lesf2>:
 80006d8:	b530      	push	{r4, r5, lr}
 80006da:	0042      	lsls	r2, r0, #1
 80006dc:	0244      	lsls	r4, r0, #9
 80006de:	024d      	lsls	r5, r1, #9
 80006e0:	0fc3      	lsrs	r3, r0, #31
 80006e2:	0048      	lsls	r0, r1, #1
 80006e4:	0a64      	lsrs	r4, r4, #9
 80006e6:	0e12      	lsrs	r2, r2, #24
 80006e8:	0a6d      	lsrs	r5, r5, #9
 80006ea:	0e00      	lsrs	r0, r0, #24
 80006ec:	0fc9      	lsrs	r1, r1, #31
 80006ee:	2aff      	cmp	r2, #255	@ 0xff
 80006f0:	d017      	beq.n	8000722 <__lesf2+0x4a>
 80006f2:	28ff      	cmp	r0, #255	@ 0xff
 80006f4:	d00a      	beq.n	800070c <__lesf2+0x34>
 80006f6:	2a00      	cmp	r2, #0
 80006f8:	d11b      	bne.n	8000732 <__lesf2+0x5a>
 80006fa:	2800      	cmp	r0, #0
 80006fc:	d10a      	bne.n	8000714 <__lesf2+0x3c>
 80006fe:	2d00      	cmp	r5, #0
 8000700:	d01d      	beq.n	800073e <__lesf2+0x66>
 8000702:	2c00      	cmp	r4, #0
 8000704:	d12d      	bne.n	8000762 <__lesf2+0x8a>
 8000706:	0048      	lsls	r0, r1, #1
 8000708:	3801      	subs	r0, #1
 800070a:	e011      	b.n	8000730 <__lesf2+0x58>
 800070c:	2d00      	cmp	r5, #0
 800070e:	d10e      	bne.n	800072e <__lesf2+0x56>
 8000710:	2a00      	cmp	r2, #0
 8000712:	d101      	bne.n	8000718 <__lesf2+0x40>
 8000714:	2c00      	cmp	r4, #0
 8000716:	d0f6      	beq.n	8000706 <__lesf2+0x2e>
 8000718:	428b      	cmp	r3, r1
 800071a:	d10c      	bne.n	8000736 <__lesf2+0x5e>
 800071c:	0058      	lsls	r0, r3, #1
 800071e:	3801      	subs	r0, #1
 8000720:	e006      	b.n	8000730 <__lesf2+0x58>
 8000722:	2c00      	cmp	r4, #0
 8000724:	d103      	bne.n	800072e <__lesf2+0x56>
 8000726:	28ff      	cmp	r0, #255	@ 0xff
 8000728:	d105      	bne.n	8000736 <__lesf2+0x5e>
 800072a:	2d00      	cmp	r5, #0
 800072c:	d015      	beq.n	800075a <__lesf2+0x82>
 800072e:	2002      	movs	r0, #2
 8000730:	bd30      	pop	{r4, r5, pc}
 8000732:	2800      	cmp	r0, #0
 8000734:	d106      	bne.n	8000744 <__lesf2+0x6c>
 8000736:	2001      	movs	r0, #1
 8000738:	425b      	negs	r3, r3
 800073a:	4318      	orrs	r0, r3
 800073c:	e7f8      	b.n	8000730 <__lesf2+0x58>
 800073e:	2c00      	cmp	r4, #0
 8000740:	d0f6      	beq.n	8000730 <__lesf2+0x58>
 8000742:	e7f8      	b.n	8000736 <__lesf2+0x5e>
 8000744:	428b      	cmp	r3, r1
 8000746:	d1f6      	bne.n	8000736 <__lesf2+0x5e>
 8000748:	4282      	cmp	r2, r0
 800074a:	dcf4      	bgt.n	8000736 <__lesf2+0x5e>
 800074c:	dbe6      	blt.n	800071c <__lesf2+0x44>
 800074e:	42ac      	cmp	r4, r5
 8000750:	d8f1      	bhi.n	8000736 <__lesf2+0x5e>
 8000752:	2000      	movs	r0, #0
 8000754:	42ac      	cmp	r4, r5
 8000756:	d2eb      	bcs.n	8000730 <__lesf2+0x58>
 8000758:	e7e0      	b.n	800071c <__lesf2+0x44>
 800075a:	2000      	movs	r0, #0
 800075c:	428b      	cmp	r3, r1
 800075e:	d1ea      	bne.n	8000736 <__lesf2+0x5e>
 8000760:	e7e6      	b.n	8000730 <__lesf2+0x58>
 8000762:	428b      	cmp	r3, r1
 8000764:	d1e7      	bne.n	8000736 <__lesf2+0x5e>
 8000766:	e7f2      	b.n	800074e <__lesf2+0x76>

08000768 <__aeabi_fmul>:
 8000768:	b5f0      	push	{r4, r5, r6, r7, lr}
 800076a:	464f      	mov	r7, r9
 800076c:	4646      	mov	r6, r8
 800076e:	46d6      	mov	lr, sl
 8000770:	0044      	lsls	r4, r0, #1
 8000772:	b5c0      	push	{r6, r7, lr}
 8000774:	0246      	lsls	r6, r0, #9
 8000776:	1c0f      	adds	r7, r1, #0
 8000778:	0a76      	lsrs	r6, r6, #9
 800077a:	0e24      	lsrs	r4, r4, #24
 800077c:	0fc5      	lsrs	r5, r0, #31
 800077e:	2c00      	cmp	r4, #0
 8000780:	d100      	bne.n	8000784 <__aeabi_fmul+0x1c>
 8000782:	e0da      	b.n	800093a <__aeabi_fmul+0x1d2>
 8000784:	2cff      	cmp	r4, #255	@ 0xff
 8000786:	d074      	beq.n	8000872 <__aeabi_fmul+0x10a>
 8000788:	2380      	movs	r3, #128	@ 0x80
 800078a:	00f6      	lsls	r6, r6, #3
 800078c:	04db      	lsls	r3, r3, #19
 800078e:	431e      	orrs	r6, r3
 8000790:	2300      	movs	r3, #0
 8000792:	4699      	mov	r9, r3
 8000794:	469a      	mov	sl, r3
 8000796:	3c7f      	subs	r4, #127	@ 0x7f
 8000798:	027b      	lsls	r3, r7, #9
 800079a:	0a5b      	lsrs	r3, r3, #9
 800079c:	4698      	mov	r8, r3
 800079e:	007b      	lsls	r3, r7, #1
 80007a0:	0e1b      	lsrs	r3, r3, #24
 80007a2:	0fff      	lsrs	r7, r7, #31
 80007a4:	2b00      	cmp	r3, #0
 80007a6:	d074      	beq.n	8000892 <__aeabi_fmul+0x12a>
 80007a8:	2bff      	cmp	r3, #255	@ 0xff
 80007aa:	d100      	bne.n	80007ae <__aeabi_fmul+0x46>
 80007ac:	e08e      	b.n	80008cc <__aeabi_fmul+0x164>
 80007ae:	4642      	mov	r2, r8
 80007b0:	2180      	movs	r1, #128	@ 0x80
 80007b2:	00d2      	lsls	r2, r2, #3
 80007b4:	04c9      	lsls	r1, r1, #19
 80007b6:	4311      	orrs	r1, r2
 80007b8:	3b7f      	subs	r3, #127	@ 0x7f
 80007ba:	002a      	movs	r2, r5
 80007bc:	18e4      	adds	r4, r4, r3
 80007be:	464b      	mov	r3, r9
 80007c0:	407a      	eors	r2, r7
 80007c2:	4688      	mov	r8, r1
 80007c4:	b2d2      	uxtb	r2, r2
 80007c6:	2b0a      	cmp	r3, #10
 80007c8:	dc75      	bgt.n	80008b6 <__aeabi_fmul+0x14e>
 80007ca:	464b      	mov	r3, r9
 80007cc:	2000      	movs	r0, #0
 80007ce:	2b02      	cmp	r3, #2
 80007d0:	dd0f      	ble.n	80007f2 <__aeabi_fmul+0x8a>
 80007d2:	4649      	mov	r1, r9
 80007d4:	2301      	movs	r3, #1
 80007d6:	408b      	lsls	r3, r1
 80007d8:	21a6      	movs	r1, #166	@ 0xa6
 80007da:	00c9      	lsls	r1, r1, #3
 80007dc:	420b      	tst	r3, r1
 80007de:	d169      	bne.n	80008b4 <__aeabi_fmul+0x14c>
 80007e0:	2190      	movs	r1, #144	@ 0x90
 80007e2:	0089      	lsls	r1, r1, #2
 80007e4:	420b      	tst	r3, r1
 80007e6:	d000      	beq.n	80007ea <__aeabi_fmul+0x82>
 80007e8:	e100      	b.n	80009ec <__aeabi_fmul+0x284>
 80007ea:	2188      	movs	r1, #136	@ 0x88
 80007ec:	4219      	tst	r1, r3
 80007ee:	d000      	beq.n	80007f2 <__aeabi_fmul+0x8a>
 80007f0:	e0f5      	b.n	80009de <__aeabi_fmul+0x276>
 80007f2:	4641      	mov	r1, r8
 80007f4:	0409      	lsls	r1, r1, #16
 80007f6:	0c09      	lsrs	r1, r1, #16
 80007f8:	4643      	mov	r3, r8
 80007fa:	0008      	movs	r0, r1
 80007fc:	0c35      	lsrs	r5, r6, #16
 80007fe:	0436      	lsls	r6, r6, #16
 8000800:	0c1b      	lsrs	r3, r3, #16
 8000802:	0c36      	lsrs	r6, r6, #16
 8000804:	4370      	muls	r0, r6
 8000806:	4369      	muls	r1, r5
 8000808:	435e      	muls	r6, r3
 800080a:	435d      	muls	r5, r3
 800080c:	1876      	adds	r6, r6, r1
 800080e:	0c03      	lsrs	r3, r0, #16
 8000810:	199b      	adds	r3, r3, r6
 8000812:	4299      	cmp	r1, r3
 8000814:	d903      	bls.n	800081e <__aeabi_fmul+0xb6>
 8000816:	2180      	movs	r1, #128	@ 0x80
 8000818:	0249      	lsls	r1, r1, #9
 800081a:	468c      	mov	ip, r1
 800081c:	4465      	add	r5, ip
 800081e:	0400      	lsls	r0, r0, #16
 8000820:	0419      	lsls	r1, r3, #16
 8000822:	0c00      	lsrs	r0, r0, #16
 8000824:	1809      	adds	r1, r1, r0
 8000826:	018e      	lsls	r6, r1, #6
 8000828:	1e70      	subs	r0, r6, #1
 800082a:	4186      	sbcs	r6, r0
 800082c:	0c1b      	lsrs	r3, r3, #16
 800082e:	0e89      	lsrs	r1, r1, #26
 8000830:	195b      	adds	r3, r3, r5
 8000832:	430e      	orrs	r6, r1
 8000834:	019b      	lsls	r3, r3, #6
 8000836:	431e      	orrs	r6, r3
 8000838:	011b      	lsls	r3, r3, #4
 800083a:	d46c      	bmi.n	8000916 <__aeabi_fmul+0x1ae>
 800083c:	0023      	movs	r3, r4
 800083e:	337f      	adds	r3, #127	@ 0x7f
 8000840:	2b00      	cmp	r3, #0
 8000842:	dc00      	bgt.n	8000846 <__aeabi_fmul+0xde>
 8000844:	e0b1      	b.n	80009aa <__aeabi_fmul+0x242>
 8000846:	0015      	movs	r5, r2
 8000848:	0771      	lsls	r1, r6, #29
 800084a:	d00b      	beq.n	8000864 <__aeabi_fmul+0xfc>
 800084c:	200f      	movs	r0, #15
 800084e:	0021      	movs	r1, r4
 8000850:	4030      	ands	r0, r6
 8000852:	2804      	cmp	r0, #4
 8000854:	d006      	beq.n	8000864 <__aeabi_fmul+0xfc>
 8000856:	3604      	adds	r6, #4
 8000858:	0132      	lsls	r2, r6, #4
 800085a:	d503      	bpl.n	8000864 <__aeabi_fmul+0xfc>
 800085c:	4b6e      	ldr	r3, [pc, #440]	@ (8000a18 <__aeabi_fmul+0x2b0>)
 800085e:	401e      	ands	r6, r3
 8000860:	000b      	movs	r3, r1
 8000862:	3380      	adds	r3, #128	@ 0x80
 8000864:	2bfe      	cmp	r3, #254	@ 0xfe
 8000866:	dd00      	ble.n	800086a <__aeabi_fmul+0x102>
 8000868:	e0bd      	b.n	80009e6 <__aeabi_fmul+0x27e>
 800086a:	01b2      	lsls	r2, r6, #6
 800086c:	0a52      	lsrs	r2, r2, #9
 800086e:	b2db      	uxtb	r3, r3
 8000870:	e048      	b.n	8000904 <__aeabi_fmul+0x19c>
 8000872:	2e00      	cmp	r6, #0
 8000874:	d000      	beq.n	8000878 <__aeabi_fmul+0x110>
 8000876:	e092      	b.n	800099e <__aeabi_fmul+0x236>
 8000878:	2308      	movs	r3, #8
 800087a:	4699      	mov	r9, r3
 800087c:	3b06      	subs	r3, #6
 800087e:	469a      	mov	sl, r3
 8000880:	027b      	lsls	r3, r7, #9
 8000882:	0a5b      	lsrs	r3, r3, #9
 8000884:	4698      	mov	r8, r3
 8000886:	007b      	lsls	r3, r7, #1
 8000888:	24ff      	movs	r4, #255	@ 0xff
 800088a:	0e1b      	lsrs	r3, r3, #24
 800088c:	0fff      	lsrs	r7, r7, #31
 800088e:	2b00      	cmp	r3, #0
 8000890:	d18a      	bne.n	80007a8 <__aeabi_fmul+0x40>
 8000892:	4642      	mov	r2, r8
 8000894:	2a00      	cmp	r2, #0
 8000896:	d164      	bne.n	8000962 <__aeabi_fmul+0x1fa>
 8000898:	4649      	mov	r1, r9
 800089a:	3201      	adds	r2, #1
 800089c:	4311      	orrs	r1, r2
 800089e:	4689      	mov	r9, r1
 80008a0:	290a      	cmp	r1, #10
 80008a2:	dc08      	bgt.n	80008b6 <__aeabi_fmul+0x14e>
 80008a4:	407d      	eors	r5, r7
 80008a6:	2001      	movs	r0, #1
 80008a8:	b2ea      	uxtb	r2, r5
 80008aa:	2902      	cmp	r1, #2
 80008ac:	dc91      	bgt.n	80007d2 <__aeabi_fmul+0x6a>
 80008ae:	0015      	movs	r5, r2
 80008b0:	2200      	movs	r2, #0
 80008b2:	e027      	b.n	8000904 <__aeabi_fmul+0x19c>
 80008b4:	0015      	movs	r5, r2
 80008b6:	4653      	mov	r3, sl
 80008b8:	2b02      	cmp	r3, #2
 80008ba:	d100      	bne.n	80008be <__aeabi_fmul+0x156>
 80008bc:	e093      	b.n	80009e6 <__aeabi_fmul+0x27e>
 80008be:	2b03      	cmp	r3, #3
 80008c0:	d01a      	beq.n	80008f8 <__aeabi_fmul+0x190>
 80008c2:	2b01      	cmp	r3, #1
 80008c4:	d12c      	bne.n	8000920 <__aeabi_fmul+0x1b8>
 80008c6:	2300      	movs	r3, #0
 80008c8:	2200      	movs	r2, #0
 80008ca:	e01b      	b.n	8000904 <__aeabi_fmul+0x19c>
 80008cc:	4643      	mov	r3, r8
 80008ce:	34ff      	adds	r4, #255	@ 0xff
 80008d0:	2b00      	cmp	r3, #0
 80008d2:	d055      	beq.n	8000980 <__aeabi_fmul+0x218>
 80008d4:	2103      	movs	r1, #3
 80008d6:	464b      	mov	r3, r9
 80008d8:	430b      	orrs	r3, r1
 80008da:	0019      	movs	r1, r3
 80008dc:	2b0a      	cmp	r3, #10
 80008de:	dc00      	bgt.n	80008e2 <__aeabi_fmul+0x17a>
 80008e0:	e092      	b.n	8000a08 <__aeabi_fmul+0x2a0>
 80008e2:	2b0f      	cmp	r3, #15
 80008e4:	d000      	beq.n	80008e8 <__aeabi_fmul+0x180>
 80008e6:	e08c      	b.n	8000a02 <__aeabi_fmul+0x29a>
 80008e8:	2280      	movs	r2, #128	@ 0x80
 80008ea:	03d2      	lsls	r2, r2, #15
 80008ec:	4216      	tst	r6, r2
 80008ee:	d003      	beq.n	80008f8 <__aeabi_fmul+0x190>
 80008f0:	4643      	mov	r3, r8
 80008f2:	4213      	tst	r3, r2
 80008f4:	d100      	bne.n	80008f8 <__aeabi_fmul+0x190>
 80008f6:	e07d      	b.n	80009f4 <__aeabi_fmul+0x28c>
 80008f8:	2280      	movs	r2, #128	@ 0x80
 80008fa:	03d2      	lsls	r2, r2, #15
 80008fc:	4332      	orrs	r2, r6
 80008fe:	0252      	lsls	r2, r2, #9
 8000900:	0a52      	lsrs	r2, r2, #9
 8000902:	23ff      	movs	r3, #255	@ 0xff
 8000904:	05d8      	lsls	r0, r3, #23
 8000906:	07ed      	lsls	r5, r5, #31
 8000908:	4310      	orrs	r0, r2
 800090a:	4328      	orrs	r0, r5
 800090c:	bce0      	pop	{r5, r6, r7}
 800090e:	46ba      	mov	sl, r7
 8000910:	46b1      	mov	r9, r6
 8000912:	46a8      	mov	r8, r5
 8000914:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000916:	2301      	movs	r3, #1
 8000918:	0015      	movs	r5, r2
 800091a:	0871      	lsrs	r1, r6, #1
 800091c:	401e      	ands	r6, r3
 800091e:	430e      	orrs	r6, r1
 8000920:	0023      	movs	r3, r4
 8000922:	3380      	adds	r3, #128	@ 0x80
 8000924:	1c61      	adds	r1, r4, #1
 8000926:	2b00      	cmp	r3, #0
 8000928:	dd41      	ble.n	80009ae <__aeabi_fmul+0x246>
 800092a:	0772      	lsls	r2, r6, #29
 800092c:	d094      	beq.n	8000858 <__aeabi_fmul+0xf0>
 800092e:	220f      	movs	r2, #15
 8000930:	4032      	ands	r2, r6
 8000932:	2a04      	cmp	r2, #4
 8000934:	d000      	beq.n	8000938 <__aeabi_fmul+0x1d0>
 8000936:	e78e      	b.n	8000856 <__aeabi_fmul+0xee>
 8000938:	e78e      	b.n	8000858 <__aeabi_fmul+0xf0>
 800093a:	2e00      	cmp	r6, #0
 800093c:	d105      	bne.n	800094a <__aeabi_fmul+0x1e2>
 800093e:	2304      	movs	r3, #4
 8000940:	4699      	mov	r9, r3
 8000942:	3b03      	subs	r3, #3
 8000944:	2400      	movs	r4, #0
 8000946:	469a      	mov	sl, r3
 8000948:	e726      	b.n	8000798 <__aeabi_fmul+0x30>
 800094a:	0030      	movs	r0, r6
 800094c:	f002 f920 	bl	8002b90 <__clzsi2>
 8000950:	2476      	movs	r4, #118	@ 0x76
 8000952:	1f43      	subs	r3, r0, #5
 8000954:	409e      	lsls	r6, r3
 8000956:	2300      	movs	r3, #0
 8000958:	4264      	negs	r4, r4
 800095a:	4699      	mov	r9, r3
 800095c:	469a      	mov	sl, r3
 800095e:	1a24      	subs	r4, r4, r0
 8000960:	e71a      	b.n	8000798 <__aeabi_fmul+0x30>
 8000962:	4640      	mov	r0, r8
 8000964:	f002 f914 	bl	8002b90 <__clzsi2>
 8000968:	464b      	mov	r3, r9
 800096a:	1a24      	subs	r4, r4, r0
 800096c:	3c76      	subs	r4, #118	@ 0x76
 800096e:	2b0a      	cmp	r3, #10
 8000970:	dca1      	bgt.n	80008b6 <__aeabi_fmul+0x14e>
 8000972:	4643      	mov	r3, r8
 8000974:	3805      	subs	r0, #5
 8000976:	4083      	lsls	r3, r0
 8000978:	407d      	eors	r5, r7
 800097a:	4698      	mov	r8, r3
 800097c:	b2ea      	uxtb	r2, r5
 800097e:	e724      	b.n	80007ca <__aeabi_fmul+0x62>
 8000980:	464a      	mov	r2, r9
 8000982:	3302      	adds	r3, #2
 8000984:	4313      	orrs	r3, r2
 8000986:	002a      	movs	r2, r5
 8000988:	407a      	eors	r2, r7
 800098a:	b2d2      	uxtb	r2, r2
 800098c:	2b0a      	cmp	r3, #10
 800098e:	dc92      	bgt.n	80008b6 <__aeabi_fmul+0x14e>
 8000990:	4649      	mov	r1, r9
 8000992:	0015      	movs	r5, r2
 8000994:	2900      	cmp	r1, #0
 8000996:	d026      	beq.n	80009e6 <__aeabi_fmul+0x27e>
 8000998:	4699      	mov	r9, r3
 800099a:	2002      	movs	r0, #2
 800099c:	e719      	b.n	80007d2 <__aeabi_fmul+0x6a>
 800099e:	230c      	movs	r3, #12
 80009a0:	4699      	mov	r9, r3
 80009a2:	3b09      	subs	r3, #9
 80009a4:	24ff      	movs	r4, #255	@ 0xff
 80009a6:	469a      	mov	sl, r3
 80009a8:	e6f6      	b.n	8000798 <__aeabi_fmul+0x30>
 80009aa:	0015      	movs	r5, r2
 80009ac:	0021      	movs	r1, r4
 80009ae:	2201      	movs	r2, #1
 80009b0:	1ad3      	subs	r3, r2, r3
 80009b2:	2b1b      	cmp	r3, #27
 80009b4:	dd00      	ble.n	80009b8 <__aeabi_fmul+0x250>
 80009b6:	e786      	b.n	80008c6 <__aeabi_fmul+0x15e>
 80009b8:	319e      	adds	r1, #158	@ 0x9e
 80009ba:	0032      	movs	r2, r6
 80009bc:	408e      	lsls	r6, r1
 80009be:	40da      	lsrs	r2, r3
 80009c0:	1e73      	subs	r3, r6, #1
 80009c2:	419e      	sbcs	r6, r3
 80009c4:	4332      	orrs	r2, r6
 80009c6:	0753      	lsls	r3, r2, #29
 80009c8:	d004      	beq.n	80009d4 <__aeabi_fmul+0x26c>
 80009ca:	230f      	movs	r3, #15
 80009cc:	4013      	ands	r3, r2
 80009ce:	2b04      	cmp	r3, #4
 80009d0:	d000      	beq.n	80009d4 <__aeabi_fmul+0x26c>
 80009d2:	3204      	adds	r2, #4
 80009d4:	0153      	lsls	r3, r2, #5
 80009d6:	d510      	bpl.n	80009fa <__aeabi_fmul+0x292>
 80009d8:	2301      	movs	r3, #1
 80009da:	2200      	movs	r2, #0
 80009dc:	e792      	b.n	8000904 <__aeabi_fmul+0x19c>
 80009de:	003d      	movs	r5, r7
 80009e0:	4646      	mov	r6, r8
 80009e2:	4682      	mov	sl, r0
 80009e4:	e767      	b.n	80008b6 <__aeabi_fmul+0x14e>
 80009e6:	23ff      	movs	r3, #255	@ 0xff
 80009e8:	2200      	movs	r2, #0
 80009ea:	e78b      	b.n	8000904 <__aeabi_fmul+0x19c>
 80009ec:	2280      	movs	r2, #128	@ 0x80
 80009ee:	2500      	movs	r5, #0
 80009f0:	03d2      	lsls	r2, r2, #15
 80009f2:	e786      	b.n	8000902 <__aeabi_fmul+0x19a>
 80009f4:	003d      	movs	r5, r7
 80009f6:	431a      	orrs	r2, r3
 80009f8:	e783      	b.n	8000902 <__aeabi_fmul+0x19a>
 80009fa:	0192      	lsls	r2, r2, #6
 80009fc:	2300      	movs	r3, #0
 80009fe:	0a52      	lsrs	r2, r2, #9
 8000a00:	e780      	b.n	8000904 <__aeabi_fmul+0x19c>
 8000a02:	003d      	movs	r5, r7
 8000a04:	4646      	mov	r6, r8
 8000a06:	e777      	b.n	80008f8 <__aeabi_fmul+0x190>
 8000a08:	002a      	movs	r2, r5
 8000a0a:	2301      	movs	r3, #1
 8000a0c:	407a      	eors	r2, r7
 8000a0e:	408b      	lsls	r3, r1
 8000a10:	2003      	movs	r0, #3
 8000a12:	b2d2      	uxtb	r2, r2
 8000a14:	e6e9      	b.n	80007ea <__aeabi_fmul+0x82>
 8000a16:	46c0      	nop			@ (mov r8, r8)
 8000a18:	f7ffffff 	.word	0xf7ffffff

08000a1c <__aeabi_i2f>:
 8000a1c:	b570      	push	{r4, r5, r6, lr}
 8000a1e:	2800      	cmp	r0, #0
 8000a20:	d012      	beq.n	8000a48 <__aeabi_i2f+0x2c>
 8000a22:	17c3      	asrs	r3, r0, #31
 8000a24:	18c5      	adds	r5, r0, r3
 8000a26:	405d      	eors	r5, r3
 8000a28:	0fc4      	lsrs	r4, r0, #31
 8000a2a:	0028      	movs	r0, r5
 8000a2c:	f002 f8b0 	bl	8002b90 <__clzsi2>
 8000a30:	239e      	movs	r3, #158	@ 0x9e
 8000a32:	1a1b      	subs	r3, r3, r0
 8000a34:	2b96      	cmp	r3, #150	@ 0x96
 8000a36:	dc0f      	bgt.n	8000a58 <__aeabi_i2f+0x3c>
 8000a38:	2808      	cmp	r0, #8
 8000a3a:	d038      	beq.n	8000aae <__aeabi_i2f+0x92>
 8000a3c:	3808      	subs	r0, #8
 8000a3e:	4085      	lsls	r5, r0
 8000a40:	026d      	lsls	r5, r5, #9
 8000a42:	0a6d      	lsrs	r5, r5, #9
 8000a44:	b2d8      	uxtb	r0, r3
 8000a46:	e002      	b.n	8000a4e <__aeabi_i2f+0x32>
 8000a48:	2400      	movs	r4, #0
 8000a4a:	2000      	movs	r0, #0
 8000a4c:	2500      	movs	r5, #0
 8000a4e:	05c0      	lsls	r0, r0, #23
 8000a50:	4328      	orrs	r0, r5
 8000a52:	07e4      	lsls	r4, r4, #31
 8000a54:	4320      	orrs	r0, r4
 8000a56:	bd70      	pop	{r4, r5, r6, pc}
 8000a58:	2b99      	cmp	r3, #153	@ 0x99
 8000a5a:	dc14      	bgt.n	8000a86 <__aeabi_i2f+0x6a>
 8000a5c:	1f42      	subs	r2, r0, #5
 8000a5e:	4095      	lsls	r5, r2
 8000a60:	002a      	movs	r2, r5
 8000a62:	4915      	ldr	r1, [pc, #84]	@ (8000ab8 <__aeabi_i2f+0x9c>)
 8000a64:	4011      	ands	r1, r2
 8000a66:	0755      	lsls	r5, r2, #29
 8000a68:	d01c      	beq.n	8000aa4 <__aeabi_i2f+0x88>
 8000a6a:	250f      	movs	r5, #15
 8000a6c:	402a      	ands	r2, r5
 8000a6e:	2a04      	cmp	r2, #4
 8000a70:	d018      	beq.n	8000aa4 <__aeabi_i2f+0x88>
 8000a72:	3104      	adds	r1, #4
 8000a74:	08ca      	lsrs	r2, r1, #3
 8000a76:	0149      	lsls	r1, r1, #5
 8000a78:	d515      	bpl.n	8000aa6 <__aeabi_i2f+0x8a>
 8000a7a:	239f      	movs	r3, #159	@ 0x9f
 8000a7c:	0252      	lsls	r2, r2, #9
 8000a7e:	1a18      	subs	r0, r3, r0
 8000a80:	0a55      	lsrs	r5, r2, #9
 8000a82:	b2c0      	uxtb	r0, r0
 8000a84:	e7e3      	b.n	8000a4e <__aeabi_i2f+0x32>
 8000a86:	2205      	movs	r2, #5
 8000a88:	0029      	movs	r1, r5
 8000a8a:	1a12      	subs	r2, r2, r0
 8000a8c:	40d1      	lsrs	r1, r2
 8000a8e:	0002      	movs	r2, r0
 8000a90:	321b      	adds	r2, #27
 8000a92:	4095      	lsls	r5, r2
 8000a94:	002a      	movs	r2, r5
 8000a96:	1e55      	subs	r5, r2, #1
 8000a98:	41aa      	sbcs	r2, r5
 8000a9a:	430a      	orrs	r2, r1
 8000a9c:	4906      	ldr	r1, [pc, #24]	@ (8000ab8 <__aeabi_i2f+0x9c>)
 8000a9e:	4011      	ands	r1, r2
 8000aa0:	0755      	lsls	r5, r2, #29
 8000aa2:	d1e2      	bne.n	8000a6a <__aeabi_i2f+0x4e>
 8000aa4:	08ca      	lsrs	r2, r1, #3
 8000aa6:	0252      	lsls	r2, r2, #9
 8000aa8:	0a55      	lsrs	r5, r2, #9
 8000aaa:	b2d8      	uxtb	r0, r3
 8000aac:	e7cf      	b.n	8000a4e <__aeabi_i2f+0x32>
 8000aae:	026d      	lsls	r5, r5, #9
 8000ab0:	0a6d      	lsrs	r5, r5, #9
 8000ab2:	308e      	adds	r0, #142	@ 0x8e
 8000ab4:	e7cb      	b.n	8000a4e <__aeabi_i2f+0x32>
 8000ab6:	46c0      	nop			@ (mov r8, r8)
 8000ab8:	fbffffff 	.word	0xfbffffff

08000abc <__aeabi_dadd>:
 8000abc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000abe:	464f      	mov	r7, r9
 8000ac0:	4646      	mov	r6, r8
 8000ac2:	46d6      	mov	lr, sl
 8000ac4:	b5c0      	push	{r6, r7, lr}
 8000ac6:	b082      	sub	sp, #8
 8000ac8:	9000      	str	r0, [sp, #0]
 8000aca:	9101      	str	r1, [sp, #4]
 8000acc:	030e      	lsls	r6, r1, #12
 8000ace:	004c      	lsls	r4, r1, #1
 8000ad0:	0fcd      	lsrs	r5, r1, #31
 8000ad2:	0a71      	lsrs	r1, r6, #9
 8000ad4:	9e00      	ldr	r6, [sp, #0]
 8000ad6:	005f      	lsls	r7, r3, #1
 8000ad8:	0f76      	lsrs	r6, r6, #29
 8000ada:	430e      	orrs	r6, r1
 8000adc:	9900      	ldr	r1, [sp, #0]
 8000ade:	9200      	str	r2, [sp, #0]
 8000ae0:	9301      	str	r3, [sp, #4]
 8000ae2:	00c9      	lsls	r1, r1, #3
 8000ae4:	4689      	mov	r9, r1
 8000ae6:	0319      	lsls	r1, r3, #12
 8000ae8:	0d7b      	lsrs	r3, r7, #21
 8000aea:	4698      	mov	r8, r3
 8000aec:	9b01      	ldr	r3, [sp, #4]
 8000aee:	0a49      	lsrs	r1, r1, #9
 8000af0:	0fdb      	lsrs	r3, r3, #31
 8000af2:	469c      	mov	ip, r3
 8000af4:	9b00      	ldr	r3, [sp, #0]
 8000af6:	9a00      	ldr	r2, [sp, #0]
 8000af8:	0f5b      	lsrs	r3, r3, #29
 8000afa:	430b      	orrs	r3, r1
 8000afc:	4641      	mov	r1, r8
 8000afe:	0d64      	lsrs	r4, r4, #21
 8000b00:	00d2      	lsls	r2, r2, #3
 8000b02:	1a61      	subs	r1, r4, r1
 8000b04:	4565      	cmp	r5, ip
 8000b06:	d100      	bne.n	8000b0a <__aeabi_dadd+0x4e>
 8000b08:	e0a6      	b.n	8000c58 <__aeabi_dadd+0x19c>
 8000b0a:	2900      	cmp	r1, #0
 8000b0c:	dd72      	ble.n	8000bf4 <__aeabi_dadd+0x138>
 8000b0e:	4647      	mov	r7, r8
 8000b10:	2f00      	cmp	r7, #0
 8000b12:	d100      	bne.n	8000b16 <__aeabi_dadd+0x5a>
 8000b14:	e0dd      	b.n	8000cd2 <__aeabi_dadd+0x216>
 8000b16:	4fcc      	ldr	r7, [pc, #816]	@ (8000e48 <__aeabi_dadd+0x38c>)
 8000b18:	42bc      	cmp	r4, r7
 8000b1a:	d100      	bne.n	8000b1e <__aeabi_dadd+0x62>
 8000b1c:	e19a      	b.n	8000e54 <__aeabi_dadd+0x398>
 8000b1e:	2701      	movs	r7, #1
 8000b20:	2938      	cmp	r1, #56	@ 0x38
 8000b22:	dc17      	bgt.n	8000b54 <__aeabi_dadd+0x98>
 8000b24:	2780      	movs	r7, #128	@ 0x80
 8000b26:	043f      	lsls	r7, r7, #16
 8000b28:	433b      	orrs	r3, r7
 8000b2a:	291f      	cmp	r1, #31
 8000b2c:	dd00      	ble.n	8000b30 <__aeabi_dadd+0x74>
 8000b2e:	e1dd      	b.n	8000eec <__aeabi_dadd+0x430>
 8000b30:	2720      	movs	r7, #32
 8000b32:	1a78      	subs	r0, r7, r1
 8000b34:	001f      	movs	r7, r3
 8000b36:	4087      	lsls	r7, r0
 8000b38:	46ba      	mov	sl, r7
 8000b3a:	0017      	movs	r7, r2
 8000b3c:	40cf      	lsrs	r7, r1
 8000b3e:	4684      	mov	ip, r0
 8000b40:	0038      	movs	r0, r7
 8000b42:	4657      	mov	r7, sl
 8000b44:	4307      	orrs	r7, r0
 8000b46:	4660      	mov	r0, ip
 8000b48:	4082      	lsls	r2, r0
 8000b4a:	40cb      	lsrs	r3, r1
 8000b4c:	1e50      	subs	r0, r2, #1
 8000b4e:	4182      	sbcs	r2, r0
 8000b50:	1af6      	subs	r6, r6, r3
 8000b52:	4317      	orrs	r7, r2
 8000b54:	464b      	mov	r3, r9
 8000b56:	1bdf      	subs	r7, r3, r7
 8000b58:	45b9      	cmp	r9, r7
 8000b5a:	4180      	sbcs	r0, r0
 8000b5c:	4240      	negs	r0, r0
 8000b5e:	1a36      	subs	r6, r6, r0
 8000b60:	0233      	lsls	r3, r6, #8
 8000b62:	d400      	bmi.n	8000b66 <__aeabi_dadd+0xaa>
 8000b64:	e0ff      	b.n	8000d66 <__aeabi_dadd+0x2aa>
 8000b66:	0276      	lsls	r6, r6, #9
 8000b68:	0a76      	lsrs	r6, r6, #9
 8000b6a:	2e00      	cmp	r6, #0
 8000b6c:	d100      	bne.n	8000b70 <__aeabi_dadd+0xb4>
 8000b6e:	e13c      	b.n	8000dea <__aeabi_dadd+0x32e>
 8000b70:	0030      	movs	r0, r6
 8000b72:	f002 f80d 	bl	8002b90 <__clzsi2>
 8000b76:	0003      	movs	r3, r0
 8000b78:	3b08      	subs	r3, #8
 8000b7a:	2120      	movs	r1, #32
 8000b7c:	0038      	movs	r0, r7
 8000b7e:	1aca      	subs	r2, r1, r3
 8000b80:	40d0      	lsrs	r0, r2
 8000b82:	409e      	lsls	r6, r3
 8000b84:	0002      	movs	r2, r0
 8000b86:	409f      	lsls	r7, r3
 8000b88:	4332      	orrs	r2, r6
 8000b8a:	429c      	cmp	r4, r3
 8000b8c:	dd00      	ble.n	8000b90 <__aeabi_dadd+0xd4>
 8000b8e:	e1a6      	b.n	8000ede <__aeabi_dadd+0x422>
 8000b90:	1b18      	subs	r0, r3, r4
 8000b92:	3001      	adds	r0, #1
 8000b94:	1a09      	subs	r1, r1, r0
 8000b96:	003e      	movs	r6, r7
 8000b98:	408f      	lsls	r7, r1
 8000b9a:	40c6      	lsrs	r6, r0
 8000b9c:	1e7b      	subs	r3, r7, #1
 8000b9e:	419f      	sbcs	r7, r3
 8000ba0:	0013      	movs	r3, r2
 8000ba2:	408b      	lsls	r3, r1
 8000ba4:	4337      	orrs	r7, r6
 8000ba6:	431f      	orrs	r7, r3
 8000ba8:	40c2      	lsrs	r2, r0
 8000baa:	003b      	movs	r3, r7
 8000bac:	0016      	movs	r6, r2
 8000bae:	2400      	movs	r4, #0
 8000bb0:	4313      	orrs	r3, r2
 8000bb2:	d100      	bne.n	8000bb6 <__aeabi_dadd+0xfa>
 8000bb4:	e1df      	b.n	8000f76 <__aeabi_dadd+0x4ba>
 8000bb6:	077b      	lsls	r3, r7, #29
 8000bb8:	d100      	bne.n	8000bbc <__aeabi_dadd+0x100>
 8000bba:	e332      	b.n	8001222 <__aeabi_dadd+0x766>
 8000bbc:	230f      	movs	r3, #15
 8000bbe:	003a      	movs	r2, r7
 8000bc0:	403b      	ands	r3, r7
 8000bc2:	2b04      	cmp	r3, #4
 8000bc4:	d004      	beq.n	8000bd0 <__aeabi_dadd+0x114>
 8000bc6:	1d3a      	adds	r2, r7, #4
 8000bc8:	42ba      	cmp	r2, r7
 8000bca:	41bf      	sbcs	r7, r7
 8000bcc:	427f      	negs	r7, r7
 8000bce:	19f6      	adds	r6, r6, r7
 8000bd0:	0233      	lsls	r3, r6, #8
 8000bd2:	d400      	bmi.n	8000bd6 <__aeabi_dadd+0x11a>
 8000bd4:	e323      	b.n	800121e <__aeabi_dadd+0x762>
 8000bd6:	4b9c      	ldr	r3, [pc, #624]	@ (8000e48 <__aeabi_dadd+0x38c>)
 8000bd8:	3401      	adds	r4, #1
 8000bda:	429c      	cmp	r4, r3
 8000bdc:	d100      	bne.n	8000be0 <__aeabi_dadd+0x124>
 8000bde:	e0b4      	b.n	8000d4a <__aeabi_dadd+0x28e>
 8000be0:	4b9a      	ldr	r3, [pc, #616]	@ (8000e4c <__aeabi_dadd+0x390>)
 8000be2:	0564      	lsls	r4, r4, #21
 8000be4:	401e      	ands	r6, r3
 8000be6:	0d64      	lsrs	r4, r4, #21
 8000be8:	0777      	lsls	r7, r6, #29
 8000bea:	08d2      	lsrs	r2, r2, #3
 8000bec:	0276      	lsls	r6, r6, #9
 8000bee:	4317      	orrs	r7, r2
 8000bf0:	0b36      	lsrs	r6, r6, #12
 8000bf2:	e0ac      	b.n	8000d4e <__aeabi_dadd+0x292>
 8000bf4:	2900      	cmp	r1, #0
 8000bf6:	d100      	bne.n	8000bfa <__aeabi_dadd+0x13e>
 8000bf8:	e07e      	b.n	8000cf8 <__aeabi_dadd+0x23c>
 8000bfa:	4641      	mov	r1, r8
 8000bfc:	1b09      	subs	r1, r1, r4
 8000bfe:	2c00      	cmp	r4, #0
 8000c00:	d000      	beq.n	8000c04 <__aeabi_dadd+0x148>
 8000c02:	e160      	b.n	8000ec6 <__aeabi_dadd+0x40a>
 8000c04:	0034      	movs	r4, r6
 8000c06:	4648      	mov	r0, r9
 8000c08:	4304      	orrs	r4, r0
 8000c0a:	d100      	bne.n	8000c0e <__aeabi_dadd+0x152>
 8000c0c:	e1c9      	b.n	8000fa2 <__aeabi_dadd+0x4e6>
 8000c0e:	1e4c      	subs	r4, r1, #1
 8000c10:	2901      	cmp	r1, #1
 8000c12:	d100      	bne.n	8000c16 <__aeabi_dadd+0x15a>
 8000c14:	e22e      	b.n	8001074 <__aeabi_dadd+0x5b8>
 8000c16:	4d8c      	ldr	r5, [pc, #560]	@ (8000e48 <__aeabi_dadd+0x38c>)
 8000c18:	42a9      	cmp	r1, r5
 8000c1a:	d100      	bne.n	8000c1e <__aeabi_dadd+0x162>
 8000c1c:	e224      	b.n	8001068 <__aeabi_dadd+0x5ac>
 8000c1e:	2701      	movs	r7, #1
 8000c20:	2c38      	cmp	r4, #56	@ 0x38
 8000c22:	dc11      	bgt.n	8000c48 <__aeabi_dadd+0x18c>
 8000c24:	0021      	movs	r1, r4
 8000c26:	291f      	cmp	r1, #31
 8000c28:	dd00      	ble.n	8000c2c <__aeabi_dadd+0x170>
 8000c2a:	e20b      	b.n	8001044 <__aeabi_dadd+0x588>
 8000c2c:	2420      	movs	r4, #32
 8000c2e:	0037      	movs	r7, r6
 8000c30:	4648      	mov	r0, r9
 8000c32:	1a64      	subs	r4, r4, r1
 8000c34:	40a7      	lsls	r7, r4
 8000c36:	40c8      	lsrs	r0, r1
 8000c38:	4307      	orrs	r7, r0
 8000c3a:	4648      	mov	r0, r9
 8000c3c:	40a0      	lsls	r0, r4
 8000c3e:	40ce      	lsrs	r6, r1
 8000c40:	1e44      	subs	r4, r0, #1
 8000c42:	41a0      	sbcs	r0, r4
 8000c44:	1b9b      	subs	r3, r3, r6
 8000c46:	4307      	orrs	r7, r0
 8000c48:	1bd7      	subs	r7, r2, r7
 8000c4a:	42ba      	cmp	r2, r7
 8000c4c:	4192      	sbcs	r2, r2
 8000c4e:	4252      	negs	r2, r2
 8000c50:	4665      	mov	r5, ip
 8000c52:	4644      	mov	r4, r8
 8000c54:	1a9e      	subs	r6, r3, r2
 8000c56:	e783      	b.n	8000b60 <__aeabi_dadd+0xa4>
 8000c58:	2900      	cmp	r1, #0
 8000c5a:	dc00      	bgt.n	8000c5e <__aeabi_dadd+0x1a2>
 8000c5c:	e09c      	b.n	8000d98 <__aeabi_dadd+0x2dc>
 8000c5e:	4647      	mov	r7, r8
 8000c60:	2f00      	cmp	r7, #0
 8000c62:	d167      	bne.n	8000d34 <__aeabi_dadd+0x278>
 8000c64:	001f      	movs	r7, r3
 8000c66:	4317      	orrs	r7, r2
 8000c68:	d100      	bne.n	8000c6c <__aeabi_dadd+0x1b0>
 8000c6a:	e0e4      	b.n	8000e36 <__aeabi_dadd+0x37a>
 8000c6c:	1e48      	subs	r0, r1, #1
 8000c6e:	2901      	cmp	r1, #1
 8000c70:	d100      	bne.n	8000c74 <__aeabi_dadd+0x1b8>
 8000c72:	e19b      	b.n	8000fac <__aeabi_dadd+0x4f0>
 8000c74:	4f74      	ldr	r7, [pc, #464]	@ (8000e48 <__aeabi_dadd+0x38c>)
 8000c76:	42b9      	cmp	r1, r7
 8000c78:	d100      	bne.n	8000c7c <__aeabi_dadd+0x1c0>
 8000c7a:	e0eb      	b.n	8000e54 <__aeabi_dadd+0x398>
 8000c7c:	2701      	movs	r7, #1
 8000c7e:	0001      	movs	r1, r0
 8000c80:	2838      	cmp	r0, #56	@ 0x38
 8000c82:	dc11      	bgt.n	8000ca8 <__aeabi_dadd+0x1ec>
 8000c84:	291f      	cmp	r1, #31
 8000c86:	dd00      	ble.n	8000c8a <__aeabi_dadd+0x1ce>
 8000c88:	e1c7      	b.n	800101a <__aeabi_dadd+0x55e>
 8000c8a:	2720      	movs	r7, #32
 8000c8c:	1a78      	subs	r0, r7, r1
 8000c8e:	001f      	movs	r7, r3
 8000c90:	4684      	mov	ip, r0
 8000c92:	4087      	lsls	r7, r0
 8000c94:	0010      	movs	r0, r2
 8000c96:	40c8      	lsrs	r0, r1
 8000c98:	4307      	orrs	r7, r0
 8000c9a:	4660      	mov	r0, ip
 8000c9c:	4082      	lsls	r2, r0
 8000c9e:	40cb      	lsrs	r3, r1
 8000ca0:	1e50      	subs	r0, r2, #1
 8000ca2:	4182      	sbcs	r2, r0
 8000ca4:	18f6      	adds	r6, r6, r3
 8000ca6:	4317      	orrs	r7, r2
 8000ca8:	444f      	add	r7, r9
 8000caa:	454f      	cmp	r7, r9
 8000cac:	4180      	sbcs	r0, r0
 8000cae:	4240      	negs	r0, r0
 8000cb0:	1836      	adds	r6, r6, r0
 8000cb2:	0233      	lsls	r3, r6, #8
 8000cb4:	d557      	bpl.n	8000d66 <__aeabi_dadd+0x2aa>
 8000cb6:	4b64      	ldr	r3, [pc, #400]	@ (8000e48 <__aeabi_dadd+0x38c>)
 8000cb8:	3401      	adds	r4, #1
 8000cba:	429c      	cmp	r4, r3
 8000cbc:	d045      	beq.n	8000d4a <__aeabi_dadd+0x28e>
 8000cbe:	2101      	movs	r1, #1
 8000cc0:	4b62      	ldr	r3, [pc, #392]	@ (8000e4c <__aeabi_dadd+0x390>)
 8000cc2:	087a      	lsrs	r2, r7, #1
 8000cc4:	401e      	ands	r6, r3
 8000cc6:	4039      	ands	r1, r7
 8000cc8:	430a      	orrs	r2, r1
 8000cca:	07f7      	lsls	r7, r6, #31
 8000ccc:	4317      	orrs	r7, r2
 8000cce:	0876      	lsrs	r6, r6, #1
 8000cd0:	e771      	b.n	8000bb6 <__aeabi_dadd+0xfa>
 8000cd2:	001f      	movs	r7, r3
 8000cd4:	4317      	orrs	r7, r2
 8000cd6:	d100      	bne.n	8000cda <__aeabi_dadd+0x21e>
 8000cd8:	e0ad      	b.n	8000e36 <__aeabi_dadd+0x37a>
 8000cda:	1e4f      	subs	r7, r1, #1
 8000cdc:	46bc      	mov	ip, r7
 8000cde:	2901      	cmp	r1, #1
 8000ce0:	d100      	bne.n	8000ce4 <__aeabi_dadd+0x228>
 8000ce2:	e182      	b.n	8000fea <__aeabi_dadd+0x52e>
 8000ce4:	4f58      	ldr	r7, [pc, #352]	@ (8000e48 <__aeabi_dadd+0x38c>)
 8000ce6:	42b9      	cmp	r1, r7
 8000ce8:	d100      	bne.n	8000cec <__aeabi_dadd+0x230>
 8000cea:	e190      	b.n	800100e <__aeabi_dadd+0x552>
 8000cec:	4661      	mov	r1, ip
 8000cee:	2701      	movs	r7, #1
 8000cf0:	2938      	cmp	r1, #56	@ 0x38
 8000cf2:	dd00      	ble.n	8000cf6 <__aeabi_dadd+0x23a>
 8000cf4:	e72e      	b.n	8000b54 <__aeabi_dadd+0x98>
 8000cf6:	e718      	b.n	8000b2a <__aeabi_dadd+0x6e>
 8000cf8:	4f55      	ldr	r7, [pc, #340]	@ (8000e50 <__aeabi_dadd+0x394>)
 8000cfa:	1c61      	adds	r1, r4, #1
 8000cfc:	4239      	tst	r1, r7
 8000cfe:	d000      	beq.n	8000d02 <__aeabi_dadd+0x246>
 8000d00:	e0d0      	b.n	8000ea4 <__aeabi_dadd+0x3e8>
 8000d02:	0031      	movs	r1, r6
 8000d04:	4648      	mov	r0, r9
 8000d06:	001f      	movs	r7, r3
 8000d08:	4301      	orrs	r1, r0
 8000d0a:	4317      	orrs	r7, r2
 8000d0c:	2c00      	cmp	r4, #0
 8000d0e:	d000      	beq.n	8000d12 <__aeabi_dadd+0x256>
 8000d10:	e13d      	b.n	8000f8e <__aeabi_dadd+0x4d2>
 8000d12:	2900      	cmp	r1, #0
 8000d14:	d100      	bne.n	8000d18 <__aeabi_dadd+0x25c>
 8000d16:	e1bc      	b.n	8001092 <__aeabi_dadd+0x5d6>
 8000d18:	2f00      	cmp	r7, #0
 8000d1a:	d000      	beq.n	8000d1e <__aeabi_dadd+0x262>
 8000d1c:	e1bf      	b.n	800109e <__aeabi_dadd+0x5e2>
 8000d1e:	464b      	mov	r3, r9
 8000d20:	2100      	movs	r1, #0
 8000d22:	08d8      	lsrs	r0, r3, #3
 8000d24:	0777      	lsls	r7, r6, #29
 8000d26:	4307      	orrs	r7, r0
 8000d28:	08f0      	lsrs	r0, r6, #3
 8000d2a:	0306      	lsls	r6, r0, #12
 8000d2c:	054c      	lsls	r4, r1, #21
 8000d2e:	0b36      	lsrs	r6, r6, #12
 8000d30:	0d64      	lsrs	r4, r4, #21
 8000d32:	e00c      	b.n	8000d4e <__aeabi_dadd+0x292>
 8000d34:	4f44      	ldr	r7, [pc, #272]	@ (8000e48 <__aeabi_dadd+0x38c>)
 8000d36:	42bc      	cmp	r4, r7
 8000d38:	d100      	bne.n	8000d3c <__aeabi_dadd+0x280>
 8000d3a:	e08b      	b.n	8000e54 <__aeabi_dadd+0x398>
 8000d3c:	2701      	movs	r7, #1
 8000d3e:	2938      	cmp	r1, #56	@ 0x38
 8000d40:	dcb2      	bgt.n	8000ca8 <__aeabi_dadd+0x1ec>
 8000d42:	2780      	movs	r7, #128	@ 0x80
 8000d44:	043f      	lsls	r7, r7, #16
 8000d46:	433b      	orrs	r3, r7
 8000d48:	e79c      	b.n	8000c84 <__aeabi_dadd+0x1c8>
 8000d4a:	2600      	movs	r6, #0
 8000d4c:	2700      	movs	r7, #0
 8000d4e:	0524      	lsls	r4, r4, #20
 8000d50:	4334      	orrs	r4, r6
 8000d52:	07ed      	lsls	r5, r5, #31
 8000d54:	432c      	orrs	r4, r5
 8000d56:	0038      	movs	r0, r7
 8000d58:	0021      	movs	r1, r4
 8000d5a:	b002      	add	sp, #8
 8000d5c:	bce0      	pop	{r5, r6, r7}
 8000d5e:	46ba      	mov	sl, r7
 8000d60:	46b1      	mov	r9, r6
 8000d62:	46a8      	mov	r8, r5
 8000d64:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d66:	077b      	lsls	r3, r7, #29
 8000d68:	d004      	beq.n	8000d74 <__aeabi_dadd+0x2b8>
 8000d6a:	230f      	movs	r3, #15
 8000d6c:	403b      	ands	r3, r7
 8000d6e:	2b04      	cmp	r3, #4
 8000d70:	d000      	beq.n	8000d74 <__aeabi_dadd+0x2b8>
 8000d72:	e728      	b.n	8000bc6 <__aeabi_dadd+0x10a>
 8000d74:	08f8      	lsrs	r0, r7, #3
 8000d76:	4b34      	ldr	r3, [pc, #208]	@ (8000e48 <__aeabi_dadd+0x38c>)
 8000d78:	0777      	lsls	r7, r6, #29
 8000d7a:	4307      	orrs	r7, r0
 8000d7c:	08f0      	lsrs	r0, r6, #3
 8000d7e:	429c      	cmp	r4, r3
 8000d80:	d000      	beq.n	8000d84 <__aeabi_dadd+0x2c8>
 8000d82:	e24a      	b.n	800121a <__aeabi_dadd+0x75e>
 8000d84:	003b      	movs	r3, r7
 8000d86:	4303      	orrs	r3, r0
 8000d88:	d059      	beq.n	8000e3e <__aeabi_dadd+0x382>
 8000d8a:	2680      	movs	r6, #128	@ 0x80
 8000d8c:	0336      	lsls	r6, r6, #12
 8000d8e:	4306      	orrs	r6, r0
 8000d90:	0336      	lsls	r6, r6, #12
 8000d92:	4c2d      	ldr	r4, [pc, #180]	@ (8000e48 <__aeabi_dadd+0x38c>)
 8000d94:	0b36      	lsrs	r6, r6, #12
 8000d96:	e7da      	b.n	8000d4e <__aeabi_dadd+0x292>
 8000d98:	2900      	cmp	r1, #0
 8000d9a:	d061      	beq.n	8000e60 <__aeabi_dadd+0x3a4>
 8000d9c:	4641      	mov	r1, r8
 8000d9e:	1b09      	subs	r1, r1, r4
 8000da0:	2c00      	cmp	r4, #0
 8000da2:	d100      	bne.n	8000da6 <__aeabi_dadd+0x2ea>
 8000da4:	e0b9      	b.n	8000f1a <__aeabi_dadd+0x45e>
 8000da6:	4c28      	ldr	r4, [pc, #160]	@ (8000e48 <__aeabi_dadd+0x38c>)
 8000da8:	45a0      	cmp	r8, r4
 8000daa:	d100      	bne.n	8000dae <__aeabi_dadd+0x2f2>
 8000dac:	e1a5      	b.n	80010fa <__aeabi_dadd+0x63e>
 8000dae:	2701      	movs	r7, #1
 8000db0:	2938      	cmp	r1, #56	@ 0x38
 8000db2:	dc13      	bgt.n	8000ddc <__aeabi_dadd+0x320>
 8000db4:	2480      	movs	r4, #128	@ 0x80
 8000db6:	0424      	lsls	r4, r4, #16
 8000db8:	4326      	orrs	r6, r4
 8000dba:	291f      	cmp	r1, #31
 8000dbc:	dd00      	ble.n	8000dc0 <__aeabi_dadd+0x304>
 8000dbe:	e1c8      	b.n	8001152 <__aeabi_dadd+0x696>
 8000dc0:	2420      	movs	r4, #32
 8000dc2:	0037      	movs	r7, r6
 8000dc4:	4648      	mov	r0, r9
 8000dc6:	1a64      	subs	r4, r4, r1
 8000dc8:	40a7      	lsls	r7, r4
 8000dca:	40c8      	lsrs	r0, r1
 8000dcc:	4307      	orrs	r7, r0
 8000dce:	4648      	mov	r0, r9
 8000dd0:	40a0      	lsls	r0, r4
 8000dd2:	40ce      	lsrs	r6, r1
 8000dd4:	1e44      	subs	r4, r0, #1
 8000dd6:	41a0      	sbcs	r0, r4
 8000dd8:	199b      	adds	r3, r3, r6
 8000dda:	4307      	orrs	r7, r0
 8000ddc:	18bf      	adds	r7, r7, r2
 8000dde:	4297      	cmp	r7, r2
 8000de0:	4192      	sbcs	r2, r2
 8000de2:	4252      	negs	r2, r2
 8000de4:	4644      	mov	r4, r8
 8000de6:	18d6      	adds	r6, r2, r3
 8000de8:	e763      	b.n	8000cb2 <__aeabi_dadd+0x1f6>
 8000dea:	0038      	movs	r0, r7
 8000dec:	f001 fed0 	bl	8002b90 <__clzsi2>
 8000df0:	0003      	movs	r3, r0
 8000df2:	3318      	adds	r3, #24
 8000df4:	2b1f      	cmp	r3, #31
 8000df6:	dc00      	bgt.n	8000dfa <__aeabi_dadd+0x33e>
 8000df8:	e6bf      	b.n	8000b7a <__aeabi_dadd+0xbe>
 8000dfa:	003a      	movs	r2, r7
 8000dfc:	3808      	subs	r0, #8
 8000dfe:	4082      	lsls	r2, r0
 8000e00:	429c      	cmp	r4, r3
 8000e02:	dd00      	ble.n	8000e06 <__aeabi_dadd+0x34a>
 8000e04:	e083      	b.n	8000f0e <__aeabi_dadd+0x452>
 8000e06:	1b1b      	subs	r3, r3, r4
 8000e08:	1c58      	adds	r0, r3, #1
 8000e0a:	281f      	cmp	r0, #31
 8000e0c:	dc00      	bgt.n	8000e10 <__aeabi_dadd+0x354>
 8000e0e:	e1b4      	b.n	800117a <__aeabi_dadd+0x6be>
 8000e10:	0017      	movs	r7, r2
 8000e12:	3b1f      	subs	r3, #31
 8000e14:	40df      	lsrs	r7, r3
 8000e16:	2820      	cmp	r0, #32
 8000e18:	d005      	beq.n	8000e26 <__aeabi_dadd+0x36a>
 8000e1a:	2340      	movs	r3, #64	@ 0x40
 8000e1c:	1a1b      	subs	r3, r3, r0
 8000e1e:	409a      	lsls	r2, r3
 8000e20:	1e53      	subs	r3, r2, #1
 8000e22:	419a      	sbcs	r2, r3
 8000e24:	4317      	orrs	r7, r2
 8000e26:	2400      	movs	r4, #0
 8000e28:	2f00      	cmp	r7, #0
 8000e2a:	d00a      	beq.n	8000e42 <__aeabi_dadd+0x386>
 8000e2c:	077b      	lsls	r3, r7, #29
 8000e2e:	d000      	beq.n	8000e32 <__aeabi_dadd+0x376>
 8000e30:	e6c4      	b.n	8000bbc <__aeabi_dadd+0x100>
 8000e32:	0026      	movs	r6, r4
 8000e34:	e79e      	b.n	8000d74 <__aeabi_dadd+0x2b8>
 8000e36:	464b      	mov	r3, r9
 8000e38:	000c      	movs	r4, r1
 8000e3a:	08d8      	lsrs	r0, r3, #3
 8000e3c:	e79b      	b.n	8000d76 <__aeabi_dadd+0x2ba>
 8000e3e:	2700      	movs	r7, #0
 8000e40:	4c01      	ldr	r4, [pc, #4]	@ (8000e48 <__aeabi_dadd+0x38c>)
 8000e42:	2600      	movs	r6, #0
 8000e44:	e783      	b.n	8000d4e <__aeabi_dadd+0x292>
 8000e46:	46c0      	nop			@ (mov r8, r8)
 8000e48:	000007ff 	.word	0x000007ff
 8000e4c:	ff7fffff 	.word	0xff7fffff
 8000e50:	000007fe 	.word	0x000007fe
 8000e54:	464b      	mov	r3, r9
 8000e56:	0777      	lsls	r7, r6, #29
 8000e58:	08d8      	lsrs	r0, r3, #3
 8000e5a:	4307      	orrs	r7, r0
 8000e5c:	08f0      	lsrs	r0, r6, #3
 8000e5e:	e791      	b.n	8000d84 <__aeabi_dadd+0x2c8>
 8000e60:	4fcd      	ldr	r7, [pc, #820]	@ (8001198 <__aeabi_dadd+0x6dc>)
 8000e62:	1c61      	adds	r1, r4, #1
 8000e64:	4239      	tst	r1, r7
 8000e66:	d16b      	bne.n	8000f40 <__aeabi_dadd+0x484>
 8000e68:	0031      	movs	r1, r6
 8000e6a:	4648      	mov	r0, r9
 8000e6c:	4301      	orrs	r1, r0
 8000e6e:	2c00      	cmp	r4, #0
 8000e70:	d000      	beq.n	8000e74 <__aeabi_dadd+0x3b8>
 8000e72:	e14b      	b.n	800110c <__aeabi_dadd+0x650>
 8000e74:	001f      	movs	r7, r3
 8000e76:	4317      	orrs	r7, r2
 8000e78:	2900      	cmp	r1, #0
 8000e7a:	d100      	bne.n	8000e7e <__aeabi_dadd+0x3c2>
 8000e7c:	e181      	b.n	8001182 <__aeabi_dadd+0x6c6>
 8000e7e:	2f00      	cmp	r7, #0
 8000e80:	d100      	bne.n	8000e84 <__aeabi_dadd+0x3c8>
 8000e82:	e74c      	b.n	8000d1e <__aeabi_dadd+0x262>
 8000e84:	444a      	add	r2, r9
 8000e86:	454a      	cmp	r2, r9
 8000e88:	4180      	sbcs	r0, r0
 8000e8a:	18f6      	adds	r6, r6, r3
 8000e8c:	4240      	negs	r0, r0
 8000e8e:	1836      	adds	r6, r6, r0
 8000e90:	0233      	lsls	r3, r6, #8
 8000e92:	d500      	bpl.n	8000e96 <__aeabi_dadd+0x3da>
 8000e94:	e1b0      	b.n	80011f8 <__aeabi_dadd+0x73c>
 8000e96:	0017      	movs	r7, r2
 8000e98:	4691      	mov	r9, r2
 8000e9a:	4337      	orrs	r7, r6
 8000e9c:	d000      	beq.n	8000ea0 <__aeabi_dadd+0x3e4>
 8000e9e:	e73e      	b.n	8000d1e <__aeabi_dadd+0x262>
 8000ea0:	2600      	movs	r6, #0
 8000ea2:	e754      	b.n	8000d4e <__aeabi_dadd+0x292>
 8000ea4:	4649      	mov	r1, r9
 8000ea6:	1a89      	subs	r1, r1, r2
 8000ea8:	4688      	mov	r8, r1
 8000eaa:	45c1      	cmp	r9, r8
 8000eac:	41bf      	sbcs	r7, r7
 8000eae:	1af1      	subs	r1, r6, r3
 8000eb0:	427f      	negs	r7, r7
 8000eb2:	1bc9      	subs	r1, r1, r7
 8000eb4:	020f      	lsls	r7, r1, #8
 8000eb6:	d461      	bmi.n	8000f7c <__aeabi_dadd+0x4c0>
 8000eb8:	4647      	mov	r7, r8
 8000eba:	430f      	orrs	r7, r1
 8000ebc:	d100      	bne.n	8000ec0 <__aeabi_dadd+0x404>
 8000ebe:	e0bd      	b.n	800103c <__aeabi_dadd+0x580>
 8000ec0:	000e      	movs	r6, r1
 8000ec2:	4647      	mov	r7, r8
 8000ec4:	e651      	b.n	8000b6a <__aeabi_dadd+0xae>
 8000ec6:	4cb5      	ldr	r4, [pc, #724]	@ (800119c <__aeabi_dadd+0x6e0>)
 8000ec8:	45a0      	cmp	r8, r4
 8000eca:	d100      	bne.n	8000ece <__aeabi_dadd+0x412>
 8000ecc:	e100      	b.n	80010d0 <__aeabi_dadd+0x614>
 8000ece:	2701      	movs	r7, #1
 8000ed0:	2938      	cmp	r1, #56	@ 0x38
 8000ed2:	dd00      	ble.n	8000ed6 <__aeabi_dadd+0x41a>
 8000ed4:	e6b8      	b.n	8000c48 <__aeabi_dadd+0x18c>
 8000ed6:	2480      	movs	r4, #128	@ 0x80
 8000ed8:	0424      	lsls	r4, r4, #16
 8000eda:	4326      	orrs	r6, r4
 8000edc:	e6a3      	b.n	8000c26 <__aeabi_dadd+0x16a>
 8000ede:	4eb0      	ldr	r6, [pc, #704]	@ (80011a0 <__aeabi_dadd+0x6e4>)
 8000ee0:	1ae4      	subs	r4, r4, r3
 8000ee2:	4016      	ands	r6, r2
 8000ee4:	077b      	lsls	r3, r7, #29
 8000ee6:	d000      	beq.n	8000eea <__aeabi_dadd+0x42e>
 8000ee8:	e73f      	b.n	8000d6a <__aeabi_dadd+0x2ae>
 8000eea:	e743      	b.n	8000d74 <__aeabi_dadd+0x2b8>
 8000eec:	000f      	movs	r7, r1
 8000eee:	0018      	movs	r0, r3
 8000ef0:	3f20      	subs	r7, #32
 8000ef2:	40f8      	lsrs	r0, r7
 8000ef4:	4684      	mov	ip, r0
 8000ef6:	2920      	cmp	r1, #32
 8000ef8:	d003      	beq.n	8000f02 <__aeabi_dadd+0x446>
 8000efa:	2740      	movs	r7, #64	@ 0x40
 8000efc:	1a79      	subs	r1, r7, r1
 8000efe:	408b      	lsls	r3, r1
 8000f00:	431a      	orrs	r2, r3
 8000f02:	1e53      	subs	r3, r2, #1
 8000f04:	419a      	sbcs	r2, r3
 8000f06:	4663      	mov	r3, ip
 8000f08:	0017      	movs	r7, r2
 8000f0a:	431f      	orrs	r7, r3
 8000f0c:	e622      	b.n	8000b54 <__aeabi_dadd+0x98>
 8000f0e:	48a4      	ldr	r0, [pc, #656]	@ (80011a0 <__aeabi_dadd+0x6e4>)
 8000f10:	1ae1      	subs	r1, r4, r3
 8000f12:	4010      	ands	r0, r2
 8000f14:	0747      	lsls	r7, r0, #29
 8000f16:	08c0      	lsrs	r0, r0, #3
 8000f18:	e707      	b.n	8000d2a <__aeabi_dadd+0x26e>
 8000f1a:	0034      	movs	r4, r6
 8000f1c:	4648      	mov	r0, r9
 8000f1e:	4304      	orrs	r4, r0
 8000f20:	d100      	bne.n	8000f24 <__aeabi_dadd+0x468>
 8000f22:	e0fa      	b.n	800111a <__aeabi_dadd+0x65e>
 8000f24:	1e4c      	subs	r4, r1, #1
 8000f26:	2901      	cmp	r1, #1
 8000f28:	d100      	bne.n	8000f2c <__aeabi_dadd+0x470>
 8000f2a:	e0d7      	b.n	80010dc <__aeabi_dadd+0x620>
 8000f2c:	4f9b      	ldr	r7, [pc, #620]	@ (800119c <__aeabi_dadd+0x6e0>)
 8000f2e:	42b9      	cmp	r1, r7
 8000f30:	d100      	bne.n	8000f34 <__aeabi_dadd+0x478>
 8000f32:	e0e2      	b.n	80010fa <__aeabi_dadd+0x63e>
 8000f34:	2701      	movs	r7, #1
 8000f36:	2c38      	cmp	r4, #56	@ 0x38
 8000f38:	dd00      	ble.n	8000f3c <__aeabi_dadd+0x480>
 8000f3a:	e74f      	b.n	8000ddc <__aeabi_dadd+0x320>
 8000f3c:	0021      	movs	r1, r4
 8000f3e:	e73c      	b.n	8000dba <__aeabi_dadd+0x2fe>
 8000f40:	4c96      	ldr	r4, [pc, #600]	@ (800119c <__aeabi_dadd+0x6e0>)
 8000f42:	42a1      	cmp	r1, r4
 8000f44:	d100      	bne.n	8000f48 <__aeabi_dadd+0x48c>
 8000f46:	e0dd      	b.n	8001104 <__aeabi_dadd+0x648>
 8000f48:	444a      	add	r2, r9
 8000f4a:	454a      	cmp	r2, r9
 8000f4c:	4180      	sbcs	r0, r0
 8000f4e:	18f3      	adds	r3, r6, r3
 8000f50:	4240      	negs	r0, r0
 8000f52:	1818      	adds	r0, r3, r0
 8000f54:	07c7      	lsls	r7, r0, #31
 8000f56:	0852      	lsrs	r2, r2, #1
 8000f58:	4317      	orrs	r7, r2
 8000f5a:	0846      	lsrs	r6, r0, #1
 8000f5c:	0752      	lsls	r2, r2, #29
 8000f5e:	d005      	beq.n	8000f6c <__aeabi_dadd+0x4b0>
 8000f60:	220f      	movs	r2, #15
 8000f62:	000c      	movs	r4, r1
 8000f64:	403a      	ands	r2, r7
 8000f66:	2a04      	cmp	r2, #4
 8000f68:	d000      	beq.n	8000f6c <__aeabi_dadd+0x4b0>
 8000f6a:	e62c      	b.n	8000bc6 <__aeabi_dadd+0x10a>
 8000f6c:	0776      	lsls	r6, r6, #29
 8000f6e:	08ff      	lsrs	r7, r7, #3
 8000f70:	4337      	orrs	r7, r6
 8000f72:	0900      	lsrs	r0, r0, #4
 8000f74:	e6d9      	b.n	8000d2a <__aeabi_dadd+0x26e>
 8000f76:	2700      	movs	r7, #0
 8000f78:	2600      	movs	r6, #0
 8000f7a:	e6e8      	b.n	8000d4e <__aeabi_dadd+0x292>
 8000f7c:	4649      	mov	r1, r9
 8000f7e:	1a57      	subs	r7, r2, r1
 8000f80:	42ba      	cmp	r2, r7
 8000f82:	4192      	sbcs	r2, r2
 8000f84:	1b9e      	subs	r6, r3, r6
 8000f86:	4252      	negs	r2, r2
 8000f88:	4665      	mov	r5, ip
 8000f8a:	1ab6      	subs	r6, r6, r2
 8000f8c:	e5ed      	b.n	8000b6a <__aeabi_dadd+0xae>
 8000f8e:	2900      	cmp	r1, #0
 8000f90:	d000      	beq.n	8000f94 <__aeabi_dadd+0x4d8>
 8000f92:	e0c6      	b.n	8001122 <__aeabi_dadd+0x666>
 8000f94:	2f00      	cmp	r7, #0
 8000f96:	d167      	bne.n	8001068 <__aeabi_dadd+0x5ac>
 8000f98:	2680      	movs	r6, #128	@ 0x80
 8000f9a:	2500      	movs	r5, #0
 8000f9c:	4c7f      	ldr	r4, [pc, #508]	@ (800119c <__aeabi_dadd+0x6e0>)
 8000f9e:	0336      	lsls	r6, r6, #12
 8000fa0:	e6d5      	b.n	8000d4e <__aeabi_dadd+0x292>
 8000fa2:	4665      	mov	r5, ip
 8000fa4:	000c      	movs	r4, r1
 8000fa6:	001e      	movs	r6, r3
 8000fa8:	08d0      	lsrs	r0, r2, #3
 8000faa:	e6e4      	b.n	8000d76 <__aeabi_dadd+0x2ba>
 8000fac:	444a      	add	r2, r9
 8000fae:	454a      	cmp	r2, r9
 8000fb0:	4180      	sbcs	r0, r0
 8000fb2:	18f3      	adds	r3, r6, r3
 8000fb4:	4240      	negs	r0, r0
 8000fb6:	1818      	adds	r0, r3, r0
 8000fb8:	0011      	movs	r1, r2
 8000fba:	0203      	lsls	r3, r0, #8
 8000fbc:	d400      	bmi.n	8000fc0 <__aeabi_dadd+0x504>
 8000fbe:	e096      	b.n	80010ee <__aeabi_dadd+0x632>
 8000fc0:	4b77      	ldr	r3, [pc, #476]	@ (80011a0 <__aeabi_dadd+0x6e4>)
 8000fc2:	0849      	lsrs	r1, r1, #1
 8000fc4:	4018      	ands	r0, r3
 8000fc6:	07c3      	lsls	r3, r0, #31
 8000fc8:	430b      	orrs	r3, r1
 8000fca:	0844      	lsrs	r4, r0, #1
 8000fcc:	0749      	lsls	r1, r1, #29
 8000fce:	d100      	bne.n	8000fd2 <__aeabi_dadd+0x516>
 8000fd0:	e129      	b.n	8001226 <__aeabi_dadd+0x76a>
 8000fd2:	220f      	movs	r2, #15
 8000fd4:	401a      	ands	r2, r3
 8000fd6:	2a04      	cmp	r2, #4
 8000fd8:	d100      	bne.n	8000fdc <__aeabi_dadd+0x520>
 8000fda:	e0ea      	b.n	80011b2 <__aeabi_dadd+0x6f6>
 8000fdc:	1d1f      	adds	r7, r3, #4
 8000fde:	429f      	cmp	r7, r3
 8000fe0:	41b6      	sbcs	r6, r6
 8000fe2:	4276      	negs	r6, r6
 8000fe4:	1936      	adds	r6, r6, r4
 8000fe6:	2402      	movs	r4, #2
 8000fe8:	e6c4      	b.n	8000d74 <__aeabi_dadd+0x2b8>
 8000fea:	4649      	mov	r1, r9
 8000fec:	1a8f      	subs	r7, r1, r2
 8000fee:	45b9      	cmp	r9, r7
 8000ff0:	4180      	sbcs	r0, r0
 8000ff2:	1af6      	subs	r6, r6, r3
 8000ff4:	4240      	negs	r0, r0
 8000ff6:	1a36      	subs	r6, r6, r0
 8000ff8:	0233      	lsls	r3, r6, #8
 8000ffa:	d406      	bmi.n	800100a <__aeabi_dadd+0x54e>
 8000ffc:	0773      	lsls	r3, r6, #29
 8000ffe:	08ff      	lsrs	r7, r7, #3
 8001000:	2101      	movs	r1, #1
 8001002:	431f      	orrs	r7, r3
 8001004:	08f0      	lsrs	r0, r6, #3
 8001006:	e690      	b.n	8000d2a <__aeabi_dadd+0x26e>
 8001008:	4665      	mov	r5, ip
 800100a:	2401      	movs	r4, #1
 800100c:	e5ab      	b.n	8000b66 <__aeabi_dadd+0xaa>
 800100e:	464b      	mov	r3, r9
 8001010:	0777      	lsls	r7, r6, #29
 8001012:	08d8      	lsrs	r0, r3, #3
 8001014:	4307      	orrs	r7, r0
 8001016:	08f0      	lsrs	r0, r6, #3
 8001018:	e6b4      	b.n	8000d84 <__aeabi_dadd+0x2c8>
 800101a:	000f      	movs	r7, r1
 800101c:	0018      	movs	r0, r3
 800101e:	3f20      	subs	r7, #32
 8001020:	40f8      	lsrs	r0, r7
 8001022:	4684      	mov	ip, r0
 8001024:	2920      	cmp	r1, #32
 8001026:	d003      	beq.n	8001030 <__aeabi_dadd+0x574>
 8001028:	2740      	movs	r7, #64	@ 0x40
 800102a:	1a79      	subs	r1, r7, r1
 800102c:	408b      	lsls	r3, r1
 800102e:	431a      	orrs	r2, r3
 8001030:	1e53      	subs	r3, r2, #1
 8001032:	419a      	sbcs	r2, r3
 8001034:	4663      	mov	r3, ip
 8001036:	0017      	movs	r7, r2
 8001038:	431f      	orrs	r7, r3
 800103a:	e635      	b.n	8000ca8 <__aeabi_dadd+0x1ec>
 800103c:	2500      	movs	r5, #0
 800103e:	2400      	movs	r4, #0
 8001040:	2600      	movs	r6, #0
 8001042:	e684      	b.n	8000d4e <__aeabi_dadd+0x292>
 8001044:	000c      	movs	r4, r1
 8001046:	0035      	movs	r5, r6
 8001048:	3c20      	subs	r4, #32
 800104a:	40e5      	lsrs	r5, r4
 800104c:	2920      	cmp	r1, #32
 800104e:	d005      	beq.n	800105c <__aeabi_dadd+0x5a0>
 8001050:	2440      	movs	r4, #64	@ 0x40
 8001052:	1a61      	subs	r1, r4, r1
 8001054:	408e      	lsls	r6, r1
 8001056:	4649      	mov	r1, r9
 8001058:	4331      	orrs	r1, r6
 800105a:	4689      	mov	r9, r1
 800105c:	4648      	mov	r0, r9
 800105e:	1e41      	subs	r1, r0, #1
 8001060:	4188      	sbcs	r0, r1
 8001062:	0007      	movs	r7, r0
 8001064:	432f      	orrs	r7, r5
 8001066:	e5ef      	b.n	8000c48 <__aeabi_dadd+0x18c>
 8001068:	08d2      	lsrs	r2, r2, #3
 800106a:	075f      	lsls	r7, r3, #29
 800106c:	4665      	mov	r5, ip
 800106e:	4317      	orrs	r7, r2
 8001070:	08d8      	lsrs	r0, r3, #3
 8001072:	e687      	b.n	8000d84 <__aeabi_dadd+0x2c8>
 8001074:	1a17      	subs	r7, r2, r0
 8001076:	42ba      	cmp	r2, r7
 8001078:	4192      	sbcs	r2, r2
 800107a:	1b9e      	subs	r6, r3, r6
 800107c:	4252      	negs	r2, r2
 800107e:	1ab6      	subs	r6, r6, r2
 8001080:	0233      	lsls	r3, r6, #8
 8001082:	d4c1      	bmi.n	8001008 <__aeabi_dadd+0x54c>
 8001084:	0773      	lsls	r3, r6, #29
 8001086:	08ff      	lsrs	r7, r7, #3
 8001088:	4665      	mov	r5, ip
 800108a:	2101      	movs	r1, #1
 800108c:	431f      	orrs	r7, r3
 800108e:	08f0      	lsrs	r0, r6, #3
 8001090:	e64b      	b.n	8000d2a <__aeabi_dadd+0x26e>
 8001092:	2f00      	cmp	r7, #0
 8001094:	d07b      	beq.n	800118e <__aeabi_dadd+0x6d2>
 8001096:	4665      	mov	r5, ip
 8001098:	001e      	movs	r6, r3
 800109a:	4691      	mov	r9, r2
 800109c:	e63f      	b.n	8000d1e <__aeabi_dadd+0x262>
 800109e:	1a81      	subs	r1, r0, r2
 80010a0:	4688      	mov	r8, r1
 80010a2:	45c1      	cmp	r9, r8
 80010a4:	41a4      	sbcs	r4, r4
 80010a6:	1af1      	subs	r1, r6, r3
 80010a8:	4264      	negs	r4, r4
 80010aa:	1b09      	subs	r1, r1, r4
 80010ac:	2480      	movs	r4, #128	@ 0x80
 80010ae:	0424      	lsls	r4, r4, #16
 80010b0:	4221      	tst	r1, r4
 80010b2:	d077      	beq.n	80011a4 <__aeabi_dadd+0x6e8>
 80010b4:	1a10      	subs	r0, r2, r0
 80010b6:	4282      	cmp	r2, r0
 80010b8:	4192      	sbcs	r2, r2
 80010ba:	0007      	movs	r7, r0
 80010bc:	1b9e      	subs	r6, r3, r6
 80010be:	4252      	negs	r2, r2
 80010c0:	1ab6      	subs	r6, r6, r2
 80010c2:	4337      	orrs	r7, r6
 80010c4:	d000      	beq.n	80010c8 <__aeabi_dadd+0x60c>
 80010c6:	e0a0      	b.n	800120a <__aeabi_dadd+0x74e>
 80010c8:	4665      	mov	r5, ip
 80010ca:	2400      	movs	r4, #0
 80010cc:	2600      	movs	r6, #0
 80010ce:	e63e      	b.n	8000d4e <__aeabi_dadd+0x292>
 80010d0:	075f      	lsls	r7, r3, #29
 80010d2:	08d2      	lsrs	r2, r2, #3
 80010d4:	4665      	mov	r5, ip
 80010d6:	4317      	orrs	r7, r2
 80010d8:	08d8      	lsrs	r0, r3, #3
 80010da:	e653      	b.n	8000d84 <__aeabi_dadd+0x2c8>
 80010dc:	1881      	adds	r1, r0, r2
 80010de:	4291      	cmp	r1, r2
 80010e0:	4192      	sbcs	r2, r2
 80010e2:	18f0      	adds	r0, r6, r3
 80010e4:	4252      	negs	r2, r2
 80010e6:	1880      	adds	r0, r0, r2
 80010e8:	0203      	lsls	r3, r0, #8
 80010ea:	d500      	bpl.n	80010ee <__aeabi_dadd+0x632>
 80010ec:	e768      	b.n	8000fc0 <__aeabi_dadd+0x504>
 80010ee:	0747      	lsls	r7, r0, #29
 80010f0:	08c9      	lsrs	r1, r1, #3
 80010f2:	430f      	orrs	r7, r1
 80010f4:	08c0      	lsrs	r0, r0, #3
 80010f6:	2101      	movs	r1, #1
 80010f8:	e617      	b.n	8000d2a <__aeabi_dadd+0x26e>
 80010fa:	08d2      	lsrs	r2, r2, #3
 80010fc:	075f      	lsls	r7, r3, #29
 80010fe:	4317      	orrs	r7, r2
 8001100:	08d8      	lsrs	r0, r3, #3
 8001102:	e63f      	b.n	8000d84 <__aeabi_dadd+0x2c8>
 8001104:	000c      	movs	r4, r1
 8001106:	2600      	movs	r6, #0
 8001108:	2700      	movs	r7, #0
 800110a:	e620      	b.n	8000d4e <__aeabi_dadd+0x292>
 800110c:	2900      	cmp	r1, #0
 800110e:	d156      	bne.n	80011be <__aeabi_dadd+0x702>
 8001110:	075f      	lsls	r7, r3, #29
 8001112:	08d2      	lsrs	r2, r2, #3
 8001114:	4317      	orrs	r7, r2
 8001116:	08d8      	lsrs	r0, r3, #3
 8001118:	e634      	b.n	8000d84 <__aeabi_dadd+0x2c8>
 800111a:	000c      	movs	r4, r1
 800111c:	001e      	movs	r6, r3
 800111e:	08d0      	lsrs	r0, r2, #3
 8001120:	e629      	b.n	8000d76 <__aeabi_dadd+0x2ba>
 8001122:	08c1      	lsrs	r1, r0, #3
 8001124:	0770      	lsls	r0, r6, #29
 8001126:	4301      	orrs	r1, r0
 8001128:	08f0      	lsrs	r0, r6, #3
 800112a:	2f00      	cmp	r7, #0
 800112c:	d062      	beq.n	80011f4 <__aeabi_dadd+0x738>
 800112e:	2480      	movs	r4, #128	@ 0x80
 8001130:	0324      	lsls	r4, r4, #12
 8001132:	4220      	tst	r0, r4
 8001134:	d007      	beq.n	8001146 <__aeabi_dadd+0x68a>
 8001136:	08de      	lsrs	r6, r3, #3
 8001138:	4226      	tst	r6, r4
 800113a:	d104      	bne.n	8001146 <__aeabi_dadd+0x68a>
 800113c:	4665      	mov	r5, ip
 800113e:	0030      	movs	r0, r6
 8001140:	08d1      	lsrs	r1, r2, #3
 8001142:	075b      	lsls	r3, r3, #29
 8001144:	4319      	orrs	r1, r3
 8001146:	0f4f      	lsrs	r7, r1, #29
 8001148:	00c9      	lsls	r1, r1, #3
 800114a:	08c9      	lsrs	r1, r1, #3
 800114c:	077f      	lsls	r7, r7, #29
 800114e:	430f      	orrs	r7, r1
 8001150:	e618      	b.n	8000d84 <__aeabi_dadd+0x2c8>
 8001152:	000c      	movs	r4, r1
 8001154:	0030      	movs	r0, r6
 8001156:	3c20      	subs	r4, #32
 8001158:	40e0      	lsrs	r0, r4
 800115a:	4684      	mov	ip, r0
 800115c:	2920      	cmp	r1, #32
 800115e:	d005      	beq.n	800116c <__aeabi_dadd+0x6b0>
 8001160:	2440      	movs	r4, #64	@ 0x40
 8001162:	1a61      	subs	r1, r4, r1
 8001164:	408e      	lsls	r6, r1
 8001166:	4649      	mov	r1, r9
 8001168:	4331      	orrs	r1, r6
 800116a:	4689      	mov	r9, r1
 800116c:	4648      	mov	r0, r9
 800116e:	1e41      	subs	r1, r0, #1
 8001170:	4188      	sbcs	r0, r1
 8001172:	4661      	mov	r1, ip
 8001174:	0007      	movs	r7, r0
 8001176:	430f      	orrs	r7, r1
 8001178:	e630      	b.n	8000ddc <__aeabi_dadd+0x320>
 800117a:	2120      	movs	r1, #32
 800117c:	2700      	movs	r7, #0
 800117e:	1a09      	subs	r1, r1, r0
 8001180:	e50e      	b.n	8000ba0 <__aeabi_dadd+0xe4>
 8001182:	001e      	movs	r6, r3
 8001184:	2f00      	cmp	r7, #0
 8001186:	d000      	beq.n	800118a <__aeabi_dadd+0x6ce>
 8001188:	e522      	b.n	8000bd0 <__aeabi_dadd+0x114>
 800118a:	2400      	movs	r4, #0
 800118c:	e758      	b.n	8001040 <__aeabi_dadd+0x584>
 800118e:	2500      	movs	r5, #0
 8001190:	2400      	movs	r4, #0
 8001192:	2600      	movs	r6, #0
 8001194:	e5db      	b.n	8000d4e <__aeabi_dadd+0x292>
 8001196:	46c0      	nop			@ (mov r8, r8)
 8001198:	000007fe 	.word	0x000007fe
 800119c:	000007ff 	.word	0x000007ff
 80011a0:	ff7fffff 	.word	0xff7fffff
 80011a4:	4647      	mov	r7, r8
 80011a6:	430f      	orrs	r7, r1
 80011a8:	d100      	bne.n	80011ac <__aeabi_dadd+0x6f0>
 80011aa:	e747      	b.n	800103c <__aeabi_dadd+0x580>
 80011ac:	000e      	movs	r6, r1
 80011ae:	46c1      	mov	r9, r8
 80011b0:	e5b5      	b.n	8000d1e <__aeabi_dadd+0x262>
 80011b2:	08df      	lsrs	r7, r3, #3
 80011b4:	0764      	lsls	r4, r4, #29
 80011b6:	2102      	movs	r1, #2
 80011b8:	4327      	orrs	r7, r4
 80011ba:	0900      	lsrs	r0, r0, #4
 80011bc:	e5b5      	b.n	8000d2a <__aeabi_dadd+0x26e>
 80011be:	0019      	movs	r1, r3
 80011c0:	08c0      	lsrs	r0, r0, #3
 80011c2:	0777      	lsls	r7, r6, #29
 80011c4:	4307      	orrs	r7, r0
 80011c6:	4311      	orrs	r1, r2
 80011c8:	08f0      	lsrs	r0, r6, #3
 80011ca:	2900      	cmp	r1, #0
 80011cc:	d100      	bne.n	80011d0 <__aeabi_dadd+0x714>
 80011ce:	e5d9      	b.n	8000d84 <__aeabi_dadd+0x2c8>
 80011d0:	2180      	movs	r1, #128	@ 0x80
 80011d2:	0309      	lsls	r1, r1, #12
 80011d4:	4208      	tst	r0, r1
 80011d6:	d007      	beq.n	80011e8 <__aeabi_dadd+0x72c>
 80011d8:	08dc      	lsrs	r4, r3, #3
 80011da:	420c      	tst	r4, r1
 80011dc:	d104      	bne.n	80011e8 <__aeabi_dadd+0x72c>
 80011de:	08d2      	lsrs	r2, r2, #3
 80011e0:	075b      	lsls	r3, r3, #29
 80011e2:	431a      	orrs	r2, r3
 80011e4:	0017      	movs	r7, r2
 80011e6:	0020      	movs	r0, r4
 80011e8:	0f7b      	lsrs	r3, r7, #29
 80011ea:	00ff      	lsls	r7, r7, #3
 80011ec:	08ff      	lsrs	r7, r7, #3
 80011ee:	075b      	lsls	r3, r3, #29
 80011f0:	431f      	orrs	r7, r3
 80011f2:	e5c7      	b.n	8000d84 <__aeabi_dadd+0x2c8>
 80011f4:	000f      	movs	r7, r1
 80011f6:	e5c5      	b.n	8000d84 <__aeabi_dadd+0x2c8>
 80011f8:	4b12      	ldr	r3, [pc, #72]	@ (8001244 <__aeabi_dadd+0x788>)
 80011fa:	08d2      	lsrs	r2, r2, #3
 80011fc:	4033      	ands	r3, r6
 80011fe:	075f      	lsls	r7, r3, #29
 8001200:	025b      	lsls	r3, r3, #9
 8001202:	2401      	movs	r4, #1
 8001204:	4317      	orrs	r7, r2
 8001206:	0b1e      	lsrs	r6, r3, #12
 8001208:	e5a1      	b.n	8000d4e <__aeabi_dadd+0x292>
 800120a:	4226      	tst	r6, r4
 800120c:	d012      	beq.n	8001234 <__aeabi_dadd+0x778>
 800120e:	4b0d      	ldr	r3, [pc, #52]	@ (8001244 <__aeabi_dadd+0x788>)
 8001210:	4665      	mov	r5, ip
 8001212:	0002      	movs	r2, r0
 8001214:	2401      	movs	r4, #1
 8001216:	401e      	ands	r6, r3
 8001218:	e4e6      	b.n	8000be8 <__aeabi_dadd+0x12c>
 800121a:	0021      	movs	r1, r4
 800121c:	e585      	b.n	8000d2a <__aeabi_dadd+0x26e>
 800121e:	0017      	movs	r7, r2
 8001220:	e5a8      	b.n	8000d74 <__aeabi_dadd+0x2b8>
 8001222:	003a      	movs	r2, r7
 8001224:	e4d4      	b.n	8000bd0 <__aeabi_dadd+0x114>
 8001226:	08db      	lsrs	r3, r3, #3
 8001228:	0764      	lsls	r4, r4, #29
 800122a:	431c      	orrs	r4, r3
 800122c:	0027      	movs	r7, r4
 800122e:	2102      	movs	r1, #2
 8001230:	0900      	lsrs	r0, r0, #4
 8001232:	e57a      	b.n	8000d2a <__aeabi_dadd+0x26e>
 8001234:	08c0      	lsrs	r0, r0, #3
 8001236:	0777      	lsls	r7, r6, #29
 8001238:	4307      	orrs	r7, r0
 800123a:	4665      	mov	r5, ip
 800123c:	2100      	movs	r1, #0
 800123e:	08f0      	lsrs	r0, r6, #3
 8001240:	e573      	b.n	8000d2a <__aeabi_dadd+0x26e>
 8001242:	46c0      	nop			@ (mov r8, r8)
 8001244:	ff7fffff 	.word	0xff7fffff

08001248 <__aeabi_ddiv>:
 8001248:	b5f0      	push	{r4, r5, r6, r7, lr}
 800124a:	46de      	mov	lr, fp
 800124c:	4645      	mov	r5, r8
 800124e:	4657      	mov	r7, sl
 8001250:	464e      	mov	r6, r9
 8001252:	b5e0      	push	{r5, r6, r7, lr}
 8001254:	b087      	sub	sp, #28
 8001256:	9200      	str	r2, [sp, #0]
 8001258:	9301      	str	r3, [sp, #4]
 800125a:	030b      	lsls	r3, r1, #12
 800125c:	0b1b      	lsrs	r3, r3, #12
 800125e:	469b      	mov	fp, r3
 8001260:	0fca      	lsrs	r2, r1, #31
 8001262:	004b      	lsls	r3, r1, #1
 8001264:	0004      	movs	r4, r0
 8001266:	4680      	mov	r8, r0
 8001268:	0d5b      	lsrs	r3, r3, #21
 800126a:	9202      	str	r2, [sp, #8]
 800126c:	d100      	bne.n	8001270 <__aeabi_ddiv+0x28>
 800126e:	e098      	b.n	80013a2 <__aeabi_ddiv+0x15a>
 8001270:	4a7c      	ldr	r2, [pc, #496]	@ (8001464 <__aeabi_ddiv+0x21c>)
 8001272:	4293      	cmp	r3, r2
 8001274:	d037      	beq.n	80012e6 <__aeabi_ddiv+0x9e>
 8001276:	4659      	mov	r1, fp
 8001278:	0f42      	lsrs	r2, r0, #29
 800127a:	00c9      	lsls	r1, r1, #3
 800127c:	430a      	orrs	r2, r1
 800127e:	2180      	movs	r1, #128	@ 0x80
 8001280:	0409      	lsls	r1, r1, #16
 8001282:	4311      	orrs	r1, r2
 8001284:	00c2      	lsls	r2, r0, #3
 8001286:	4690      	mov	r8, r2
 8001288:	4a77      	ldr	r2, [pc, #476]	@ (8001468 <__aeabi_ddiv+0x220>)
 800128a:	4689      	mov	r9, r1
 800128c:	4692      	mov	sl, r2
 800128e:	449a      	add	sl, r3
 8001290:	2300      	movs	r3, #0
 8001292:	2400      	movs	r4, #0
 8001294:	9303      	str	r3, [sp, #12]
 8001296:	9e00      	ldr	r6, [sp, #0]
 8001298:	9f01      	ldr	r7, [sp, #4]
 800129a:	033b      	lsls	r3, r7, #12
 800129c:	0b1b      	lsrs	r3, r3, #12
 800129e:	469b      	mov	fp, r3
 80012a0:	007b      	lsls	r3, r7, #1
 80012a2:	0030      	movs	r0, r6
 80012a4:	0d5b      	lsrs	r3, r3, #21
 80012a6:	0ffd      	lsrs	r5, r7, #31
 80012a8:	2b00      	cmp	r3, #0
 80012aa:	d059      	beq.n	8001360 <__aeabi_ddiv+0x118>
 80012ac:	4a6d      	ldr	r2, [pc, #436]	@ (8001464 <__aeabi_ddiv+0x21c>)
 80012ae:	4293      	cmp	r3, r2
 80012b0:	d048      	beq.n	8001344 <__aeabi_ddiv+0xfc>
 80012b2:	4659      	mov	r1, fp
 80012b4:	0f72      	lsrs	r2, r6, #29
 80012b6:	00c9      	lsls	r1, r1, #3
 80012b8:	430a      	orrs	r2, r1
 80012ba:	2180      	movs	r1, #128	@ 0x80
 80012bc:	0409      	lsls	r1, r1, #16
 80012be:	4311      	orrs	r1, r2
 80012c0:	468b      	mov	fp, r1
 80012c2:	4969      	ldr	r1, [pc, #420]	@ (8001468 <__aeabi_ddiv+0x220>)
 80012c4:	00f2      	lsls	r2, r6, #3
 80012c6:	468c      	mov	ip, r1
 80012c8:	4651      	mov	r1, sl
 80012ca:	4463      	add	r3, ip
 80012cc:	1acb      	subs	r3, r1, r3
 80012ce:	469a      	mov	sl, r3
 80012d0:	2100      	movs	r1, #0
 80012d2:	9e02      	ldr	r6, [sp, #8]
 80012d4:	406e      	eors	r6, r5
 80012d6:	b2f6      	uxtb	r6, r6
 80012d8:	2c0f      	cmp	r4, #15
 80012da:	d900      	bls.n	80012de <__aeabi_ddiv+0x96>
 80012dc:	e0ce      	b.n	800147c <__aeabi_ddiv+0x234>
 80012de:	4b63      	ldr	r3, [pc, #396]	@ (800146c <__aeabi_ddiv+0x224>)
 80012e0:	00a4      	lsls	r4, r4, #2
 80012e2:	591b      	ldr	r3, [r3, r4]
 80012e4:	469f      	mov	pc, r3
 80012e6:	465a      	mov	r2, fp
 80012e8:	4302      	orrs	r2, r0
 80012ea:	4691      	mov	r9, r2
 80012ec:	d000      	beq.n	80012f0 <__aeabi_ddiv+0xa8>
 80012ee:	e090      	b.n	8001412 <__aeabi_ddiv+0x1ca>
 80012f0:	469a      	mov	sl, r3
 80012f2:	2302      	movs	r3, #2
 80012f4:	4690      	mov	r8, r2
 80012f6:	2408      	movs	r4, #8
 80012f8:	9303      	str	r3, [sp, #12]
 80012fa:	e7cc      	b.n	8001296 <__aeabi_ddiv+0x4e>
 80012fc:	46cb      	mov	fp, r9
 80012fe:	4642      	mov	r2, r8
 8001300:	9d02      	ldr	r5, [sp, #8]
 8001302:	9903      	ldr	r1, [sp, #12]
 8001304:	2902      	cmp	r1, #2
 8001306:	d100      	bne.n	800130a <__aeabi_ddiv+0xc2>
 8001308:	e1de      	b.n	80016c8 <__aeabi_ddiv+0x480>
 800130a:	2903      	cmp	r1, #3
 800130c:	d100      	bne.n	8001310 <__aeabi_ddiv+0xc8>
 800130e:	e08d      	b.n	800142c <__aeabi_ddiv+0x1e4>
 8001310:	2901      	cmp	r1, #1
 8001312:	d000      	beq.n	8001316 <__aeabi_ddiv+0xce>
 8001314:	e179      	b.n	800160a <__aeabi_ddiv+0x3c2>
 8001316:	002e      	movs	r6, r5
 8001318:	2200      	movs	r2, #0
 800131a:	2300      	movs	r3, #0
 800131c:	2400      	movs	r4, #0
 800131e:	4690      	mov	r8, r2
 8001320:	051b      	lsls	r3, r3, #20
 8001322:	4323      	orrs	r3, r4
 8001324:	07f6      	lsls	r6, r6, #31
 8001326:	4333      	orrs	r3, r6
 8001328:	4640      	mov	r0, r8
 800132a:	0019      	movs	r1, r3
 800132c:	b007      	add	sp, #28
 800132e:	bcf0      	pop	{r4, r5, r6, r7}
 8001330:	46bb      	mov	fp, r7
 8001332:	46b2      	mov	sl, r6
 8001334:	46a9      	mov	r9, r5
 8001336:	46a0      	mov	r8, r4
 8001338:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800133a:	2200      	movs	r2, #0
 800133c:	2400      	movs	r4, #0
 800133e:	4690      	mov	r8, r2
 8001340:	4b48      	ldr	r3, [pc, #288]	@ (8001464 <__aeabi_ddiv+0x21c>)
 8001342:	e7ed      	b.n	8001320 <__aeabi_ddiv+0xd8>
 8001344:	465a      	mov	r2, fp
 8001346:	9b00      	ldr	r3, [sp, #0]
 8001348:	431a      	orrs	r2, r3
 800134a:	4b49      	ldr	r3, [pc, #292]	@ (8001470 <__aeabi_ddiv+0x228>)
 800134c:	469c      	mov	ip, r3
 800134e:	44e2      	add	sl, ip
 8001350:	2a00      	cmp	r2, #0
 8001352:	d159      	bne.n	8001408 <__aeabi_ddiv+0x1c0>
 8001354:	2302      	movs	r3, #2
 8001356:	431c      	orrs	r4, r3
 8001358:	2300      	movs	r3, #0
 800135a:	2102      	movs	r1, #2
 800135c:	469b      	mov	fp, r3
 800135e:	e7b8      	b.n	80012d2 <__aeabi_ddiv+0x8a>
 8001360:	465a      	mov	r2, fp
 8001362:	9b00      	ldr	r3, [sp, #0]
 8001364:	431a      	orrs	r2, r3
 8001366:	d049      	beq.n	80013fc <__aeabi_ddiv+0x1b4>
 8001368:	465b      	mov	r3, fp
 800136a:	2b00      	cmp	r3, #0
 800136c:	d100      	bne.n	8001370 <__aeabi_ddiv+0x128>
 800136e:	e19c      	b.n	80016aa <__aeabi_ddiv+0x462>
 8001370:	4658      	mov	r0, fp
 8001372:	f001 fc0d 	bl	8002b90 <__clzsi2>
 8001376:	0002      	movs	r2, r0
 8001378:	0003      	movs	r3, r0
 800137a:	3a0b      	subs	r2, #11
 800137c:	271d      	movs	r7, #29
 800137e:	9e00      	ldr	r6, [sp, #0]
 8001380:	1aba      	subs	r2, r7, r2
 8001382:	0019      	movs	r1, r3
 8001384:	4658      	mov	r0, fp
 8001386:	40d6      	lsrs	r6, r2
 8001388:	3908      	subs	r1, #8
 800138a:	4088      	lsls	r0, r1
 800138c:	0032      	movs	r2, r6
 800138e:	4302      	orrs	r2, r0
 8001390:	4693      	mov	fp, r2
 8001392:	9a00      	ldr	r2, [sp, #0]
 8001394:	408a      	lsls	r2, r1
 8001396:	4937      	ldr	r1, [pc, #220]	@ (8001474 <__aeabi_ddiv+0x22c>)
 8001398:	4453      	add	r3, sl
 800139a:	468a      	mov	sl, r1
 800139c:	2100      	movs	r1, #0
 800139e:	449a      	add	sl, r3
 80013a0:	e797      	b.n	80012d2 <__aeabi_ddiv+0x8a>
 80013a2:	465b      	mov	r3, fp
 80013a4:	4303      	orrs	r3, r0
 80013a6:	4699      	mov	r9, r3
 80013a8:	d021      	beq.n	80013ee <__aeabi_ddiv+0x1a6>
 80013aa:	465b      	mov	r3, fp
 80013ac:	2b00      	cmp	r3, #0
 80013ae:	d100      	bne.n	80013b2 <__aeabi_ddiv+0x16a>
 80013b0:	e169      	b.n	8001686 <__aeabi_ddiv+0x43e>
 80013b2:	4658      	mov	r0, fp
 80013b4:	f001 fbec 	bl	8002b90 <__clzsi2>
 80013b8:	230b      	movs	r3, #11
 80013ba:	425b      	negs	r3, r3
 80013bc:	469c      	mov	ip, r3
 80013be:	0002      	movs	r2, r0
 80013c0:	4484      	add	ip, r0
 80013c2:	4666      	mov	r6, ip
 80013c4:	231d      	movs	r3, #29
 80013c6:	1b9b      	subs	r3, r3, r6
 80013c8:	0026      	movs	r6, r4
 80013ca:	0011      	movs	r1, r2
 80013cc:	4658      	mov	r0, fp
 80013ce:	40de      	lsrs	r6, r3
 80013d0:	3908      	subs	r1, #8
 80013d2:	4088      	lsls	r0, r1
 80013d4:	0033      	movs	r3, r6
 80013d6:	4303      	orrs	r3, r0
 80013d8:	4699      	mov	r9, r3
 80013da:	0023      	movs	r3, r4
 80013dc:	408b      	lsls	r3, r1
 80013de:	4698      	mov	r8, r3
 80013e0:	4b25      	ldr	r3, [pc, #148]	@ (8001478 <__aeabi_ddiv+0x230>)
 80013e2:	2400      	movs	r4, #0
 80013e4:	1a9b      	subs	r3, r3, r2
 80013e6:	469a      	mov	sl, r3
 80013e8:	2300      	movs	r3, #0
 80013ea:	9303      	str	r3, [sp, #12]
 80013ec:	e753      	b.n	8001296 <__aeabi_ddiv+0x4e>
 80013ee:	2300      	movs	r3, #0
 80013f0:	4698      	mov	r8, r3
 80013f2:	469a      	mov	sl, r3
 80013f4:	3301      	adds	r3, #1
 80013f6:	2404      	movs	r4, #4
 80013f8:	9303      	str	r3, [sp, #12]
 80013fa:	e74c      	b.n	8001296 <__aeabi_ddiv+0x4e>
 80013fc:	2301      	movs	r3, #1
 80013fe:	431c      	orrs	r4, r3
 8001400:	2300      	movs	r3, #0
 8001402:	2101      	movs	r1, #1
 8001404:	469b      	mov	fp, r3
 8001406:	e764      	b.n	80012d2 <__aeabi_ddiv+0x8a>
 8001408:	2303      	movs	r3, #3
 800140a:	0032      	movs	r2, r6
 800140c:	2103      	movs	r1, #3
 800140e:	431c      	orrs	r4, r3
 8001410:	e75f      	b.n	80012d2 <__aeabi_ddiv+0x8a>
 8001412:	469a      	mov	sl, r3
 8001414:	2303      	movs	r3, #3
 8001416:	46d9      	mov	r9, fp
 8001418:	240c      	movs	r4, #12
 800141a:	9303      	str	r3, [sp, #12]
 800141c:	e73b      	b.n	8001296 <__aeabi_ddiv+0x4e>
 800141e:	2300      	movs	r3, #0
 8001420:	2480      	movs	r4, #128	@ 0x80
 8001422:	4698      	mov	r8, r3
 8001424:	2600      	movs	r6, #0
 8001426:	4b0f      	ldr	r3, [pc, #60]	@ (8001464 <__aeabi_ddiv+0x21c>)
 8001428:	0324      	lsls	r4, r4, #12
 800142a:	e779      	b.n	8001320 <__aeabi_ddiv+0xd8>
 800142c:	2480      	movs	r4, #128	@ 0x80
 800142e:	465b      	mov	r3, fp
 8001430:	0324      	lsls	r4, r4, #12
 8001432:	431c      	orrs	r4, r3
 8001434:	0324      	lsls	r4, r4, #12
 8001436:	002e      	movs	r6, r5
 8001438:	4690      	mov	r8, r2
 800143a:	4b0a      	ldr	r3, [pc, #40]	@ (8001464 <__aeabi_ddiv+0x21c>)
 800143c:	0b24      	lsrs	r4, r4, #12
 800143e:	e76f      	b.n	8001320 <__aeabi_ddiv+0xd8>
 8001440:	2480      	movs	r4, #128	@ 0x80
 8001442:	464b      	mov	r3, r9
 8001444:	0324      	lsls	r4, r4, #12
 8001446:	4223      	tst	r3, r4
 8001448:	d002      	beq.n	8001450 <__aeabi_ddiv+0x208>
 800144a:	465b      	mov	r3, fp
 800144c:	4223      	tst	r3, r4
 800144e:	d0f0      	beq.n	8001432 <__aeabi_ddiv+0x1ea>
 8001450:	2480      	movs	r4, #128	@ 0x80
 8001452:	464b      	mov	r3, r9
 8001454:	0324      	lsls	r4, r4, #12
 8001456:	431c      	orrs	r4, r3
 8001458:	0324      	lsls	r4, r4, #12
 800145a:	9e02      	ldr	r6, [sp, #8]
 800145c:	4b01      	ldr	r3, [pc, #4]	@ (8001464 <__aeabi_ddiv+0x21c>)
 800145e:	0b24      	lsrs	r4, r4, #12
 8001460:	e75e      	b.n	8001320 <__aeabi_ddiv+0xd8>
 8001462:	46c0      	nop			@ (mov r8, r8)
 8001464:	000007ff 	.word	0x000007ff
 8001468:	fffffc01 	.word	0xfffffc01
 800146c:	08009fc4 	.word	0x08009fc4
 8001470:	fffff801 	.word	0xfffff801
 8001474:	000003f3 	.word	0x000003f3
 8001478:	fffffc0d 	.word	0xfffffc0d
 800147c:	45cb      	cmp	fp, r9
 800147e:	d200      	bcs.n	8001482 <__aeabi_ddiv+0x23a>
 8001480:	e0f8      	b.n	8001674 <__aeabi_ddiv+0x42c>
 8001482:	d100      	bne.n	8001486 <__aeabi_ddiv+0x23e>
 8001484:	e0f3      	b.n	800166e <__aeabi_ddiv+0x426>
 8001486:	2301      	movs	r3, #1
 8001488:	425b      	negs	r3, r3
 800148a:	469c      	mov	ip, r3
 800148c:	4644      	mov	r4, r8
 800148e:	4648      	mov	r0, r9
 8001490:	2500      	movs	r5, #0
 8001492:	44e2      	add	sl, ip
 8001494:	465b      	mov	r3, fp
 8001496:	0e17      	lsrs	r7, r2, #24
 8001498:	021b      	lsls	r3, r3, #8
 800149a:	431f      	orrs	r7, r3
 800149c:	0c19      	lsrs	r1, r3, #16
 800149e:	043b      	lsls	r3, r7, #16
 80014a0:	0212      	lsls	r2, r2, #8
 80014a2:	9700      	str	r7, [sp, #0]
 80014a4:	0c1f      	lsrs	r7, r3, #16
 80014a6:	4691      	mov	r9, r2
 80014a8:	9102      	str	r1, [sp, #8]
 80014aa:	9703      	str	r7, [sp, #12]
 80014ac:	f7fe fece 	bl	800024c <__aeabi_uidivmod>
 80014b0:	0002      	movs	r2, r0
 80014b2:	437a      	muls	r2, r7
 80014b4:	040b      	lsls	r3, r1, #16
 80014b6:	0c21      	lsrs	r1, r4, #16
 80014b8:	4680      	mov	r8, r0
 80014ba:	4319      	orrs	r1, r3
 80014bc:	428a      	cmp	r2, r1
 80014be:	d909      	bls.n	80014d4 <__aeabi_ddiv+0x28c>
 80014c0:	9f00      	ldr	r7, [sp, #0]
 80014c2:	2301      	movs	r3, #1
 80014c4:	46bc      	mov	ip, r7
 80014c6:	425b      	negs	r3, r3
 80014c8:	4461      	add	r1, ip
 80014ca:	469c      	mov	ip, r3
 80014cc:	44e0      	add	r8, ip
 80014ce:	428f      	cmp	r7, r1
 80014d0:	d800      	bhi.n	80014d4 <__aeabi_ddiv+0x28c>
 80014d2:	e15c      	b.n	800178e <__aeabi_ddiv+0x546>
 80014d4:	1a88      	subs	r0, r1, r2
 80014d6:	9902      	ldr	r1, [sp, #8]
 80014d8:	f7fe feb8 	bl	800024c <__aeabi_uidivmod>
 80014dc:	9a03      	ldr	r2, [sp, #12]
 80014de:	0424      	lsls	r4, r4, #16
 80014e0:	4342      	muls	r2, r0
 80014e2:	0409      	lsls	r1, r1, #16
 80014e4:	0c24      	lsrs	r4, r4, #16
 80014e6:	0003      	movs	r3, r0
 80014e8:	430c      	orrs	r4, r1
 80014ea:	42a2      	cmp	r2, r4
 80014ec:	d906      	bls.n	80014fc <__aeabi_ddiv+0x2b4>
 80014ee:	9900      	ldr	r1, [sp, #0]
 80014f0:	3b01      	subs	r3, #1
 80014f2:	468c      	mov	ip, r1
 80014f4:	4464      	add	r4, ip
 80014f6:	42a1      	cmp	r1, r4
 80014f8:	d800      	bhi.n	80014fc <__aeabi_ddiv+0x2b4>
 80014fa:	e142      	b.n	8001782 <__aeabi_ddiv+0x53a>
 80014fc:	1aa0      	subs	r0, r4, r2
 80014fe:	4642      	mov	r2, r8
 8001500:	0412      	lsls	r2, r2, #16
 8001502:	431a      	orrs	r2, r3
 8001504:	4693      	mov	fp, r2
 8001506:	464b      	mov	r3, r9
 8001508:	4659      	mov	r1, fp
 800150a:	0c1b      	lsrs	r3, r3, #16
 800150c:	001f      	movs	r7, r3
 800150e:	9304      	str	r3, [sp, #16]
 8001510:	040b      	lsls	r3, r1, #16
 8001512:	4649      	mov	r1, r9
 8001514:	0409      	lsls	r1, r1, #16
 8001516:	0c09      	lsrs	r1, r1, #16
 8001518:	000c      	movs	r4, r1
 800151a:	0c1b      	lsrs	r3, r3, #16
 800151c:	435c      	muls	r4, r3
 800151e:	0c12      	lsrs	r2, r2, #16
 8001520:	437b      	muls	r3, r7
 8001522:	4688      	mov	r8, r1
 8001524:	4351      	muls	r1, r2
 8001526:	437a      	muls	r2, r7
 8001528:	0c27      	lsrs	r7, r4, #16
 800152a:	46bc      	mov	ip, r7
 800152c:	185b      	adds	r3, r3, r1
 800152e:	4463      	add	r3, ip
 8001530:	4299      	cmp	r1, r3
 8001532:	d903      	bls.n	800153c <__aeabi_ddiv+0x2f4>
 8001534:	2180      	movs	r1, #128	@ 0x80
 8001536:	0249      	lsls	r1, r1, #9
 8001538:	468c      	mov	ip, r1
 800153a:	4462      	add	r2, ip
 800153c:	0c19      	lsrs	r1, r3, #16
 800153e:	0424      	lsls	r4, r4, #16
 8001540:	041b      	lsls	r3, r3, #16
 8001542:	0c24      	lsrs	r4, r4, #16
 8001544:	188a      	adds	r2, r1, r2
 8001546:	191c      	adds	r4, r3, r4
 8001548:	4290      	cmp	r0, r2
 800154a:	d302      	bcc.n	8001552 <__aeabi_ddiv+0x30a>
 800154c:	d116      	bne.n	800157c <__aeabi_ddiv+0x334>
 800154e:	42a5      	cmp	r5, r4
 8001550:	d214      	bcs.n	800157c <__aeabi_ddiv+0x334>
 8001552:	465b      	mov	r3, fp
 8001554:	9f00      	ldr	r7, [sp, #0]
 8001556:	3b01      	subs	r3, #1
 8001558:	444d      	add	r5, r9
 800155a:	9305      	str	r3, [sp, #20]
 800155c:	454d      	cmp	r5, r9
 800155e:	419b      	sbcs	r3, r3
 8001560:	46bc      	mov	ip, r7
 8001562:	425b      	negs	r3, r3
 8001564:	4463      	add	r3, ip
 8001566:	18c0      	adds	r0, r0, r3
 8001568:	4287      	cmp	r7, r0
 800156a:	d300      	bcc.n	800156e <__aeabi_ddiv+0x326>
 800156c:	e102      	b.n	8001774 <__aeabi_ddiv+0x52c>
 800156e:	4282      	cmp	r2, r0
 8001570:	d900      	bls.n	8001574 <__aeabi_ddiv+0x32c>
 8001572:	e129      	b.n	80017c8 <__aeabi_ddiv+0x580>
 8001574:	d100      	bne.n	8001578 <__aeabi_ddiv+0x330>
 8001576:	e124      	b.n	80017c2 <__aeabi_ddiv+0x57a>
 8001578:	9b05      	ldr	r3, [sp, #20]
 800157a:	469b      	mov	fp, r3
 800157c:	1b2c      	subs	r4, r5, r4
 800157e:	42a5      	cmp	r5, r4
 8001580:	41ad      	sbcs	r5, r5
 8001582:	9b00      	ldr	r3, [sp, #0]
 8001584:	1a80      	subs	r0, r0, r2
 8001586:	426d      	negs	r5, r5
 8001588:	1b40      	subs	r0, r0, r5
 800158a:	4283      	cmp	r3, r0
 800158c:	d100      	bne.n	8001590 <__aeabi_ddiv+0x348>
 800158e:	e10f      	b.n	80017b0 <__aeabi_ddiv+0x568>
 8001590:	9902      	ldr	r1, [sp, #8]
 8001592:	f7fe fe5b 	bl	800024c <__aeabi_uidivmod>
 8001596:	9a03      	ldr	r2, [sp, #12]
 8001598:	040b      	lsls	r3, r1, #16
 800159a:	4342      	muls	r2, r0
 800159c:	0c21      	lsrs	r1, r4, #16
 800159e:	0005      	movs	r5, r0
 80015a0:	4319      	orrs	r1, r3
 80015a2:	428a      	cmp	r2, r1
 80015a4:	d900      	bls.n	80015a8 <__aeabi_ddiv+0x360>
 80015a6:	e0cb      	b.n	8001740 <__aeabi_ddiv+0x4f8>
 80015a8:	1a88      	subs	r0, r1, r2
 80015aa:	9902      	ldr	r1, [sp, #8]
 80015ac:	f7fe fe4e 	bl	800024c <__aeabi_uidivmod>
 80015b0:	9a03      	ldr	r2, [sp, #12]
 80015b2:	0424      	lsls	r4, r4, #16
 80015b4:	4342      	muls	r2, r0
 80015b6:	0409      	lsls	r1, r1, #16
 80015b8:	0c24      	lsrs	r4, r4, #16
 80015ba:	0003      	movs	r3, r0
 80015bc:	430c      	orrs	r4, r1
 80015be:	42a2      	cmp	r2, r4
 80015c0:	d900      	bls.n	80015c4 <__aeabi_ddiv+0x37c>
 80015c2:	e0ca      	b.n	800175a <__aeabi_ddiv+0x512>
 80015c4:	4641      	mov	r1, r8
 80015c6:	1aa4      	subs	r4, r4, r2
 80015c8:	042a      	lsls	r2, r5, #16
 80015ca:	431a      	orrs	r2, r3
 80015cc:	9f04      	ldr	r7, [sp, #16]
 80015ce:	0413      	lsls	r3, r2, #16
 80015d0:	0c1b      	lsrs	r3, r3, #16
 80015d2:	4359      	muls	r1, r3
 80015d4:	4640      	mov	r0, r8
 80015d6:	437b      	muls	r3, r7
 80015d8:	469c      	mov	ip, r3
 80015da:	0c15      	lsrs	r5, r2, #16
 80015dc:	4368      	muls	r0, r5
 80015de:	0c0b      	lsrs	r3, r1, #16
 80015e0:	4484      	add	ip, r0
 80015e2:	4463      	add	r3, ip
 80015e4:	437d      	muls	r5, r7
 80015e6:	4298      	cmp	r0, r3
 80015e8:	d903      	bls.n	80015f2 <__aeabi_ddiv+0x3aa>
 80015ea:	2080      	movs	r0, #128	@ 0x80
 80015ec:	0240      	lsls	r0, r0, #9
 80015ee:	4684      	mov	ip, r0
 80015f0:	4465      	add	r5, ip
 80015f2:	0c18      	lsrs	r0, r3, #16
 80015f4:	0409      	lsls	r1, r1, #16
 80015f6:	041b      	lsls	r3, r3, #16
 80015f8:	0c09      	lsrs	r1, r1, #16
 80015fa:	1940      	adds	r0, r0, r5
 80015fc:	185b      	adds	r3, r3, r1
 80015fe:	4284      	cmp	r4, r0
 8001600:	d327      	bcc.n	8001652 <__aeabi_ddiv+0x40a>
 8001602:	d023      	beq.n	800164c <__aeabi_ddiv+0x404>
 8001604:	2301      	movs	r3, #1
 8001606:	0035      	movs	r5, r6
 8001608:	431a      	orrs	r2, r3
 800160a:	4b94      	ldr	r3, [pc, #592]	@ (800185c <__aeabi_ddiv+0x614>)
 800160c:	4453      	add	r3, sl
 800160e:	2b00      	cmp	r3, #0
 8001610:	dd60      	ble.n	80016d4 <__aeabi_ddiv+0x48c>
 8001612:	0751      	lsls	r1, r2, #29
 8001614:	d000      	beq.n	8001618 <__aeabi_ddiv+0x3d0>
 8001616:	e086      	b.n	8001726 <__aeabi_ddiv+0x4de>
 8001618:	002e      	movs	r6, r5
 800161a:	08d1      	lsrs	r1, r2, #3
 800161c:	465a      	mov	r2, fp
 800161e:	01d2      	lsls	r2, r2, #7
 8001620:	d506      	bpl.n	8001630 <__aeabi_ddiv+0x3e8>
 8001622:	465a      	mov	r2, fp
 8001624:	4b8e      	ldr	r3, [pc, #568]	@ (8001860 <__aeabi_ddiv+0x618>)
 8001626:	401a      	ands	r2, r3
 8001628:	2380      	movs	r3, #128	@ 0x80
 800162a:	4693      	mov	fp, r2
 800162c:	00db      	lsls	r3, r3, #3
 800162e:	4453      	add	r3, sl
 8001630:	4a8c      	ldr	r2, [pc, #560]	@ (8001864 <__aeabi_ddiv+0x61c>)
 8001632:	4293      	cmp	r3, r2
 8001634:	dd00      	ble.n	8001638 <__aeabi_ddiv+0x3f0>
 8001636:	e680      	b.n	800133a <__aeabi_ddiv+0xf2>
 8001638:	465a      	mov	r2, fp
 800163a:	0752      	lsls	r2, r2, #29
 800163c:	430a      	orrs	r2, r1
 800163e:	4690      	mov	r8, r2
 8001640:	465a      	mov	r2, fp
 8001642:	055b      	lsls	r3, r3, #21
 8001644:	0254      	lsls	r4, r2, #9
 8001646:	0b24      	lsrs	r4, r4, #12
 8001648:	0d5b      	lsrs	r3, r3, #21
 800164a:	e669      	b.n	8001320 <__aeabi_ddiv+0xd8>
 800164c:	0035      	movs	r5, r6
 800164e:	2b00      	cmp	r3, #0
 8001650:	d0db      	beq.n	800160a <__aeabi_ddiv+0x3c2>
 8001652:	9d00      	ldr	r5, [sp, #0]
 8001654:	1e51      	subs	r1, r2, #1
 8001656:	46ac      	mov	ip, r5
 8001658:	4464      	add	r4, ip
 800165a:	42ac      	cmp	r4, r5
 800165c:	d200      	bcs.n	8001660 <__aeabi_ddiv+0x418>
 800165e:	e09e      	b.n	800179e <__aeabi_ddiv+0x556>
 8001660:	4284      	cmp	r4, r0
 8001662:	d200      	bcs.n	8001666 <__aeabi_ddiv+0x41e>
 8001664:	e0e1      	b.n	800182a <__aeabi_ddiv+0x5e2>
 8001666:	d100      	bne.n	800166a <__aeabi_ddiv+0x422>
 8001668:	e0ee      	b.n	8001848 <__aeabi_ddiv+0x600>
 800166a:	000a      	movs	r2, r1
 800166c:	e7ca      	b.n	8001604 <__aeabi_ddiv+0x3bc>
 800166e:	4542      	cmp	r2, r8
 8001670:	d900      	bls.n	8001674 <__aeabi_ddiv+0x42c>
 8001672:	e708      	b.n	8001486 <__aeabi_ddiv+0x23e>
 8001674:	464b      	mov	r3, r9
 8001676:	07dc      	lsls	r4, r3, #31
 8001678:	0858      	lsrs	r0, r3, #1
 800167a:	4643      	mov	r3, r8
 800167c:	085b      	lsrs	r3, r3, #1
 800167e:	431c      	orrs	r4, r3
 8001680:	4643      	mov	r3, r8
 8001682:	07dd      	lsls	r5, r3, #31
 8001684:	e706      	b.n	8001494 <__aeabi_ddiv+0x24c>
 8001686:	f001 fa83 	bl	8002b90 <__clzsi2>
 800168a:	2315      	movs	r3, #21
 800168c:	469c      	mov	ip, r3
 800168e:	4484      	add	ip, r0
 8001690:	0002      	movs	r2, r0
 8001692:	4663      	mov	r3, ip
 8001694:	3220      	adds	r2, #32
 8001696:	2b1c      	cmp	r3, #28
 8001698:	dc00      	bgt.n	800169c <__aeabi_ddiv+0x454>
 800169a:	e692      	b.n	80013c2 <__aeabi_ddiv+0x17a>
 800169c:	0023      	movs	r3, r4
 800169e:	3808      	subs	r0, #8
 80016a0:	4083      	lsls	r3, r0
 80016a2:	4699      	mov	r9, r3
 80016a4:	2300      	movs	r3, #0
 80016a6:	4698      	mov	r8, r3
 80016a8:	e69a      	b.n	80013e0 <__aeabi_ddiv+0x198>
 80016aa:	f001 fa71 	bl	8002b90 <__clzsi2>
 80016ae:	0002      	movs	r2, r0
 80016b0:	0003      	movs	r3, r0
 80016b2:	3215      	adds	r2, #21
 80016b4:	3320      	adds	r3, #32
 80016b6:	2a1c      	cmp	r2, #28
 80016b8:	dc00      	bgt.n	80016bc <__aeabi_ddiv+0x474>
 80016ba:	e65f      	b.n	800137c <__aeabi_ddiv+0x134>
 80016bc:	9900      	ldr	r1, [sp, #0]
 80016be:	3808      	subs	r0, #8
 80016c0:	4081      	lsls	r1, r0
 80016c2:	2200      	movs	r2, #0
 80016c4:	468b      	mov	fp, r1
 80016c6:	e666      	b.n	8001396 <__aeabi_ddiv+0x14e>
 80016c8:	2200      	movs	r2, #0
 80016ca:	002e      	movs	r6, r5
 80016cc:	2400      	movs	r4, #0
 80016ce:	4690      	mov	r8, r2
 80016d0:	4b65      	ldr	r3, [pc, #404]	@ (8001868 <__aeabi_ddiv+0x620>)
 80016d2:	e625      	b.n	8001320 <__aeabi_ddiv+0xd8>
 80016d4:	002e      	movs	r6, r5
 80016d6:	2101      	movs	r1, #1
 80016d8:	1ac9      	subs	r1, r1, r3
 80016da:	2938      	cmp	r1, #56	@ 0x38
 80016dc:	dd00      	ble.n	80016e0 <__aeabi_ddiv+0x498>
 80016de:	e61b      	b.n	8001318 <__aeabi_ddiv+0xd0>
 80016e0:	291f      	cmp	r1, #31
 80016e2:	dc7e      	bgt.n	80017e2 <__aeabi_ddiv+0x59a>
 80016e4:	4861      	ldr	r0, [pc, #388]	@ (800186c <__aeabi_ddiv+0x624>)
 80016e6:	0014      	movs	r4, r2
 80016e8:	4450      	add	r0, sl
 80016ea:	465b      	mov	r3, fp
 80016ec:	4082      	lsls	r2, r0
 80016ee:	4083      	lsls	r3, r0
 80016f0:	40cc      	lsrs	r4, r1
 80016f2:	1e50      	subs	r0, r2, #1
 80016f4:	4182      	sbcs	r2, r0
 80016f6:	4323      	orrs	r3, r4
 80016f8:	431a      	orrs	r2, r3
 80016fa:	465b      	mov	r3, fp
 80016fc:	40cb      	lsrs	r3, r1
 80016fe:	0751      	lsls	r1, r2, #29
 8001700:	d009      	beq.n	8001716 <__aeabi_ddiv+0x4ce>
 8001702:	210f      	movs	r1, #15
 8001704:	4011      	ands	r1, r2
 8001706:	2904      	cmp	r1, #4
 8001708:	d005      	beq.n	8001716 <__aeabi_ddiv+0x4ce>
 800170a:	1d11      	adds	r1, r2, #4
 800170c:	4291      	cmp	r1, r2
 800170e:	4192      	sbcs	r2, r2
 8001710:	4252      	negs	r2, r2
 8001712:	189b      	adds	r3, r3, r2
 8001714:	000a      	movs	r2, r1
 8001716:	0219      	lsls	r1, r3, #8
 8001718:	d400      	bmi.n	800171c <__aeabi_ddiv+0x4d4>
 800171a:	e09b      	b.n	8001854 <__aeabi_ddiv+0x60c>
 800171c:	2200      	movs	r2, #0
 800171e:	2301      	movs	r3, #1
 8001720:	2400      	movs	r4, #0
 8001722:	4690      	mov	r8, r2
 8001724:	e5fc      	b.n	8001320 <__aeabi_ddiv+0xd8>
 8001726:	210f      	movs	r1, #15
 8001728:	4011      	ands	r1, r2
 800172a:	2904      	cmp	r1, #4
 800172c:	d100      	bne.n	8001730 <__aeabi_ddiv+0x4e8>
 800172e:	e773      	b.n	8001618 <__aeabi_ddiv+0x3d0>
 8001730:	1d11      	adds	r1, r2, #4
 8001732:	4291      	cmp	r1, r2
 8001734:	4192      	sbcs	r2, r2
 8001736:	4252      	negs	r2, r2
 8001738:	002e      	movs	r6, r5
 800173a:	08c9      	lsrs	r1, r1, #3
 800173c:	4493      	add	fp, r2
 800173e:	e76d      	b.n	800161c <__aeabi_ddiv+0x3d4>
 8001740:	9b00      	ldr	r3, [sp, #0]
 8001742:	3d01      	subs	r5, #1
 8001744:	469c      	mov	ip, r3
 8001746:	4461      	add	r1, ip
 8001748:	428b      	cmp	r3, r1
 800174a:	d900      	bls.n	800174e <__aeabi_ddiv+0x506>
 800174c:	e72c      	b.n	80015a8 <__aeabi_ddiv+0x360>
 800174e:	428a      	cmp	r2, r1
 8001750:	d800      	bhi.n	8001754 <__aeabi_ddiv+0x50c>
 8001752:	e729      	b.n	80015a8 <__aeabi_ddiv+0x360>
 8001754:	1e85      	subs	r5, r0, #2
 8001756:	4461      	add	r1, ip
 8001758:	e726      	b.n	80015a8 <__aeabi_ddiv+0x360>
 800175a:	9900      	ldr	r1, [sp, #0]
 800175c:	3b01      	subs	r3, #1
 800175e:	468c      	mov	ip, r1
 8001760:	4464      	add	r4, ip
 8001762:	42a1      	cmp	r1, r4
 8001764:	d900      	bls.n	8001768 <__aeabi_ddiv+0x520>
 8001766:	e72d      	b.n	80015c4 <__aeabi_ddiv+0x37c>
 8001768:	42a2      	cmp	r2, r4
 800176a:	d800      	bhi.n	800176e <__aeabi_ddiv+0x526>
 800176c:	e72a      	b.n	80015c4 <__aeabi_ddiv+0x37c>
 800176e:	1e83      	subs	r3, r0, #2
 8001770:	4464      	add	r4, ip
 8001772:	e727      	b.n	80015c4 <__aeabi_ddiv+0x37c>
 8001774:	4287      	cmp	r7, r0
 8001776:	d000      	beq.n	800177a <__aeabi_ddiv+0x532>
 8001778:	e6fe      	b.n	8001578 <__aeabi_ddiv+0x330>
 800177a:	45a9      	cmp	r9, r5
 800177c:	d900      	bls.n	8001780 <__aeabi_ddiv+0x538>
 800177e:	e6fb      	b.n	8001578 <__aeabi_ddiv+0x330>
 8001780:	e6f5      	b.n	800156e <__aeabi_ddiv+0x326>
 8001782:	42a2      	cmp	r2, r4
 8001784:	d800      	bhi.n	8001788 <__aeabi_ddiv+0x540>
 8001786:	e6b9      	b.n	80014fc <__aeabi_ddiv+0x2b4>
 8001788:	1e83      	subs	r3, r0, #2
 800178a:	4464      	add	r4, ip
 800178c:	e6b6      	b.n	80014fc <__aeabi_ddiv+0x2b4>
 800178e:	428a      	cmp	r2, r1
 8001790:	d800      	bhi.n	8001794 <__aeabi_ddiv+0x54c>
 8001792:	e69f      	b.n	80014d4 <__aeabi_ddiv+0x28c>
 8001794:	46bc      	mov	ip, r7
 8001796:	1e83      	subs	r3, r0, #2
 8001798:	4698      	mov	r8, r3
 800179a:	4461      	add	r1, ip
 800179c:	e69a      	b.n	80014d4 <__aeabi_ddiv+0x28c>
 800179e:	000a      	movs	r2, r1
 80017a0:	4284      	cmp	r4, r0
 80017a2:	d000      	beq.n	80017a6 <__aeabi_ddiv+0x55e>
 80017a4:	e72e      	b.n	8001604 <__aeabi_ddiv+0x3bc>
 80017a6:	454b      	cmp	r3, r9
 80017a8:	d000      	beq.n	80017ac <__aeabi_ddiv+0x564>
 80017aa:	e72b      	b.n	8001604 <__aeabi_ddiv+0x3bc>
 80017ac:	0035      	movs	r5, r6
 80017ae:	e72c      	b.n	800160a <__aeabi_ddiv+0x3c2>
 80017b0:	4b2a      	ldr	r3, [pc, #168]	@ (800185c <__aeabi_ddiv+0x614>)
 80017b2:	4a2f      	ldr	r2, [pc, #188]	@ (8001870 <__aeabi_ddiv+0x628>)
 80017b4:	4453      	add	r3, sl
 80017b6:	4592      	cmp	sl, r2
 80017b8:	db43      	blt.n	8001842 <__aeabi_ddiv+0x5fa>
 80017ba:	2201      	movs	r2, #1
 80017bc:	2100      	movs	r1, #0
 80017be:	4493      	add	fp, r2
 80017c0:	e72c      	b.n	800161c <__aeabi_ddiv+0x3d4>
 80017c2:	42ac      	cmp	r4, r5
 80017c4:	d800      	bhi.n	80017c8 <__aeabi_ddiv+0x580>
 80017c6:	e6d7      	b.n	8001578 <__aeabi_ddiv+0x330>
 80017c8:	2302      	movs	r3, #2
 80017ca:	425b      	negs	r3, r3
 80017cc:	469c      	mov	ip, r3
 80017ce:	9900      	ldr	r1, [sp, #0]
 80017d0:	444d      	add	r5, r9
 80017d2:	454d      	cmp	r5, r9
 80017d4:	419b      	sbcs	r3, r3
 80017d6:	44e3      	add	fp, ip
 80017d8:	468c      	mov	ip, r1
 80017da:	425b      	negs	r3, r3
 80017dc:	4463      	add	r3, ip
 80017de:	18c0      	adds	r0, r0, r3
 80017e0:	e6cc      	b.n	800157c <__aeabi_ddiv+0x334>
 80017e2:	201f      	movs	r0, #31
 80017e4:	4240      	negs	r0, r0
 80017e6:	1ac3      	subs	r3, r0, r3
 80017e8:	4658      	mov	r0, fp
 80017ea:	40d8      	lsrs	r0, r3
 80017ec:	2920      	cmp	r1, #32
 80017ee:	d004      	beq.n	80017fa <__aeabi_ddiv+0x5b2>
 80017f0:	4659      	mov	r1, fp
 80017f2:	4b20      	ldr	r3, [pc, #128]	@ (8001874 <__aeabi_ddiv+0x62c>)
 80017f4:	4453      	add	r3, sl
 80017f6:	4099      	lsls	r1, r3
 80017f8:	430a      	orrs	r2, r1
 80017fa:	1e53      	subs	r3, r2, #1
 80017fc:	419a      	sbcs	r2, r3
 80017fe:	2307      	movs	r3, #7
 8001800:	0019      	movs	r1, r3
 8001802:	4302      	orrs	r2, r0
 8001804:	2400      	movs	r4, #0
 8001806:	4011      	ands	r1, r2
 8001808:	4213      	tst	r3, r2
 800180a:	d009      	beq.n	8001820 <__aeabi_ddiv+0x5d8>
 800180c:	3308      	adds	r3, #8
 800180e:	4013      	ands	r3, r2
 8001810:	2b04      	cmp	r3, #4
 8001812:	d01d      	beq.n	8001850 <__aeabi_ddiv+0x608>
 8001814:	1d13      	adds	r3, r2, #4
 8001816:	4293      	cmp	r3, r2
 8001818:	4189      	sbcs	r1, r1
 800181a:	001a      	movs	r2, r3
 800181c:	4249      	negs	r1, r1
 800181e:	0749      	lsls	r1, r1, #29
 8001820:	08d2      	lsrs	r2, r2, #3
 8001822:	430a      	orrs	r2, r1
 8001824:	4690      	mov	r8, r2
 8001826:	2300      	movs	r3, #0
 8001828:	e57a      	b.n	8001320 <__aeabi_ddiv+0xd8>
 800182a:	4649      	mov	r1, r9
 800182c:	9f00      	ldr	r7, [sp, #0]
 800182e:	004d      	lsls	r5, r1, #1
 8001830:	454d      	cmp	r5, r9
 8001832:	4189      	sbcs	r1, r1
 8001834:	46bc      	mov	ip, r7
 8001836:	4249      	negs	r1, r1
 8001838:	4461      	add	r1, ip
 800183a:	46a9      	mov	r9, r5
 800183c:	3a02      	subs	r2, #2
 800183e:	1864      	adds	r4, r4, r1
 8001840:	e7ae      	b.n	80017a0 <__aeabi_ddiv+0x558>
 8001842:	2201      	movs	r2, #1
 8001844:	4252      	negs	r2, r2
 8001846:	e746      	b.n	80016d6 <__aeabi_ddiv+0x48e>
 8001848:	4599      	cmp	r9, r3
 800184a:	d3ee      	bcc.n	800182a <__aeabi_ddiv+0x5e2>
 800184c:	000a      	movs	r2, r1
 800184e:	e7aa      	b.n	80017a6 <__aeabi_ddiv+0x55e>
 8001850:	2100      	movs	r1, #0
 8001852:	e7e5      	b.n	8001820 <__aeabi_ddiv+0x5d8>
 8001854:	0759      	lsls	r1, r3, #29
 8001856:	025b      	lsls	r3, r3, #9
 8001858:	0b1c      	lsrs	r4, r3, #12
 800185a:	e7e1      	b.n	8001820 <__aeabi_ddiv+0x5d8>
 800185c:	000003ff 	.word	0x000003ff
 8001860:	feffffff 	.word	0xfeffffff
 8001864:	000007fe 	.word	0x000007fe
 8001868:	000007ff 	.word	0x000007ff
 800186c:	0000041e 	.word	0x0000041e
 8001870:	fffffc02 	.word	0xfffffc02
 8001874:	0000043e 	.word	0x0000043e

08001878 <__eqdf2>:
 8001878:	b5f0      	push	{r4, r5, r6, r7, lr}
 800187a:	4657      	mov	r7, sl
 800187c:	46de      	mov	lr, fp
 800187e:	464e      	mov	r6, r9
 8001880:	4645      	mov	r5, r8
 8001882:	b5e0      	push	{r5, r6, r7, lr}
 8001884:	000d      	movs	r5, r1
 8001886:	0004      	movs	r4, r0
 8001888:	0fe8      	lsrs	r0, r5, #31
 800188a:	4683      	mov	fp, r0
 800188c:	0309      	lsls	r1, r1, #12
 800188e:	0fd8      	lsrs	r0, r3, #31
 8001890:	0b09      	lsrs	r1, r1, #12
 8001892:	4682      	mov	sl, r0
 8001894:	4819      	ldr	r0, [pc, #100]	@ (80018fc <__eqdf2+0x84>)
 8001896:	468c      	mov	ip, r1
 8001898:	031f      	lsls	r7, r3, #12
 800189a:	0069      	lsls	r1, r5, #1
 800189c:	005e      	lsls	r6, r3, #1
 800189e:	0d49      	lsrs	r1, r1, #21
 80018a0:	0b3f      	lsrs	r7, r7, #12
 80018a2:	0d76      	lsrs	r6, r6, #21
 80018a4:	4281      	cmp	r1, r0
 80018a6:	d018      	beq.n	80018da <__eqdf2+0x62>
 80018a8:	4286      	cmp	r6, r0
 80018aa:	d00f      	beq.n	80018cc <__eqdf2+0x54>
 80018ac:	2001      	movs	r0, #1
 80018ae:	42b1      	cmp	r1, r6
 80018b0:	d10d      	bne.n	80018ce <__eqdf2+0x56>
 80018b2:	45bc      	cmp	ip, r7
 80018b4:	d10b      	bne.n	80018ce <__eqdf2+0x56>
 80018b6:	4294      	cmp	r4, r2
 80018b8:	d109      	bne.n	80018ce <__eqdf2+0x56>
 80018ba:	45d3      	cmp	fp, sl
 80018bc:	d01c      	beq.n	80018f8 <__eqdf2+0x80>
 80018be:	2900      	cmp	r1, #0
 80018c0:	d105      	bne.n	80018ce <__eqdf2+0x56>
 80018c2:	4660      	mov	r0, ip
 80018c4:	4320      	orrs	r0, r4
 80018c6:	1e43      	subs	r3, r0, #1
 80018c8:	4198      	sbcs	r0, r3
 80018ca:	e000      	b.n	80018ce <__eqdf2+0x56>
 80018cc:	2001      	movs	r0, #1
 80018ce:	bcf0      	pop	{r4, r5, r6, r7}
 80018d0:	46bb      	mov	fp, r7
 80018d2:	46b2      	mov	sl, r6
 80018d4:	46a9      	mov	r9, r5
 80018d6:	46a0      	mov	r8, r4
 80018d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80018da:	2001      	movs	r0, #1
 80018dc:	428e      	cmp	r6, r1
 80018de:	d1f6      	bne.n	80018ce <__eqdf2+0x56>
 80018e0:	4661      	mov	r1, ip
 80018e2:	4339      	orrs	r1, r7
 80018e4:	000f      	movs	r7, r1
 80018e6:	4317      	orrs	r7, r2
 80018e8:	4327      	orrs	r7, r4
 80018ea:	d1f0      	bne.n	80018ce <__eqdf2+0x56>
 80018ec:	465b      	mov	r3, fp
 80018ee:	4652      	mov	r2, sl
 80018f0:	1a98      	subs	r0, r3, r2
 80018f2:	1e43      	subs	r3, r0, #1
 80018f4:	4198      	sbcs	r0, r3
 80018f6:	e7ea      	b.n	80018ce <__eqdf2+0x56>
 80018f8:	2000      	movs	r0, #0
 80018fa:	e7e8      	b.n	80018ce <__eqdf2+0x56>
 80018fc:	000007ff 	.word	0x000007ff

08001900 <__gedf2>:
 8001900:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001902:	4657      	mov	r7, sl
 8001904:	464e      	mov	r6, r9
 8001906:	4645      	mov	r5, r8
 8001908:	46de      	mov	lr, fp
 800190a:	b5e0      	push	{r5, r6, r7, lr}
 800190c:	000d      	movs	r5, r1
 800190e:	030e      	lsls	r6, r1, #12
 8001910:	0049      	lsls	r1, r1, #1
 8001912:	0d49      	lsrs	r1, r1, #21
 8001914:	468a      	mov	sl, r1
 8001916:	0fdf      	lsrs	r7, r3, #31
 8001918:	0fe9      	lsrs	r1, r5, #31
 800191a:	46bc      	mov	ip, r7
 800191c:	b083      	sub	sp, #12
 800191e:	4f2f      	ldr	r7, [pc, #188]	@ (80019dc <__gedf2+0xdc>)
 8001920:	0004      	movs	r4, r0
 8001922:	4680      	mov	r8, r0
 8001924:	9101      	str	r1, [sp, #4]
 8001926:	0058      	lsls	r0, r3, #1
 8001928:	0319      	lsls	r1, r3, #12
 800192a:	4691      	mov	r9, r2
 800192c:	0b36      	lsrs	r6, r6, #12
 800192e:	0b09      	lsrs	r1, r1, #12
 8001930:	0d40      	lsrs	r0, r0, #21
 8001932:	45ba      	cmp	sl, r7
 8001934:	d01d      	beq.n	8001972 <__gedf2+0x72>
 8001936:	42b8      	cmp	r0, r7
 8001938:	d00d      	beq.n	8001956 <__gedf2+0x56>
 800193a:	4657      	mov	r7, sl
 800193c:	2f00      	cmp	r7, #0
 800193e:	d12a      	bne.n	8001996 <__gedf2+0x96>
 8001940:	4334      	orrs	r4, r6
 8001942:	2800      	cmp	r0, #0
 8001944:	d124      	bne.n	8001990 <__gedf2+0x90>
 8001946:	430a      	orrs	r2, r1
 8001948:	d036      	beq.n	80019b8 <__gedf2+0xb8>
 800194a:	2c00      	cmp	r4, #0
 800194c:	d141      	bne.n	80019d2 <__gedf2+0xd2>
 800194e:	4663      	mov	r3, ip
 8001950:	0058      	lsls	r0, r3, #1
 8001952:	3801      	subs	r0, #1
 8001954:	e015      	b.n	8001982 <__gedf2+0x82>
 8001956:	4311      	orrs	r1, r2
 8001958:	d138      	bne.n	80019cc <__gedf2+0xcc>
 800195a:	4653      	mov	r3, sl
 800195c:	2b00      	cmp	r3, #0
 800195e:	d101      	bne.n	8001964 <__gedf2+0x64>
 8001960:	4326      	orrs	r6, r4
 8001962:	d0f4      	beq.n	800194e <__gedf2+0x4e>
 8001964:	9b01      	ldr	r3, [sp, #4]
 8001966:	4563      	cmp	r3, ip
 8001968:	d107      	bne.n	800197a <__gedf2+0x7a>
 800196a:	9b01      	ldr	r3, [sp, #4]
 800196c:	0058      	lsls	r0, r3, #1
 800196e:	3801      	subs	r0, #1
 8001970:	e007      	b.n	8001982 <__gedf2+0x82>
 8001972:	4326      	orrs	r6, r4
 8001974:	d12a      	bne.n	80019cc <__gedf2+0xcc>
 8001976:	4550      	cmp	r0, sl
 8001978:	d021      	beq.n	80019be <__gedf2+0xbe>
 800197a:	2001      	movs	r0, #1
 800197c:	9b01      	ldr	r3, [sp, #4]
 800197e:	425f      	negs	r7, r3
 8001980:	4338      	orrs	r0, r7
 8001982:	b003      	add	sp, #12
 8001984:	bcf0      	pop	{r4, r5, r6, r7}
 8001986:	46bb      	mov	fp, r7
 8001988:	46b2      	mov	sl, r6
 800198a:	46a9      	mov	r9, r5
 800198c:	46a0      	mov	r8, r4
 800198e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001990:	2c00      	cmp	r4, #0
 8001992:	d0dc      	beq.n	800194e <__gedf2+0x4e>
 8001994:	e7e6      	b.n	8001964 <__gedf2+0x64>
 8001996:	2800      	cmp	r0, #0
 8001998:	d0ef      	beq.n	800197a <__gedf2+0x7a>
 800199a:	9b01      	ldr	r3, [sp, #4]
 800199c:	4563      	cmp	r3, ip
 800199e:	d1ec      	bne.n	800197a <__gedf2+0x7a>
 80019a0:	4582      	cmp	sl, r0
 80019a2:	dcea      	bgt.n	800197a <__gedf2+0x7a>
 80019a4:	dbe1      	blt.n	800196a <__gedf2+0x6a>
 80019a6:	428e      	cmp	r6, r1
 80019a8:	d8e7      	bhi.n	800197a <__gedf2+0x7a>
 80019aa:	d1de      	bne.n	800196a <__gedf2+0x6a>
 80019ac:	45c8      	cmp	r8, r9
 80019ae:	d8e4      	bhi.n	800197a <__gedf2+0x7a>
 80019b0:	2000      	movs	r0, #0
 80019b2:	45c8      	cmp	r8, r9
 80019b4:	d2e5      	bcs.n	8001982 <__gedf2+0x82>
 80019b6:	e7d8      	b.n	800196a <__gedf2+0x6a>
 80019b8:	2c00      	cmp	r4, #0
 80019ba:	d0e2      	beq.n	8001982 <__gedf2+0x82>
 80019bc:	e7dd      	b.n	800197a <__gedf2+0x7a>
 80019be:	4311      	orrs	r1, r2
 80019c0:	d104      	bne.n	80019cc <__gedf2+0xcc>
 80019c2:	9b01      	ldr	r3, [sp, #4]
 80019c4:	4563      	cmp	r3, ip
 80019c6:	d1d8      	bne.n	800197a <__gedf2+0x7a>
 80019c8:	2000      	movs	r0, #0
 80019ca:	e7da      	b.n	8001982 <__gedf2+0x82>
 80019cc:	2002      	movs	r0, #2
 80019ce:	4240      	negs	r0, r0
 80019d0:	e7d7      	b.n	8001982 <__gedf2+0x82>
 80019d2:	9b01      	ldr	r3, [sp, #4]
 80019d4:	4563      	cmp	r3, ip
 80019d6:	d0e6      	beq.n	80019a6 <__gedf2+0xa6>
 80019d8:	e7cf      	b.n	800197a <__gedf2+0x7a>
 80019da:	46c0      	nop			@ (mov r8, r8)
 80019dc:	000007ff 	.word	0x000007ff

080019e0 <__ledf2>:
 80019e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80019e2:	4657      	mov	r7, sl
 80019e4:	464e      	mov	r6, r9
 80019e6:	4645      	mov	r5, r8
 80019e8:	46de      	mov	lr, fp
 80019ea:	b5e0      	push	{r5, r6, r7, lr}
 80019ec:	000d      	movs	r5, r1
 80019ee:	030e      	lsls	r6, r1, #12
 80019f0:	0049      	lsls	r1, r1, #1
 80019f2:	0d49      	lsrs	r1, r1, #21
 80019f4:	468a      	mov	sl, r1
 80019f6:	0fdf      	lsrs	r7, r3, #31
 80019f8:	0fe9      	lsrs	r1, r5, #31
 80019fa:	46bc      	mov	ip, r7
 80019fc:	b083      	sub	sp, #12
 80019fe:	4f2e      	ldr	r7, [pc, #184]	@ (8001ab8 <__ledf2+0xd8>)
 8001a00:	0004      	movs	r4, r0
 8001a02:	4680      	mov	r8, r0
 8001a04:	9101      	str	r1, [sp, #4]
 8001a06:	0058      	lsls	r0, r3, #1
 8001a08:	0319      	lsls	r1, r3, #12
 8001a0a:	4691      	mov	r9, r2
 8001a0c:	0b36      	lsrs	r6, r6, #12
 8001a0e:	0b09      	lsrs	r1, r1, #12
 8001a10:	0d40      	lsrs	r0, r0, #21
 8001a12:	45ba      	cmp	sl, r7
 8001a14:	d01e      	beq.n	8001a54 <__ledf2+0x74>
 8001a16:	42b8      	cmp	r0, r7
 8001a18:	d00d      	beq.n	8001a36 <__ledf2+0x56>
 8001a1a:	4657      	mov	r7, sl
 8001a1c:	2f00      	cmp	r7, #0
 8001a1e:	d127      	bne.n	8001a70 <__ledf2+0x90>
 8001a20:	4334      	orrs	r4, r6
 8001a22:	2800      	cmp	r0, #0
 8001a24:	d133      	bne.n	8001a8e <__ledf2+0xae>
 8001a26:	430a      	orrs	r2, r1
 8001a28:	d034      	beq.n	8001a94 <__ledf2+0xb4>
 8001a2a:	2c00      	cmp	r4, #0
 8001a2c:	d140      	bne.n	8001ab0 <__ledf2+0xd0>
 8001a2e:	4663      	mov	r3, ip
 8001a30:	0058      	lsls	r0, r3, #1
 8001a32:	3801      	subs	r0, #1
 8001a34:	e015      	b.n	8001a62 <__ledf2+0x82>
 8001a36:	4311      	orrs	r1, r2
 8001a38:	d112      	bne.n	8001a60 <__ledf2+0x80>
 8001a3a:	4653      	mov	r3, sl
 8001a3c:	2b00      	cmp	r3, #0
 8001a3e:	d101      	bne.n	8001a44 <__ledf2+0x64>
 8001a40:	4326      	orrs	r6, r4
 8001a42:	d0f4      	beq.n	8001a2e <__ledf2+0x4e>
 8001a44:	9b01      	ldr	r3, [sp, #4]
 8001a46:	4563      	cmp	r3, ip
 8001a48:	d01d      	beq.n	8001a86 <__ledf2+0xa6>
 8001a4a:	2001      	movs	r0, #1
 8001a4c:	9b01      	ldr	r3, [sp, #4]
 8001a4e:	425f      	negs	r7, r3
 8001a50:	4338      	orrs	r0, r7
 8001a52:	e006      	b.n	8001a62 <__ledf2+0x82>
 8001a54:	4326      	orrs	r6, r4
 8001a56:	d103      	bne.n	8001a60 <__ledf2+0x80>
 8001a58:	4550      	cmp	r0, sl
 8001a5a:	d1f6      	bne.n	8001a4a <__ledf2+0x6a>
 8001a5c:	4311      	orrs	r1, r2
 8001a5e:	d01c      	beq.n	8001a9a <__ledf2+0xba>
 8001a60:	2002      	movs	r0, #2
 8001a62:	b003      	add	sp, #12
 8001a64:	bcf0      	pop	{r4, r5, r6, r7}
 8001a66:	46bb      	mov	fp, r7
 8001a68:	46b2      	mov	sl, r6
 8001a6a:	46a9      	mov	r9, r5
 8001a6c:	46a0      	mov	r8, r4
 8001a6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a70:	2800      	cmp	r0, #0
 8001a72:	d0ea      	beq.n	8001a4a <__ledf2+0x6a>
 8001a74:	9b01      	ldr	r3, [sp, #4]
 8001a76:	4563      	cmp	r3, ip
 8001a78:	d1e7      	bne.n	8001a4a <__ledf2+0x6a>
 8001a7a:	4582      	cmp	sl, r0
 8001a7c:	dce5      	bgt.n	8001a4a <__ledf2+0x6a>
 8001a7e:	db02      	blt.n	8001a86 <__ledf2+0xa6>
 8001a80:	428e      	cmp	r6, r1
 8001a82:	d8e2      	bhi.n	8001a4a <__ledf2+0x6a>
 8001a84:	d00e      	beq.n	8001aa4 <__ledf2+0xc4>
 8001a86:	9b01      	ldr	r3, [sp, #4]
 8001a88:	0058      	lsls	r0, r3, #1
 8001a8a:	3801      	subs	r0, #1
 8001a8c:	e7e9      	b.n	8001a62 <__ledf2+0x82>
 8001a8e:	2c00      	cmp	r4, #0
 8001a90:	d0cd      	beq.n	8001a2e <__ledf2+0x4e>
 8001a92:	e7d7      	b.n	8001a44 <__ledf2+0x64>
 8001a94:	2c00      	cmp	r4, #0
 8001a96:	d0e4      	beq.n	8001a62 <__ledf2+0x82>
 8001a98:	e7d7      	b.n	8001a4a <__ledf2+0x6a>
 8001a9a:	9b01      	ldr	r3, [sp, #4]
 8001a9c:	2000      	movs	r0, #0
 8001a9e:	4563      	cmp	r3, ip
 8001aa0:	d0df      	beq.n	8001a62 <__ledf2+0x82>
 8001aa2:	e7d2      	b.n	8001a4a <__ledf2+0x6a>
 8001aa4:	45c8      	cmp	r8, r9
 8001aa6:	d8d0      	bhi.n	8001a4a <__ledf2+0x6a>
 8001aa8:	2000      	movs	r0, #0
 8001aaa:	45c8      	cmp	r8, r9
 8001aac:	d2d9      	bcs.n	8001a62 <__ledf2+0x82>
 8001aae:	e7ea      	b.n	8001a86 <__ledf2+0xa6>
 8001ab0:	9b01      	ldr	r3, [sp, #4]
 8001ab2:	4563      	cmp	r3, ip
 8001ab4:	d0e4      	beq.n	8001a80 <__ledf2+0xa0>
 8001ab6:	e7c8      	b.n	8001a4a <__ledf2+0x6a>
 8001ab8:	000007ff 	.word	0x000007ff

08001abc <__aeabi_dmul>:
 8001abc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001abe:	4657      	mov	r7, sl
 8001ac0:	464e      	mov	r6, r9
 8001ac2:	46de      	mov	lr, fp
 8001ac4:	4645      	mov	r5, r8
 8001ac6:	b5e0      	push	{r5, r6, r7, lr}
 8001ac8:	001f      	movs	r7, r3
 8001aca:	030b      	lsls	r3, r1, #12
 8001acc:	0b1b      	lsrs	r3, r3, #12
 8001ace:	0016      	movs	r6, r2
 8001ad0:	469a      	mov	sl, r3
 8001ad2:	0fca      	lsrs	r2, r1, #31
 8001ad4:	004b      	lsls	r3, r1, #1
 8001ad6:	0004      	movs	r4, r0
 8001ad8:	4691      	mov	r9, r2
 8001ada:	b085      	sub	sp, #20
 8001adc:	0d5b      	lsrs	r3, r3, #21
 8001ade:	d100      	bne.n	8001ae2 <__aeabi_dmul+0x26>
 8001ae0:	e1cf      	b.n	8001e82 <__aeabi_dmul+0x3c6>
 8001ae2:	4acd      	ldr	r2, [pc, #820]	@ (8001e18 <__aeabi_dmul+0x35c>)
 8001ae4:	4293      	cmp	r3, r2
 8001ae6:	d055      	beq.n	8001b94 <__aeabi_dmul+0xd8>
 8001ae8:	4651      	mov	r1, sl
 8001aea:	0f42      	lsrs	r2, r0, #29
 8001aec:	00c9      	lsls	r1, r1, #3
 8001aee:	430a      	orrs	r2, r1
 8001af0:	2180      	movs	r1, #128	@ 0x80
 8001af2:	0409      	lsls	r1, r1, #16
 8001af4:	4311      	orrs	r1, r2
 8001af6:	00c2      	lsls	r2, r0, #3
 8001af8:	4690      	mov	r8, r2
 8001afa:	4ac8      	ldr	r2, [pc, #800]	@ (8001e1c <__aeabi_dmul+0x360>)
 8001afc:	468a      	mov	sl, r1
 8001afe:	4693      	mov	fp, r2
 8001b00:	449b      	add	fp, r3
 8001b02:	2300      	movs	r3, #0
 8001b04:	2500      	movs	r5, #0
 8001b06:	9302      	str	r3, [sp, #8]
 8001b08:	033c      	lsls	r4, r7, #12
 8001b0a:	007b      	lsls	r3, r7, #1
 8001b0c:	0ffa      	lsrs	r2, r7, #31
 8001b0e:	9601      	str	r6, [sp, #4]
 8001b10:	0b24      	lsrs	r4, r4, #12
 8001b12:	0d5b      	lsrs	r3, r3, #21
 8001b14:	9200      	str	r2, [sp, #0]
 8001b16:	d100      	bne.n	8001b1a <__aeabi_dmul+0x5e>
 8001b18:	e188      	b.n	8001e2c <__aeabi_dmul+0x370>
 8001b1a:	4abf      	ldr	r2, [pc, #764]	@ (8001e18 <__aeabi_dmul+0x35c>)
 8001b1c:	4293      	cmp	r3, r2
 8001b1e:	d100      	bne.n	8001b22 <__aeabi_dmul+0x66>
 8001b20:	e092      	b.n	8001c48 <__aeabi_dmul+0x18c>
 8001b22:	4abe      	ldr	r2, [pc, #760]	@ (8001e1c <__aeabi_dmul+0x360>)
 8001b24:	4694      	mov	ip, r2
 8001b26:	4463      	add	r3, ip
 8001b28:	449b      	add	fp, r3
 8001b2a:	2d0a      	cmp	r5, #10
 8001b2c:	dc42      	bgt.n	8001bb4 <__aeabi_dmul+0xf8>
 8001b2e:	00e4      	lsls	r4, r4, #3
 8001b30:	0f73      	lsrs	r3, r6, #29
 8001b32:	4323      	orrs	r3, r4
 8001b34:	2480      	movs	r4, #128	@ 0x80
 8001b36:	4649      	mov	r1, r9
 8001b38:	0424      	lsls	r4, r4, #16
 8001b3a:	431c      	orrs	r4, r3
 8001b3c:	00f3      	lsls	r3, r6, #3
 8001b3e:	9301      	str	r3, [sp, #4]
 8001b40:	9b00      	ldr	r3, [sp, #0]
 8001b42:	2000      	movs	r0, #0
 8001b44:	4059      	eors	r1, r3
 8001b46:	b2cb      	uxtb	r3, r1
 8001b48:	9303      	str	r3, [sp, #12]
 8001b4a:	2d02      	cmp	r5, #2
 8001b4c:	dc00      	bgt.n	8001b50 <__aeabi_dmul+0x94>
 8001b4e:	e094      	b.n	8001c7a <__aeabi_dmul+0x1be>
 8001b50:	2301      	movs	r3, #1
 8001b52:	40ab      	lsls	r3, r5
 8001b54:	001d      	movs	r5, r3
 8001b56:	23a6      	movs	r3, #166	@ 0xa6
 8001b58:	002a      	movs	r2, r5
 8001b5a:	00db      	lsls	r3, r3, #3
 8001b5c:	401a      	ands	r2, r3
 8001b5e:	421d      	tst	r5, r3
 8001b60:	d000      	beq.n	8001b64 <__aeabi_dmul+0xa8>
 8001b62:	e229      	b.n	8001fb8 <__aeabi_dmul+0x4fc>
 8001b64:	2390      	movs	r3, #144	@ 0x90
 8001b66:	009b      	lsls	r3, r3, #2
 8001b68:	421d      	tst	r5, r3
 8001b6a:	d100      	bne.n	8001b6e <__aeabi_dmul+0xb2>
 8001b6c:	e24d      	b.n	800200a <__aeabi_dmul+0x54e>
 8001b6e:	2300      	movs	r3, #0
 8001b70:	2480      	movs	r4, #128	@ 0x80
 8001b72:	4699      	mov	r9, r3
 8001b74:	0324      	lsls	r4, r4, #12
 8001b76:	4ba8      	ldr	r3, [pc, #672]	@ (8001e18 <__aeabi_dmul+0x35c>)
 8001b78:	0010      	movs	r0, r2
 8001b7a:	464a      	mov	r2, r9
 8001b7c:	051b      	lsls	r3, r3, #20
 8001b7e:	4323      	orrs	r3, r4
 8001b80:	07d2      	lsls	r2, r2, #31
 8001b82:	4313      	orrs	r3, r2
 8001b84:	0019      	movs	r1, r3
 8001b86:	b005      	add	sp, #20
 8001b88:	bcf0      	pop	{r4, r5, r6, r7}
 8001b8a:	46bb      	mov	fp, r7
 8001b8c:	46b2      	mov	sl, r6
 8001b8e:	46a9      	mov	r9, r5
 8001b90:	46a0      	mov	r8, r4
 8001b92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001b94:	4652      	mov	r2, sl
 8001b96:	4302      	orrs	r2, r0
 8001b98:	4690      	mov	r8, r2
 8001b9a:	d000      	beq.n	8001b9e <__aeabi_dmul+0xe2>
 8001b9c:	e1ac      	b.n	8001ef8 <__aeabi_dmul+0x43c>
 8001b9e:	469b      	mov	fp, r3
 8001ba0:	2302      	movs	r3, #2
 8001ba2:	4692      	mov	sl, r2
 8001ba4:	2508      	movs	r5, #8
 8001ba6:	9302      	str	r3, [sp, #8]
 8001ba8:	e7ae      	b.n	8001b08 <__aeabi_dmul+0x4c>
 8001baa:	9b00      	ldr	r3, [sp, #0]
 8001bac:	46a2      	mov	sl, r4
 8001bae:	4699      	mov	r9, r3
 8001bb0:	9b01      	ldr	r3, [sp, #4]
 8001bb2:	4698      	mov	r8, r3
 8001bb4:	9b02      	ldr	r3, [sp, #8]
 8001bb6:	2b02      	cmp	r3, #2
 8001bb8:	d100      	bne.n	8001bbc <__aeabi_dmul+0x100>
 8001bba:	e1ca      	b.n	8001f52 <__aeabi_dmul+0x496>
 8001bbc:	2b03      	cmp	r3, #3
 8001bbe:	d100      	bne.n	8001bc2 <__aeabi_dmul+0x106>
 8001bc0:	e192      	b.n	8001ee8 <__aeabi_dmul+0x42c>
 8001bc2:	2b01      	cmp	r3, #1
 8001bc4:	d110      	bne.n	8001be8 <__aeabi_dmul+0x12c>
 8001bc6:	2300      	movs	r3, #0
 8001bc8:	2400      	movs	r4, #0
 8001bca:	2200      	movs	r2, #0
 8001bcc:	e7d4      	b.n	8001b78 <__aeabi_dmul+0xbc>
 8001bce:	2201      	movs	r2, #1
 8001bd0:	087b      	lsrs	r3, r7, #1
 8001bd2:	403a      	ands	r2, r7
 8001bd4:	4313      	orrs	r3, r2
 8001bd6:	4652      	mov	r2, sl
 8001bd8:	07d2      	lsls	r2, r2, #31
 8001bda:	4313      	orrs	r3, r2
 8001bdc:	4698      	mov	r8, r3
 8001bde:	4653      	mov	r3, sl
 8001be0:	085b      	lsrs	r3, r3, #1
 8001be2:	469a      	mov	sl, r3
 8001be4:	9b03      	ldr	r3, [sp, #12]
 8001be6:	4699      	mov	r9, r3
 8001be8:	465b      	mov	r3, fp
 8001bea:	1c58      	adds	r0, r3, #1
 8001bec:	2380      	movs	r3, #128	@ 0x80
 8001bee:	00db      	lsls	r3, r3, #3
 8001bf0:	445b      	add	r3, fp
 8001bf2:	2b00      	cmp	r3, #0
 8001bf4:	dc00      	bgt.n	8001bf8 <__aeabi_dmul+0x13c>
 8001bf6:	e1b1      	b.n	8001f5c <__aeabi_dmul+0x4a0>
 8001bf8:	4642      	mov	r2, r8
 8001bfa:	0752      	lsls	r2, r2, #29
 8001bfc:	d00b      	beq.n	8001c16 <__aeabi_dmul+0x15a>
 8001bfe:	220f      	movs	r2, #15
 8001c00:	4641      	mov	r1, r8
 8001c02:	400a      	ands	r2, r1
 8001c04:	2a04      	cmp	r2, #4
 8001c06:	d006      	beq.n	8001c16 <__aeabi_dmul+0x15a>
 8001c08:	4642      	mov	r2, r8
 8001c0a:	1d11      	adds	r1, r2, #4
 8001c0c:	4541      	cmp	r1, r8
 8001c0e:	4192      	sbcs	r2, r2
 8001c10:	4688      	mov	r8, r1
 8001c12:	4252      	negs	r2, r2
 8001c14:	4492      	add	sl, r2
 8001c16:	4652      	mov	r2, sl
 8001c18:	01d2      	lsls	r2, r2, #7
 8001c1a:	d506      	bpl.n	8001c2a <__aeabi_dmul+0x16e>
 8001c1c:	4652      	mov	r2, sl
 8001c1e:	4b80      	ldr	r3, [pc, #512]	@ (8001e20 <__aeabi_dmul+0x364>)
 8001c20:	401a      	ands	r2, r3
 8001c22:	2380      	movs	r3, #128	@ 0x80
 8001c24:	4692      	mov	sl, r2
 8001c26:	00db      	lsls	r3, r3, #3
 8001c28:	18c3      	adds	r3, r0, r3
 8001c2a:	4a7e      	ldr	r2, [pc, #504]	@ (8001e24 <__aeabi_dmul+0x368>)
 8001c2c:	4293      	cmp	r3, r2
 8001c2e:	dd00      	ble.n	8001c32 <__aeabi_dmul+0x176>
 8001c30:	e18f      	b.n	8001f52 <__aeabi_dmul+0x496>
 8001c32:	4642      	mov	r2, r8
 8001c34:	08d1      	lsrs	r1, r2, #3
 8001c36:	4652      	mov	r2, sl
 8001c38:	0752      	lsls	r2, r2, #29
 8001c3a:	430a      	orrs	r2, r1
 8001c3c:	4651      	mov	r1, sl
 8001c3e:	055b      	lsls	r3, r3, #21
 8001c40:	024c      	lsls	r4, r1, #9
 8001c42:	0b24      	lsrs	r4, r4, #12
 8001c44:	0d5b      	lsrs	r3, r3, #21
 8001c46:	e797      	b.n	8001b78 <__aeabi_dmul+0xbc>
 8001c48:	4b73      	ldr	r3, [pc, #460]	@ (8001e18 <__aeabi_dmul+0x35c>)
 8001c4a:	4326      	orrs	r6, r4
 8001c4c:	469c      	mov	ip, r3
 8001c4e:	44e3      	add	fp, ip
 8001c50:	2e00      	cmp	r6, #0
 8001c52:	d100      	bne.n	8001c56 <__aeabi_dmul+0x19a>
 8001c54:	e16f      	b.n	8001f36 <__aeabi_dmul+0x47a>
 8001c56:	2303      	movs	r3, #3
 8001c58:	4649      	mov	r1, r9
 8001c5a:	431d      	orrs	r5, r3
 8001c5c:	9b00      	ldr	r3, [sp, #0]
 8001c5e:	4059      	eors	r1, r3
 8001c60:	b2cb      	uxtb	r3, r1
 8001c62:	9303      	str	r3, [sp, #12]
 8001c64:	2d0a      	cmp	r5, #10
 8001c66:	dd00      	ble.n	8001c6a <__aeabi_dmul+0x1ae>
 8001c68:	e133      	b.n	8001ed2 <__aeabi_dmul+0x416>
 8001c6a:	2301      	movs	r3, #1
 8001c6c:	40ab      	lsls	r3, r5
 8001c6e:	001d      	movs	r5, r3
 8001c70:	2303      	movs	r3, #3
 8001c72:	9302      	str	r3, [sp, #8]
 8001c74:	2288      	movs	r2, #136	@ 0x88
 8001c76:	422a      	tst	r2, r5
 8001c78:	d197      	bne.n	8001baa <__aeabi_dmul+0xee>
 8001c7a:	4642      	mov	r2, r8
 8001c7c:	4643      	mov	r3, r8
 8001c7e:	0412      	lsls	r2, r2, #16
 8001c80:	0c12      	lsrs	r2, r2, #16
 8001c82:	0016      	movs	r6, r2
 8001c84:	9801      	ldr	r0, [sp, #4]
 8001c86:	0c1d      	lsrs	r5, r3, #16
 8001c88:	0c03      	lsrs	r3, r0, #16
 8001c8a:	0400      	lsls	r0, r0, #16
 8001c8c:	0c00      	lsrs	r0, r0, #16
 8001c8e:	4346      	muls	r6, r0
 8001c90:	46b4      	mov	ip, r6
 8001c92:	001e      	movs	r6, r3
 8001c94:	436e      	muls	r6, r5
 8001c96:	9600      	str	r6, [sp, #0]
 8001c98:	0016      	movs	r6, r2
 8001c9a:	0007      	movs	r7, r0
 8001c9c:	435e      	muls	r6, r3
 8001c9e:	4661      	mov	r1, ip
 8001ca0:	46b0      	mov	r8, r6
 8001ca2:	436f      	muls	r7, r5
 8001ca4:	0c0e      	lsrs	r6, r1, #16
 8001ca6:	44b8      	add	r8, r7
 8001ca8:	4446      	add	r6, r8
 8001caa:	42b7      	cmp	r7, r6
 8001cac:	d905      	bls.n	8001cba <__aeabi_dmul+0x1fe>
 8001cae:	2180      	movs	r1, #128	@ 0x80
 8001cb0:	0249      	lsls	r1, r1, #9
 8001cb2:	4688      	mov	r8, r1
 8001cb4:	9f00      	ldr	r7, [sp, #0]
 8001cb6:	4447      	add	r7, r8
 8001cb8:	9700      	str	r7, [sp, #0]
 8001cba:	4661      	mov	r1, ip
 8001cbc:	0409      	lsls	r1, r1, #16
 8001cbe:	0c09      	lsrs	r1, r1, #16
 8001cc0:	0c37      	lsrs	r7, r6, #16
 8001cc2:	0436      	lsls	r6, r6, #16
 8001cc4:	468c      	mov	ip, r1
 8001cc6:	0031      	movs	r1, r6
 8001cc8:	4461      	add	r1, ip
 8001cca:	9101      	str	r1, [sp, #4]
 8001ccc:	0011      	movs	r1, r2
 8001cce:	0c26      	lsrs	r6, r4, #16
 8001cd0:	0424      	lsls	r4, r4, #16
 8001cd2:	0c24      	lsrs	r4, r4, #16
 8001cd4:	4361      	muls	r1, r4
 8001cd6:	468c      	mov	ip, r1
 8001cd8:	0021      	movs	r1, r4
 8001cda:	4369      	muls	r1, r5
 8001cdc:	4689      	mov	r9, r1
 8001cde:	4661      	mov	r1, ip
 8001ce0:	0c09      	lsrs	r1, r1, #16
 8001ce2:	4688      	mov	r8, r1
 8001ce4:	4372      	muls	r2, r6
 8001ce6:	444a      	add	r2, r9
 8001ce8:	4442      	add	r2, r8
 8001cea:	4375      	muls	r5, r6
 8001cec:	4591      	cmp	r9, r2
 8001cee:	d903      	bls.n	8001cf8 <__aeabi_dmul+0x23c>
 8001cf0:	2180      	movs	r1, #128	@ 0x80
 8001cf2:	0249      	lsls	r1, r1, #9
 8001cf4:	4688      	mov	r8, r1
 8001cf6:	4445      	add	r5, r8
 8001cf8:	0c11      	lsrs	r1, r2, #16
 8001cfa:	4688      	mov	r8, r1
 8001cfc:	4661      	mov	r1, ip
 8001cfe:	0409      	lsls	r1, r1, #16
 8001d00:	0c09      	lsrs	r1, r1, #16
 8001d02:	468c      	mov	ip, r1
 8001d04:	0412      	lsls	r2, r2, #16
 8001d06:	4462      	add	r2, ip
 8001d08:	18b9      	adds	r1, r7, r2
 8001d0a:	9102      	str	r1, [sp, #8]
 8001d0c:	4651      	mov	r1, sl
 8001d0e:	0c09      	lsrs	r1, r1, #16
 8001d10:	468c      	mov	ip, r1
 8001d12:	4651      	mov	r1, sl
 8001d14:	040f      	lsls	r7, r1, #16
 8001d16:	0c3f      	lsrs	r7, r7, #16
 8001d18:	0039      	movs	r1, r7
 8001d1a:	4341      	muls	r1, r0
 8001d1c:	4445      	add	r5, r8
 8001d1e:	4688      	mov	r8, r1
 8001d20:	4661      	mov	r1, ip
 8001d22:	4341      	muls	r1, r0
 8001d24:	468a      	mov	sl, r1
 8001d26:	4641      	mov	r1, r8
 8001d28:	4660      	mov	r0, ip
 8001d2a:	0c09      	lsrs	r1, r1, #16
 8001d2c:	4689      	mov	r9, r1
 8001d2e:	4358      	muls	r0, r3
 8001d30:	437b      	muls	r3, r7
 8001d32:	4453      	add	r3, sl
 8001d34:	444b      	add	r3, r9
 8001d36:	459a      	cmp	sl, r3
 8001d38:	d903      	bls.n	8001d42 <__aeabi_dmul+0x286>
 8001d3a:	2180      	movs	r1, #128	@ 0x80
 8001d3c:	0249      	lsls	r1, r1, #9
 8001d3e:	4689      	mov	r9, r1
 8001d40:	4448      	add	r0, r9
 8001d42:	0c19      	lsrs	r1, r3, #16
 8001d44:	4689      	mov	r9, r1
 8001d46:	4641      	mov	r1, r8
 8001d48:	0409      	lsls	r1, r1, #16
 8001d4a:	0c09      	lsrs	r1, r1, #16
 8001d4c:	4688      	mov	r8, r1
 8001d4e:	0039      	movs	r1, r7
 8001d50:	4361      	muls	r1, r4
 8001d52:	041b      	lsls	r3, r3, #16
 8001d54:	4443      	add	r3, r8
 8001d56:	4688      	mov	r8, r1
 8001d58:	4661      	mov	r1, ip
 8001d5a:	434c      	muls	r4, r1
 8001d5c:	4371      	muls	r1, r6
 8001d5e:	468c      	mov	ip, r1
 8001d60:	4641      	mov	r1, r8
 8001d62:	4377      	muls	r7, r6
 8001d64:	0c0e      	lsrs	r6, r1, #16
 8001d66:	193f      	adds	r7, r7, r4
 8001d68:	19f6      	adds	r6, r6, r7
 8001d6a:	4448      	add	r0, r9
 8001d6c:	42b4      	cmp	r4, r6
 8001d6e:	d903      	bls.n	8001d78 <__aeabi_dmul+0x2bc>
 8001d70:	2180      	movs	r1, #128	@ 0x80
 8001d72:	0249      	lsls	r1, r1, #9
 8001d74:	4689      	mov	r9, r1
 8001d76:	44cc      	add	ip, r9
 8001d78:	9902      	ldr	r1, [sp, #8]
 8001d7a:	9f00      	ldr	r7, [sp, #0]
 8001d7c:	4689      	mov	r9, r1
 8001d7e:	0431      	lsls	r1, r6, #16
 8001d80:	444f      	add	r7, r9
 8001d82:	4689      	mov	r9, r1
 8001d84:	4641      	mov	r1, r8
 8001d86:	4297      	cmp	r7, r2
 8001d88:	4192      	sbcs	r2, r2
 8001d8a:	040c      	lsls	r4, r1, #16
 8001d8c:	0c24      	lsrs	r4, r4, #16
 8001d8e:	444c      	add	r4, r9
 8001d90:	18ff      	adds	r7, r7, r3
 8001d92:	4252      	negs	r2, r2
 8001d94:	1964      	adds	r4, r4, r5
 8001d96:	18a1      	adds	r1, r4, r2
 8001d98:	429f      	cmp	r7, r3
 8001d9a:	419b      	sbcs	r3, r3
 8001d9c:	4688      	mov	r8, r1
 8001d9e:	4682      	mov	sl, r0
 8001da0:	425b      	negs	r3, r3
 8001da2:	4699      	mov	r9, r3
 8001da4:	4590      	cmp	r8, r2
 8001da6:	4192      	sbcs	r2, r2
 8001da8:	42ac      	cmp	r4, r5
 8001daa:	41a4      	sbcs	r4, r4
 8001dac:	44c2      	add	sl, r8
 8001dae:	44d1      	add	r9, sl
 8001db0:	4252      	negs	r2, r2
 8001db2:	4264      	negs	r4, r4
 8001db4:	4314      	orrs	r4, r2
 8001db6:	4599      	cmp	r9, r3
 8001db8:	419b      	sbcs	r3, r3
 8001dba:	4582      	cmp	sl, r0
 8001dbc:	4192      	sbcs	r2, r2
 8001dbe:	425b      	negs	r3, r3
 8001dc0:	4252      	negs	r2, r2
 8001dc2:	4313      	orrs	r3, r2
 8001dc4:	464a      	mov	r2, r9
 8001dc6:	0c36      	lsrs	r6, r6, #16
 8001dc8:	19a4      	adds	r4, r4, r6
 8001dca:	18e3      	adds	r3, r4, r3
 8001dcc:	4463      	add	r3, ip
 8001dce:	025b      	lsls	r3, r3, #9
 8001dd0:	0dd2      	lsrs	r2, r2, #23
 8001dd2:	431a      	orrs	r2, r3
 8001dd4:	9901      	ldr	r1, [sp, #4]
 8001dd6:	4692      	mov	sl, r2
 8001dd8:	027a      	lsls	r2, r7, #9
 8001dda:	430a      	orrs	r2, r1
 8001ddc:	1e50      	subs	r0, r2, #1
 8001dde:	4182      	sbcs	r2, r0
 8001de0:	0dff      	lsrs	r7, r7, #23
 8001de2:	4317      	orrs	r7, r2
 8001de4:	464a      	mov	r2, r9
 8001de6:	0252      	lsls	r2, r2, #9
 8001de8:	4317      	orrs	r7, r2
 8001dea:	46b8      	mov	r8, r7
 8001dec:	01db      	lsls	r3, r3, #7
 8001dee:	d500      	bpl.n	8001df2 <__aeabi_dmul+0x336>
 8001df0:	e6ed      	b.n	8001bce <__aeabi_dmul+0x112>
 8001df2:	4b0d      	ldr	r3, [pc, #52]	@ (8001e28 <__aeabi_dmul+0x36c>)
 8001df4:	9a03      	ldr	r2, [sp, #12]
 8001df6:	445b      	add	r3, fp
 8001df8:	4691      	mov	r9, r2
 8001dfa:	2b00      	cmp	r3, #0
 8001dfc:	dc00      	bgt.n	8001e00 <__aeabi_dmul+0x344>
 8001dfe:	e0ac      	b.n	8001f5a <__aeabi_dmul+0x49e>
 8001e00:	003a      	movs	r2, r7
 8001e02:	0752      	lsls	r2, r2, #29
 8001e04:	d100      	bne.n	8001e08 <__aeabi_dmul+0x34c>
 8001e06:	e710      	b.n	8001c2a <__aeabi_dmul+0x16e>
 8001e08:	220f      	movs	r2, #15
 8001e0a:	4658      	mov	r0, fp
 8001e0c:	403a      	ands	r2, r7
 8001e0e:	2a04      	cmp	r2, #4
 8001e10:	d000      	beq.n	8001e14 <__aeabi_dmul+0x358>
 8001e12:	e6f9      	b.n	8001c08 <__aeabi_dmul+0x14c>
 8001e14:	e709      	b.n	8001c2a <__aeabi_dmul+0x16e>
 8001e16:	46c0      	nop			@ (mov r8, r8)
 8001e18:	000007ff 	.word	0x000007ff
 8001e1c:	fffffc01 	.word	0xfffffc01
 8001e20:	feffffff 	.word	0xfeffffff
 8001e24:	000007fe 	.word	0x000007fe
 8001e28:	000003ff 	.word	0x000003ff
 8001e2c:	0022      	movs	r2, r4
 8001e2e:	4332      	orrs	r2, r6
 8001e30:	d06f      	beq.n	8001f12 <__aeabi_dmul+0x456>
 8001e32:	2c00      	cmp	r4, #0
 8001e34:	d100      	bne.n	8001e38 <__aeabi_dmul+0x37c>
 8001e36:	e0c2      	b.n	8001fbe <__aeabi_dmul+0x502>
 8001e38:	0020      	movs	r0, r4
 8001e3a:	f000 fea9 	bl	8002b90 <__clzsi2>
 8001e3e:	0002      	movs	r2, r0
 8001e40:	0003      	movs	r3, r0
 8001e42:	3a0b      	subs	r2, #11
 8001e44:	201d      	movs	r0, #29
 8001e46:	1a82      	subs	r2, r0, r2
 8001e48:	0030      	movs	r0, r6
 8001e4a:	0019      	movs	r1, r3
 8001e4c:	40d0      	lsrs	r0, r2
 8001e4e:	3908      	subs	r1, #8
 8001e50:	408c      	lsls	r4, r1
 8001e52:	0002      	movs	r2, r0
 8001e54:	4322      	orrs	r2, r4
 8001e56:	0034      	movs	r4, r6
 8001e58:	408c      	lsls	r4, r1
 8001e5a:	4659      	mov	r1, fp
 8001e5c:	1acb      	subs	r3, r1, r3
 8001e5e:	4986      	ldr	r1, [pc, #536]	@ (8002078 <__aeabi_dmul+0x5bc>)
 8001e60:	468b      	mov	fp, r1
 8001e62:	449b      	add	fp, r3
 8001e64:	2d0a      	cmp	r5, #10
 8001e66:	dd00      	ble.n	8001e6a <__aeabi_dmul+0x3ae>
 8001e68:	e6a4      	b.n	8001bb4 <__aeabi_dmul+0xf8>
 8001e6a:	4649      	mov	r1, r9
 8001e6c:	9b00      	ldr	r3, [sp, #0]
 8001e6e:	9401      	str	r4, [sp, #4]
 8001e70:	4059      	eors	r1, r3
 8001e72:	b2cb      	uxtb	r3, r1
 8001e74:	0014      	movs	r4, r2
 8001e76:	2000      	movs	r0, #0
 8001e78:	9303      	str	r3, [sp, #12]
 8001e7a:	2d02      	cmp	r5, #2
 8001e7c:	dd00      	ble.n	8001e80 <__aeabi_dmul+0x3c4>
 8001e7e:	e667      	b.n	8001b50 <__aeabi_dmul+0x94>
 8001e80:	e6fb      	b.n	8001c7a <__aeabi_dmul+0x1be>
 8001e82:	4653      	mov	r3, sl
 8001e84:	4303      	orrs	r3, r0
 8001e86:	4698      	mov	r8, r3
 8001e88:	d03c      	beq.n	8001f04 <__aeabi_dmul+0x448>
 8001e8a:	4653      	mov	r3, sl
 8001e8c:	2b00      	cmp	r3, #0
 8001e8e:	d100      	bne.n	8001e92 <__aeabi_dmul+0x3d6>
 8001e90:	e0a3      	b.n	8001fda <__aeabi_dmul+0x51e>
 8001e92:	4650      	mov	r0, sl
 8001e94:	f000 fe7c 	bl	8002b90 <__clzsi2>
 8001e98:	230b      	movs	r3, #11
 8001e9a:	425b      	negs	r3, r3
 8001e9c:	469c      	mov	ip, r3
 8001e9e:	0002      	movs	r2, r0
 8001ea0:	4484      	add	ip, r0
 8001ea2:	0011      	movs	r1, r2
 8001ea4:	4650      	mov	r0, sl
 8001ea6:	3908      	subs	r1, #8
 8001ea8:	4088      	lsls	r0, r1
 8001eaa:	231d      	movs	r3, #29
 8001eac:	4680      	mov	r8, r0
 8001eae:	4660      	mov	r0, ip
 8001eb0:	1a1b      	subs	r3, r3, r0
 8001eb2:	0020      	movs	r0, r4
 8001eb4:	40d8      	lsrs	r0, r3
 8001eb6:	0003      	movs	r3, r0
 8001eb8:	4640      	mov	r0, r8
 8001eba:	4303      	orrs	r3, r0
 8001ebc:	469a      	mov	sl, r3
 8001ebe:	0023      	movs	r3, r4
 8001ec0:	408b      	lsls	r3, r1
 8001ec2:	4698      	mov	r8, r3
 8001ec4:	4b6c      	ldr	r3, [pc, #432]	@ (8002078 <__aeabi_dmul+0x5bc>)
 8001ec6:	2500      	movs	r5, #0
 8001ec8:	1a9b      	subs	r3, r3, r2
 8001eca:	469b      	mov	fp, r3
 8001ecc:	2300      	movs	r3, #0
 8001ece:	9302      	str	r3, [sp, #8]
 8001ed0:	e61a      	b.n	8001b08 <__aeabi_dmul+0x4c>
 8001ed2:	2d0f      	cmp	r5, #15
 8001ed4:	d000      	beq.n	8001ed8 <__aeabi_dmul+0x41c>
 8001ed6:	e0c9      	b.n	800206c <__aeabi_dmul+0x5b0>
 8001ed8:	2380      	movs	r3, #128	@ 0x80
 8001eda:	4652      	mov	r2, sl
 8001edc:	031b      	lsls	r3, r3, #12
 8001ede:	421a      	tst	r2, r3
 8001ee0:	d002      	beq.n	8001ee8 <__aeabi_dmul+0x42c>
 8001ee2:	421c      	tst	r4, r3
 8001ee4:	d100      	bne.n	8001ee8 <__aeabi_dmul+0x42c>
 8001ee6:	e092      	b.n	800200e <__aeabi_dmul+0x552>
 8001ee8:	2480      	movs	r4, #128	@ 0x80
 8001eea:	4653      	mov	r3, sl
 8001eec:	0324      	lsls	r4, r4, #12
 8001eee:	431c      	orrs	r4, r3
 8001ef0:	0324      	lsls	r4, r4, #12
 8001ef2:	4642      	mov	r2, r8
 8001ef4:	0b24      	lsrs	r4, r4, #12
 8001ef6:	e63e      	b.n	8001b76 <__aeabi_dmul+0xba>
 8001ef8:	469b      	mov	fp, r3
 8001efa:	2303      	movs	r3, #3
 8001efc:	4680      	mov	r8, r0
 8001efe:	250c      	movs	r5, #12
 8001f00:	9302      	str	r3, [sp, #8]
 8001f02:	e601      	b.n	8001b08 <__aeabi_dmul+0x4c>
 8001f04:	2300      	movs	r3, #0
 8001f06:	469a      	mov	sl, r3
 8001f08:	469b      	mov	fp, r3
 8001f0a:	3301      	adds	r3, #1
 8001f0c:	2504      	movs	r5, #4
 8001f0e:	9302      	str	r3, [sp, #8]
 8001f10:	e5fa      	b.n	8001b08 <__aeabi_dmul+0x4c>
 8001f12:	2101      	movs	r1, #1
 8001f14:	430d      	orrs	r5, r1
 8001f16:	2d0a      	cmp	r5, #10
 8001f18:	dd00      	ble.n	8001f1c <__aeabi_dmul+0x460>
 8001f1a:	e64b      	b.n	8001bb4 <__aeabi_dmul+0xf8>
 8001f1c:	4649      	mov	r1, r9
 8001f1e:	9800      	ldr	r0, [sp, #0]
 8001f20:	4041      	eors	r1, r0
 8001f22:	b2c9      	uxtb	r1, r1
 8001f24:	9103      	str	r1, [sp, #12]
 8001f26:	2d02      	cmp	r5, #2
 8001f28:	dc00      	bgt.n	8001f2c <__aeabi_dmul+0x470>
 8001f2a:	e096      	b.n	800205a <__aeabi_dmul+0x59e>
 8001f2c:	2300      	movs	r3, #0
 8001f2e:	2400      	movs	r4, #0
 8001f30:	2001      	movs	r0, #1
 8001f32:	9301      	str	r3, [sp, #4]
 8001f34:	e60c      	b.n	8001b50 <__aeabi_dmul+0x94>
 8001f36:	4649      	mov	r1, r9
 8001f38:	2302      	movs	r3, #2
 8001f3a:	9a00      	ldr	r2, [sp, #0]
 8001f3c:	432b      	orrs	r3, r5
 8001f3e:	4051      	eors	r1, r2
 8001f40:	b2ca      	uxtb	r2, r1
 8001f42:	9203      	str	r2, [sp, #12]
 8001f44:	2b0a      	cmp	r3, #10
 8001f46:	dd00      	ble.n	8001f4a <__aeabi_dmul+0x48e>
 8001f48:	e634      	b.n	8001bb4 <__aeabi_dmul+0xf8>
 8001f4a:	2d00      	cmp	r5, #0
 8001f4c:	d157      	bne.n	8001ffe <__aeabi_dmul+0x542>
 8001f4e:	9b03      	ldr	r3, [sp, #12]
 8001f50:	4699      	mov	r9, r3
 8001f52:	2400      	movs	r4, #0
 8001f54:	2200      	movs	r2, #0
 8001f56:	4b49      	ldr	r3, [pc, #292]	@ (800207c <__aeabi_dmul+0x5c0>)
 8001f58:	e60e      	b.n	8001b78 <__aeabi_dmul+0xbc>
 8001f5a:	4658      	mov	r0, fp
 8001f5c:	2101      	movs	r1, #1
 8001f5e:	1ac9      	subs	r1, r1, r3
 8001f60:	2938      	cmp	r1, #56	@ 0x38
 8001f62:	dd00      	ble.n	8001f66 <__aeabi_dmul+0x4aa>
 8001f64:	e62f      	b.n	8001bc6 <__aeabi_dmul+0x10a>
 8001f66:	291f      	cmp	r1, #31
 8001f68:	dd56      	ble.n	8002018 <__aeabi_dmul+0x55c>
 8001f6a:	221f      	movs	r2, #31
 8001f6c:	4654      	mov	r4, sl
 8001f6e:	4252      	negs	r2, r2
 8001f70:	1ad3      	subs	r3, r2, r3
 8001f72:	40dc      	lsrs	r4, r3
 8001f74:	2920      	cmp	r1, #32
 8001f76:	d007      	beq.n	8001f88 <__aeabi_dmul+0x4cc>
 8001f78:	4b41      	ldr	r3, [pc, #260]	@ (8002080 <__aeabi_dmul+0x5c4>)
 8001f7a:	4642      	mov	r2, r8
 8001f7c:	469c      	mov	ip, r3
 8001f7e:	4653      	mov	r3, sl
 8001f80:	4460      	add	r0, ip
 8001f82:	4083      	lsls	r3, r0
 8001f84:	431a      	orrs	r2, r3
 8001f86:	4690      	mov	r8, r2
 8001f88:	4642      	mov	r2, r8
 8001f8a:	2107      	movs	r1, #7
 8001f8c:	1e53      	subs	r3, r2, #1
 8001f8e:	419a      	sbcs	r2, r3
 8001f90:	000b      	movs	r3, r1
 8001f92:	4322      	orrs	r2, r4
 8001f94:	4013      	ands	r3, r2
 8001f96:	2400      	movs	r4, #0
 8001f98:	4211      	tst	r1, r2
 8001f9a:	d009      	beq.n	8001fb0 <__aeabi_dmul+0x4f4>
 8001f9c:	230f      	movs	r3, #15
 8001f9e:	4013      	ands	r3, r2
 8001fa0:	2b04      	cmp	r3, #4
 8001fa2:	d05d      	beq.n	8002060 <__aeabi_dmul+0x5a4>
 8001fa4:	1d11      	adds	r1, r2, #4
 8001fa6:	4291      	cmp	r1, r2
 8001fa8:	419b      	sbcs	r3, r3
 8001faa:	000a      	movs	r2, r1
 8001fac:	425b      	negs	r3, r3
 8001fae:	075b      	lsls	r3, r3, #29
 8001fb0:	08d2      	lsrs	r2, r2, #3
 8001fb2:	431a      	orrs	r2, r3
 8001fb4:	2300      	movs	r3, #0
 8001fb6:	e5df      	b.n	8001b78 <__aeabi_dmul+0xbc>
 8001fb8:	9b03      	ldr	r3, [sp, #12]
 8001fba:	4699      	mov	r9, r3
 8001fbc:	e5fa      	b.n	8001bb4 <__aeabi_dmul+0xf8>
 8001fbe:	9801      	ldr	r0, [sp, #4]
 8001fc0:	f000 fde6 	bl	8002b90 <__clzsi2>
 8001fc4:	0002      	movs	r2, r0
 8001fc6:	0003      	movs	r3, r0
 8001fc8:	3215      	adds	r2, #21
 8001fca:	3320      	adds	r3, #32
 8001fcc:	2a1c      	cmp	r2, #28
 8001fce:	dc00      	bgt.n	8001fd2 <__aeabi_dmul+0x516>
 8001fd0:	e738      	b.n	8001e44 <__aeabi_dmul+0x388>
 8001fd2:	9a01      	ldr	r2, [sp, #4]
 8001fd4:	3808      	subs	r0, #8
 8001fd6:	4082      	lsls	r2, r0
 8001fd8:	e73f      	b.n	8001e5a <__aeabi_dmul+0x39e>
 8001fda:	f000 fdd9 	bl	8002b90 <__clzsi2>
 8001fde:	2315      	movs	r3, #21
 8001fe0:	469c      	mov	ip, r3
 8001fe2:	4484      	add	ip, r0
 8001fe4:	0002      	movs	r2, r0
 8001fe6:	4663      	mov	r3, ip
 8001fe8:	3220      	adds	r2, #32
 8001fea:	2b1c      	cmp	r3, #28
 8001fec:	dc00      	bgt.n	8001ff0 <__aeabi_dmul+0x534>
 8001fee:	e758      	b.n	8001ea2 <__aeabi_dmul+0x3e6>
 8001ff0:	2300      	movs	r3, #0
 8001ff2:	4698      	mov	r8, r3
 8001ff4:	0023      	movs	r3, r4
 8001ff6:	3808      	subs	r0, #8
 8001ff8:	4083      	lsls	r3, r0
 8001ffa:	469a      	mov	sl, r3
 8001ffc:	e762      	b.n	8001ec4 <__aeabi_dmul+0x408>
 8001ffe:	001d      	movs	r5, r3
 8002000:	2300      	movs	r3, #0
 8002002:	2400      	movs	r4, #0
 8002004:	2002      	movs	r0, #2
 8002006:	9301      	str	r3, [sp, #4]
 8002008:	e5a2      	b.n	8001b50 <__aeabi_dmul+0x94>
 800200a:	9002      	str	r0, [sp, #8]
 800200c:	e632      	b.n	8001c74 <__aeabi_dmul+0x1b8>
 800200e:	431c      	orrs	r4, r3
 8002010:	9b00      	ldr	r3, [sp, #0]
 8002012:	9a01      	ldr	r2, [sp, #4]
 8002014:	4699      	mov	r9, r3
 8002016:	e5ae      	b.n	8001b76 <__aeabi_dmul+0xba>
 8002018:	4b1a      	ldr	r3, [pc, #104]	@ (8002084 <__aeabi_dmul+0x5c8>)
 800201a:	4652      	mov	r2, sl
 800201c:	18c3      	adds	r3, r0, r3
 800201e:	4640      	mov	r0, r8
 8002020:	409a      	lsls	r2, r3
 8002022:	40c8      	lsrs	r0, r1
 8002024:	4302      	orrs	r2, r0
 8002026:	4640      	mov	r0, r8
 8002028:	4098      	lsls	r0, r3
 800202a:	0003      	movs	r3, r0
 800202c:	1e58      	subs	r0, r3, #1
 800202e:	4183      	sbcs	r3, r0
 8002030:	4654      	mov	r4, sl
 8002032:	431a      	orrs	r2, r3
 8002034:	40cc      	lsrs	r4, r1
 8002036:	0753      	lsls	r3, r2, #29
 8002038:	d009      	beq.n	800204e <__aeabi_dmul+0x592>
 800203a:	230f      	movs	r3, #15
 800203c:	4013      	ands	r3, r2
 800203e:	2b04      	cmp	r3, #4
 8002040:	d005      	beq.n	800204e <__aeabi_dmul+0x592>
 8002042:	1d13      	adds	r3, r2, #4
 8002044:	4293      	cmp	r3, r2
 8002046:	4192      	sbcs	r2, r2
 8002048:	4252      	negs	r2, r2
 800204a:	18a4      	adds	r4, r4, r2
 800204c:	001a      	movs	r2, r3
 800204e:	0223      	lsls	r3, r4, #8
 8002050:	d508      	bpl.n	8002064 <__aeabi_dmul+0x5a8>
 8002052:	2301      	movs	r3, #1
 8002054:	2400      	movs	r4, #0
 8002056:	2200      	movs	r2, #0
 8002058:	e58e      	b.n	8001b78 <__aeabi_dmul+0xbc>
 800205a:	4689      	mov	r9, r1
 800205c:	2400      	movs	r4, #0
 800205e:	e58b      	b.n	8001b78 <__aeabi_dmul+0xbc>
 8002060:	2300      	movs	r3, #0
 8002062:	e7a5      	b.n	8001fb0 <__aeabi_dmul+0x4f4>
 8002064:	0763      	lsls	r3, r4, #29
 8002066:	0264      	lsls	r4, r4, #9
 8002068:	0b24      	lsrs	r4, r4, #12
 800206a:	e7a1      	b.n	8001fb0 <__aeabi_dmul+0x4f4>
 800206c:	9b00      	ldr	r3, [sp, #0]
 800206e:	46a2      	mov	sl, r4
 8002070:	4699      	mov	r9, r3
 8002072:	9b01      	ldr	r3, [sp, #4]
 8002074:	4698      	mov	r8, r3
 8002076:	e737      	b.n	8001ee8 <__aeabi_dmul+0x42c>
 8002078:	fffffc0d 	.word	0xfffffc0d
 800207c:	000007ff 	.word	0x000007ff
 8002080:	0000043e 	.word	0x0000043e
 8002084:	0000041e 	.word	0x0000041e

08002088 <__aeabi_dsub>:
 8002088:	b5f0      	push	{r4, r5, r6, r7, lr}
 800208a:	4657      	mov	r7, sl
 800208c:	464e      	mov	r6, r9
 800208e:	4645      	mov	r5, r8
 8002090:	46de      	mov	lr, fp
 8002092:	b5e0      	push	{r5, r6, r7, lr}
 8002094:	b083      	sub	sp, #12
 8002096:	9000      	str	r0, [sp, #0]
 8002098:	9101      	str	r1, [sp, #4]
 800209a:	030c      	lsls	r4, r1, #12
 800209c:	004d      	lsls	r5, r1, #1
 800209e:	0fce      	lsrs	r6, r1, #31
 80020a0:	0a61      	lsrs	r1, r4, #9
 80020a2:	9c00      	ldr	r4, [sp, #0]
 80020a4:	005f      	lsls	r7, r3, #1
 80020a6:	0f64      	lsrs	r4, r4, #29
 80020a8:	430c      	orrs	r4, r1
 80020aa:	9900      	ldr	r1, [sp, #0]
 80020ac:	9200      	str	r2, [sp, #0]
 80020ae:	9301      	str	r3, [sp, #4]
 80020b0:	00c8      	lsls	r0, r1, #3
 80020b2:	0319      	lsls	r1, r3, #12
 80020b4:	0d7b      	lsrs	r3, r7, #21
 80020b6:	4699      	mov	r9, r3
 80020b8:	9b01      	ldr	r3, [sp, #4]
 80020ba:	4fcc      	ldr	r7, [pc, #816]	@ (80023ec <__aeabi_dsub+0x364>)
 80020bc:	0fdb      	lsrs	r3, r3, #31
 80020be:	469c      	mov	ip, r3
 80020c0:	0a4b      	lsrs	r3, r1, #9
 80020c2:	9900      	ldr	r1, [sp, #0]
 80020c4:	4680      	mov	r8, r0
 80020c6:	0f49      	lsrs	r1, r1, #29
 80020c8:	4319      	orrs	r1, r3
 80020ca:	9b00      	ldr	r3, [sp, #0]
 80020cc:	468b      	mov	fp, r1
 80020ce:	00da      	lsls	r2, r3, #3
 80020d0:	4692      	mov	sl, r2
 80020d2:	0d6d      	lsrs	r5, r5, #21
 80020d4:	45b9      	cmp	r9, r7
 80020d6:	d100      	bne.n	80020da <__aeabi_dsub+0x52>
 80020d8:	e0bf      	b.n	800225a <__aeabi_dsub+0x1d2>
 80020da:	2301      	movs	r3, #1
 80020dc:	4661      	mov	r1, ip
 80020de:	4059      	eors	r1, r3
 80020e0:	464b      	mov	r3, r9
 80020e2:	468c      	mov	ip, r1
 80020e4:	1aeb      	subs	r3, r5, r3
 80020e6:	428e      	cmp	r6, r1
 80020e8:	d075      	beq.n	80021d6 <__aeabi_dsub+0x14e>
 80020ea:	2b00      	cmp	r3, #0
 80020ec:	dc00      	bgt.n	80020f0 <__aeabi_dsub+0x68>
 80020ee:	e2a3      	b.n	8002638 <__aeabi_dsub+0x5b0>
 80020f0:	4649      	mov	r1, r9
 80020f2:	2900      	cmp	r1, #0
 80020f4:	d100      	bne.n	80020f8 <__aeabi_dsub+0x70>
 80020f6:	e0ce      	b.n	8002296 <__aeabi_dsub+0x20e>
 80020f8:	42bd      	cmp	r5, r7
 80020fa:	d100      	bne.n	80020fe <__aeabi_dsub+0x76>
 80020fc:	e200      	b.n	8002500 <__aeabi_dsub+0x478>
 80020fe:	2701      	movs	r7, #1
 8002100:	2b38      	cmp	r3, #56	@ 0x38
 8002102:	dc19      	bgt.n	8002138 <__aeabi_dsub+0xb0>
 8002104:	2780      	movs	r7, #128	@ 0x80
 8002106:	4659      	mov	r1, fp
 8002108:	043f      	lsls	r7, r7, #16
 800210a:	4339      	orrs	r1, r7
 800210c:	468b      	mov	fp, r1
 800210e:	2b1f      	cmp	r3, #31
 8002110:	dd00      	ble.n	8002114 <__aeabi_dsub+0x8c>
 8002112:	e1fa      	b.n	800250a <__aeabi_dsub+0x482>
 8002114:	2720      	movs	r7, #32
 8002116:	1af9      	subs	r1, r7, r3
 8002118:	468c      	mov	ip, r1
 800211a:	4659      	mov	r1, fp
 800211c:	4667      	mov	r7, ip
 800211e:	40b9      	lsls	r1, r7
 8002120:	000f      	movs	r7, r1
 8002122:	0011      	movs	r1, r2
 8002124:	40d9      	lsrs	r1, r3
 8002126:	430f      	orrs	r7, r1
 8002128:	4661      	mov	r1, ip
 800212a:	408a      	lsls	r2, r1
 800212c:	1e51      	subs	r1, r2, #1
 800212e:	418a      	sbcs	r2, r1
 8002130:	4659      	mov	r1, fp
 8002132:	40d9      	lsrs	r1, r3
 8002134:	4317      	orrs	r7, r2
 8002136:	1a64      	subs	r4, r4, r1
 8002138:	1bc7      	subs	r7, r0, r7
 800213a:	42b8      	cmp	r0, r7
 800213c:	4180      	sbcs	r0, r0
 800213e:	4240      	negs	r0, r0
 8002140:	1a24      	subs	r4, r4, r0
 8002142:	0223      	lsls	r3, r4, #8
 8002144:	d400      	bmi.n	8002148 <__aeabi_dsub+0xc0>
 8002146:	e140      	b.n	80023ca <__aeabi_dsub+0x342>
 8002148:	0264      	lsls	r4, r4, #9
 800214a:	0a64      	lsrs	r4, r4, #9
 800214c:	2c00      	cmp	r4, #0
 800214e:	d100      	bne.n	8002152 <__aeabi_dsub+0xca>
 8002150:	e154      	b.n	80023fc <__aeabi_dsub+0x374>
 8002152:	0020      	movs	r0, r4
 8002154:	f000 fd1c 	bl	8002b90 <__clzsi2>
 8002158:	0003      	movs	r3, r0
 800215a:	3b08      	subs	r3, #8
 800215c:	2120      	movs	r1, #32
 800215e:	0038      	movs	r0, r7
 8002160:	1aca      	subs	r2, r1, r3
 8002162:	40d0      	lsrs	r0, r2
 8002164:	409c      	lsls	r4, r3
 8002166:	0002      	movs	r2, r0
 8002168:	409f      	lsls	r7, r3
 800216a:	4322      	orrs	r2, r4
 800216c:	429d      	cmp	r5, r3
 800216e:	dd00      	ble.n	8002172 <__aeabi_dsub+0xea>
 8002170:	e1a6      	b.n	80024c0 <__aeabi_dsub+0x438>
 8002172:	1b58      	subs	r0, r3, r5
 8002174:	3001      	adds	r0, #1
 8002176:	1a09      	subs	r1, r1, r0
 8002178:	003c      	movs	r4, r7
 800217a:	408f      	lsls	r7, r1
 800217c:	40c4      	lsrs	r4, r0
 800217e:	1e7b      	subs	r3, r7, #1
 8002180:	419f      	sbcs	r7, r3
 8002182:	0013      	movs	r3, r2
 8002184:	408b      	lsls	r3, r1
 8002186:	4327      	orrs	r7, r4
 8002188:	431f      	orrs	r7, r3
 800218a:	40c2      	lsrs	r2, r0
 800218c:	003b      	movs	r3, r7
 800218e:	0014      	movs	r4, r2
 8002190:	2500      	movs	r5, #0
 8002192:	4313      	orrs	r3, r2
 8002194:	d100      	bne.n	8002198 <__aeabi_dsub+0x110>
 8002196:	e1f7      	b.n	8002588 <__aeabi_dsub+0x500>
 8002198:	077b      	lsls	r3, r7, #29
 800219a:	d100      	bne.n	800219e <__aeabi_dsub+0x116>
 800219c:	e377      	b.n	800288e <__aeabi_dsub+0x806>
 800219e:	230f      	movs	r3, #15
 80021a0:	0038      	movs	r0, r7
 80021a2:	403b      	ands	r3, r7
 80021a4:	2b04      	cmp	r3, #4
 80021a6:	d004      	beq.n	80021b2 <__aeabi_dsub+0x12a>
 80021a8:	1d38      	adds	r0, r7, #4
 80021aa:	42b8      	cmp	r0, r7
 80021ac:	41bf      	sbcs	r7, r7
 80021ae:	427f      	negs	r7, r7
 80021b0:	19e4      	adds	r4, r4, r7
 80021b2:	0223      	lsls	r3, r4, #8
 80021b4:	d400      	bmi.n	80021b8 <__aeabi_dsub+0x130>
 80021b6:	e368      	b.n	800288a <__aeabi_dsub+0x802>
 80021b8:	4b8c      	ldr	r3, [pc, #560]	@ (80023ec <__aeabi_dsub+0x364>)
 80021ba:	3501      	adds	r5, #1
 80021bc:	429d      	cmp	r5, r3
 80021be:	d100      	bne.n	80021c2 <__aeabi_dsub+0x13a>
 80021c0:	e0f4      	b.n	80023ac <__aeabi_dsub+0x324>
 80021c2:	4b8b      	ldr	r3, [pc, #556]	@ (80023f0 <__aeabi_dsub+0x368>)
 80021c4:	056d      	lsls	r5, r5, #21
 80021c6:	401c      	ands	r4, r3
 80021c8:	0d6d      	lsrs	r5, r5, #21
 80021ca:	0767      	lsls	r7, r4, #29
 80021cc:	08c0      	lsrs	r0, r0, #3
 80021ce:	0264      	lsls	r4, r4, #9
 80021d0:	4307      	orrs	r7, r0
 80021d2:	0b24      	lsrs	r4, r4, #12
 80021d4:	e0ec      	b.n	80023b0 <__aeabi_dsub+0x328>
 80021d6:	2b00      	cmp	r3, #0
 80021d8:	dc00      	bgt.n	80021dc <__aeabi_dsub+0x154>
 80021da:	e329      	b.n	8002830 <__aeabi_dsub+0x7a8>
 80021dc:	4649      	mov	r1, r9
 80021de:	2900      	cmp	r1, #0
 80021e0:	d000      	beq.n	80021e4 <__aeabi_dsub+0x15c>
 80021e2:	e0d6      	b.n	8002392 <__aeabi_dsub+0x30a>
 80021e4:	4659      	mov	r1, fp
 80021e6:	4311      	orrs	r1, r2
 80021e8:	d100      	bne.n	80021ec <__aeabi_dsub+0x164>
 80021ea:	e12e      	b.n	800244a <__aeabi_dsub+0x3c2>
 80021ec:	1e59      	subs	r1, r3, #1
 80021ee:	2b01      	cmp	r3, #1
 80021f0:	d100      	bne.n	80021f4 <__aeabi_dsub+0x16c>
 80021f2:	e1e6      	b.n	80025c2 <__aeabi_dsub+0x53a>
 80021f4:	42bb      	cmp	r3, r7
 80021f6:	d100      	bne.n	80021fa <__aeabi_dsub+0x172>
 80021f8:	e182      	b.n	8002500 <__aeabi_dsub+0x478>
 80021fa:	2701      	movs	r7, #1
 80021fc:	000b      	movs	r3, r1
 80021fe:	2938      	cmp	r1, #56	@ 0x38
 8002200:	dc14      	bgt.n	800222c <__aeabi_dsub+0x1a4>
 8002202:	2b1f      	cmp	r3, #31
 8002204:	dd00      	ble.n	8002208 <__aeabi_dsub+0x180>
 8002206:	e23c      	b.n	8002682 <__aeabi_dsub+0x5fa>
 8002208:	2720      	movs	r7, #32
 800220a:	1af9      	subs	r1, r7, r3
 800220c:	468c      	mov	ip, r1
 800220e:	4659      	mov	r1, fp
 8002210:	4667      	mov	r7, ip
 8002212:	40b9      	lsls	r1, r7
 8002214:	000f      	movs	r7, r1
 8002216:	0011      	movs	r1, r2
 8002218:	40d9      	lsrs	r1, r3
 800221a:	430f      	orrs	r7, r1
 800221c:	4661      	mov	r1, ip
 800221e:	408a      	lsls	r2, r1
 8002220:	1e51      	subs	r1, r2, #1
 8002222:	418a      	sbcs	r2, r1
 8002224:	4659      	mov	r1, fp
 8002226:	40d9      	lsrs	r1, r3
 8002228:	4317      	orrs	r7, r2
 800222a:	1864      	adds	r4, r4, r1
 800222c:	183f      	adds	r7, r7, r0
 800222e:	4287      	cmp	r7, r0
 8002230:	4180      	sbcs	r0, r0
 8002232:	4240      	negs	r0, r0
 8002234:	1824      	adds	r4, r4, r0
 8002236:	0223      	lsls	r3, r4, #8
 8002238:	d400      	bmi.n	800223c <__aeabi_dsub+0x1b4>
 800223a:	e0c6      	b.n	80023ca <__aeabi_dsub+0x342>
 800223c:	4b6b      	ldr	r3, [pc, #428]	@ (80023ec <__aeabi_dsub+0x364>)
 800223e:	3501      	adds	r5, #1
 8002240:	429d      	cmp	r5, r3
 8002242:	d100      	bne.n	8002246 <__aeabi_dsub+0x1be>
 8002244:	e0b2      	b.n	80023ac <__aeabi_dsub+0x324>
 8002246:	2101      	movs	r1, #1
 8002248:	4b69      	ldr	r3, [pc, #420]	@ (80023f0 <__aeabi_dsub+0x368>)
 800224a:	087a      	lsrs	r2, r7, #1
 800224c:	401c      	ands	r4, r3
 800224e:	4039      	ands	r1, r7
 8002250:	430a      	orrs	r2, r1
 8002252:	07e7      	lsls	r7, r4, #31
 8002254:	4317      	orrs	r7, r2
 8002256:	0864      	lsrs	r4, r4, #1
 8002258:	e79e      	b.n	8002198 <__aeabi_dsub+0x110>
 800225a:	4b66      	ldr	r3, [pc, #408]	@ (80023f4 <__aeabi_dsub+0x36c>)
 800225c:	4311      	orrs	r1, r2
 800225e:	468a      	mov	sl, r1
 8002260:	18eb      	adds	r3, r5, r3
 8002262:	2900      	cmp	r1, #0
 8002264:	d028      	beq.n	80022b8 <__aeabi_dsub+0x230>
 8002266:	4566      	cmp	r6, ip
 8002268:	d02c      	beq.n	80022c4 <__aeabi_dsub+0x23c>
 800226a:	2b00      	cmp	r3, #0
 800226c:	d05b      	beq.n	8002326 <__aeabi_dsub+0x29e>
 800226e:	2d00      	cmp	r5, #0
 8002270:	d100      	bne.n	8002274 <__aeabi_dsub+0x1ec>
 8002272:	e12c      	b.n	80024ce <__aeabi_dsub+0x446>
 8002274:	465b      	mov	r3, fp
 8002276:	4666      	mov	r6, ip
 8002278:	075f      	lsls	r7, r3, #29
 800227a:	08d2      	lsrs	r2, r2, #3
 800227c:	4317      	orrs	r7, r2
 800227e:	08dd      	lsrs	r5, r3, #3
 8002280:	003b      	movs	r3, r7
 8002282:	432b      	orrs	r3, r5
 8002284:	d100      	bne.n	8002288 <__aeabi_dsub+0x200>
 8002286:	e0e2      	b.n	800244e <__aeabi_dsub+0x3c6>
 8002288:	2480      	movs	r4, #128	@ 0x80
 800228a:	0324      	lsls	r4, r4, #12
 800228c:	432c      	orrs	r4, r5
 800228e:	0324      	lsls	r4, r4, #12
 8002290:	4d56      	ldr	r5, [pc, #344]	@ (80023ec <__aeabi_dsub+0x364>)
 8002292:	0b24      	lsrs	r4, r4, #12
 8002294:	e08c      	b.n	80023b0 <__aeabi_dsub+0x328>
 8002296:	4659      	mov	r1, fp
 8002298:	4311      	orrs	r1, r2
 800229a:	d100      	bne.n	800229e <__aeabi_dsub+0x216>
 800229c:	e0d5      	b.n	800244a <__aeabi_dsub+0x3c2>
 800229e:	1e59      	subs	r1, r3, #1
 80022a0:	2b01      	cmp	r3, #1
 80022a2:	d100      	bne.n	80022a6 <__aeabi_dsub+0x21e>
 80022a4:	e1b9      	b.n	800261a <__aeabi_dsub+0x592>
 80022a6:	42bb      	cmp	r3, r7
 80022a8:	d100      	bne.n	80022ac <__aeabi_dsub+0x224>
 80022aa:	e1b1      	b.n	8002610 <__aeabi_dsub+0x588>
 80022ac:	2701      	movs	r7, #1
 80022ae:	000b      	movs	r3, r1
 80022b0:	2938      	cmp	r1, #56	@ 0x38
 80022b2:	dd00      	ble.n	80022b6 <__aeabi_dsub+0x22e>
 80022b4:	e740      	b.n	8002138 <__aeabi_dsub+0xb0>
 80022b6:	e72a      	b.n	800210e <__aeabi_dsub+0x86>
 80022b8:	4661      	mov	r1, ip
 80022ba:	2701      	movs	r7, #1
 80022bc:	4079      	eors	r1, r7
 80022be:	468c      	mov	ip, r1
 80022c0:	4566      	cmp	r6, ip
 80022c2:	d1d2      	bne.n	800226a <__aeabi_dsub+0x1e2>
 80022c4:	2b00      	cmp	r3, #0
 80022c6:	d100      	bne.n	80022ca <__aeabi_dsub+0x242>
 80022c8:	e0c5      	b.n	8002456 <__aeabi_dsub+0x3ce>
 80022ca:	2d00      	cmp	r5, #0
 80022cc:	d000      	beq.n	80022d0 <__aeabi_dsub+0x248>
 80022ce:	e155      	b.n	800257c <__aeabi_dsub+0x4f4>
 80022d0:	464b      	mov	r3, r9
 80022d2:	0025      	movs	r5, r4
 80022d4:	4305      	orrs	r5, r0
 80022d6:	d100      	bne.n	80022da <__aeabi_dsub+0x252>
 80022d8:	e212      	b.n	8002700 <__aeabi_dsub+0x678>
 80022da:	1e59      	subs	r1, r3, #1
 80022dc:	468c      	mov	ip, r1
 80022de:	2b01      	cmp	r3, #1
 80022e0:	d100      	bne.n	80022e4 <__aeabi_dsub+0x25c>
 80022e2:	e249      	b.n	8002778 <__aeabi_dsub+0x6f0>
 80022e4:	4d41      	ldr	r5, [pc, #260]	@ (80023ec <__aeabi_dsub+0x364>)
 80022e6:	42ab      	cmp	r3, r5
 80022e8:	d100      	bne.n	80022ec <__aeabi_dsub+0x264>
 80022ea:	e28f      	b.n	800280c <__aeabi_dsub+0x784>
 80022ec:	2701      	movs	r7, #1
 80022ee:	2938      	cmp	r1, #56	@ 0x38
 80022f0:	dc11      	bgt.n	8002316 <__aeabi_dsub+0x28e>
 80022f2:	4663      	mov	r3, ip
 80022f4:	2b1f      	cmp	r3, #31
 80022f6:	dd00      	ble.n	80022fa <__aeabi_dsub+0x272>
 80022f8:	e25b      	b.n	80027b2 <__aeabi_dsub+0x72a>
 80022fa:	4661      	mov	r1, ip
 80022fc:	2320      	movs	r3, #32
 80022fe:	0027      	movs	r7, r4
 8002300:	1a5b      	subs	r3, r3, r1
 8002302:	0005      	movs	r5, r0
 8002304:	4098      	lsls	r0, r3
 8002306:	409f      	lsls	r7, r3
 8002308:	40cd      	lsrs	r5, r1
 800230a:	1e43      	subs	r3, r0, #1
 800230c:	4198      	sbcs	r0, r3
 800230e:	40cc      	lsrs	r4, r1
 8002310:	432f      	orrs	r7, r5
 8002312:	4307      	orrs	r7, r0
 8002314:	44a3      	add	fp, r4
 8002316:	18bf      	adds	r7, r7, r2
 8002318:	4297      	cmp	r7, r2
 800231a:	4192      	sbcs	r2, r2
 800231c:	4252      	negs	r2, r2
 800231e:	445a      	add	r2, fp
 8002320:	0014      	movs	r4, r2
 8002322:	464d      	mov	r5, r9
 8002324:	e787      	b.n	8002236 <__aeabi_dsub+0x1ae>
 8002326:	4f34      	ldr	r7, [pc, #208]	@ (80023f8 <__aeabi_dsub+0x370>)
 8002328:	1c6b      	adds	r3, r5, #1
 800232a:	423b      	tst	r3, r7
 800232c:	d000      	beq.n	8002330 <__aeabi_dsub+0x2a8>
 800232e:	e0b6      	b.n	800249e <__aeabi_dsub+0x416>
 8002330:	4659      	mov	r1, fp
 8002332:	0023      	movs	r3, r4
 8002334:	4311      	orrs	r1, r2
 8002336:	000f      	movs	r7, r1
 8002338:	4303      	orrs	r3, r0
 800233a:	2d00      	cmp	r5, #0
 800233c:	d000      	beq.n	8002340 <__aeabi_dsub+0x2b8>
 800233e:	e126      	b.n	800258e <__aeabi_dsub+0x506>
 8002340:	2b00      	cmp	r3, #0
 8002342:	d100      	bne.n	8002346 <__aeabi_dsub+0x2be>
 8002344:	e1c0      	b.n	80026c8 <__aeabi_dsub+0x640>
 8002346:	2900      	cmp	r1, #0
 8002348:	d100      	bne.n	800234c <__aeabi_dsub+0x2c4>
 800234a:	e0a1      	b.n	8002490 <__aeabi_dsub+0x408>
 800234c:	1a83      	subs	r3, r0, r2
 800234e:	4698      	mov	r8, r3
 8002350:	465b      	mov	r3, fp
 8002352:	4540      	cmp	r0, r8
 8002354:	41ad      	sbcs	r5, r5
 8002356:	1ae3      	subs	r3, r4, r3
 8002358:	426d      	negs	r5, r5
 800235a:	1b5b      	subs	r3, r3, r5
 800235c:	2580      	movs	r5, #128	@ 0x80
 800235e:	042d      	lsls	r5, r5, #16
 8002360:	422b      	tst	r3, r5
 8002362:	d100      	bne.n	8002366 <__aeabi_dsub+0x2de>
 8002364:	e14b      	b.n	80025fe <__aeabi_dsub+0x576>
 8002366:	465b      	mov	r3, fp
 8002368:	1a10      	subs	r0, r2, r0
 800236a:	4282      	cmp	r2, r0
 800236c:	4192      	sbcs	r2, r2
 800236e:	1b1c      	subs	r4, r3, r4
 8002370:	0007      	movs	r7, r0
 8002372:	2601      	movs	r6, #1
 8002374:	4663      	mov	r3, ip
 8002376:	4252      	negs	r2, r2
 8002378:	1aa4      	subs	r4, r4, r2
 800237a:	4327      	orrs	r7, r4
 800237c:	401e      	ands	r6, r3
 800237e:	2f00      	cmp	r7, #0
 8002380:	d100      	bne.n	8002384 <__aeabi_dsub+0x2fc>
 8002382:	e142      	b.n	800260a <__aeabi_dsub+0x582>
 8002384:	422c      	tst	r4, r5
 8002386:	d100      	bne.n	800238a <__aeabi_dsub+0x302>
 8002388:	e26d      	b.n	8002866 <__aeabi_dsub+0x7de>
 800238a:	4b19      	ldr	r3, [pc, #100]	@ (80023f0 <__aeabi_dsub+0x368>)
 800238c:	2501      	movs	r5, #1
 800238e:	401c      	ands	r4, r3
 8002390:	e71b      	b.n	80021ca <__aeabi_dsub+0x142>
 8002392:	42bd      	cmp	r5, r7
 8002394:	d100      	bne.n	8002398 <__aeabi_dsub+0x310>
 8002396:	e13b      	b.n	8002610 <__aeabi_dsub+0x588>
 8002398:	2701      	movs	r7, #1
 800239a:	2b38      	cmp	r3, #56	@ 0x38
 800239c:	dd00      	ble.n	80023a0 <__aeabi_dsub+0x318>
 800239e:	e745      	b.n	800222c <__aeabi_dsub+0x1a4>
 80023a0:	2780      	movs	r7, #128	@ 0x80
 80023a2:	4659      	mov	r1, fp
 80023a4:	043f      	lsls	r7, r7, #16
 80023a6:	4339      	orrs	r1, r7
 80023a8:	468b      	mov	fp, r1
 80023aa:	e72a      	b.n	8002202 <__aeabi_dsub+0x17a>
 80023ac:	2400      	movs	r4, #0
 80023ae:	2700      	movs	r7, #0
 80023b0:	052d      	lsls	r5, r5, #20
 80023b2:	4325      	orrs	r5, r4
 80023b4:	07f6      	lsls	r6, r6, #31
 80023b6:	4335      	orrs	r5, r6
 80023b8:	0038      	movs	r0, r7
 80023ba:	0029      	movs	r1, r5
 80023bc:	b003      	add	sp, #12
 80023be:	bcf0      	pop	{r4, r5, r6, r7}
 80023c0:	46bb      	mov	fp, r7
 80023c2:	46b2      	mov	sl, r6
 80023c4:	46a9      	mov	r9, r5
 80023c6:	46a0      	mov	r8, r4
 80023c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80023ca:	077b      	lsls	r3, r7, #29
 80023cc:	d004      	beq.n	80023d8 <__aeabi_dsub+0x350>
 80023ce:	230f      	movs	r3, #15
 80023d0:	403b      	ands	r3, r7
 80023d2:	2b04      	cmp	r3, #4
 80023d4:	d000      	beq.n	80023d8 <__aeabi_dsub+0x350>
 80023d6:	e6e7      	b.n	80021a8 <__aeabi_dsub+0x120>
 80023d8:	002b      	movs	r3, r5
 80023da:	08f8      	lsrs	r0, r7, #3
 80023dc:	4a03      	ldr	r2, [pc, #12]	@ (80023ec <__aeabi_dsub+0x364>)
 80023de:	0767      	lsls	r7, r4, #29
 80023e0:	4307      	orrs	r7, r0
 80023e2:	08e5      	lsrs	r5, r4, #3
 80023e4:	4293      	cmp	r3, r2
 80023e6:	d100      	bne.n	80023ea <__aeabi_dsub+0x362>
 80023e8:	e74a      	b.n	8002280 <__aeabi_dsub+0x1f8>
 80023ea:	e0a5      	b.n	8002538 <__aeabi_dsub+0x4b0>
 80023ec:	000007ff 	.word	0x000007ff
 80023f0:	ff7fffff 	.word	0xff7fffff
 80023f4:	fffff801 	.word	0xfffff801
 80023f8:	000007fe 	.word	0x000007fe
 80023fc:	0038      	movs	r0, r7
 80023fe:	f000 fbc7 	bl	8002b90 <__clzsi2>
 8002402:	0003      	movs	r3, r0
 8002404:	3318      	adds	r3, #24
 8002406:	2b1f      	cmp	r3, #31
 8002408:	dc00      	bgt.n	800240c <__aeabi_dsub+0x384>
 800240a:	e6a7      	b.n	800215c <__aeabi_dsub+0xd4>
 800240c:	003a      	movs	r2, r7
 800240e:	3808      	subs	r0, #8
 8002410:	4082      	lsls	r2, r0
 8002412:	429d      	cmp	r5, r3
 8002414:	dd00      	ble.n	8002418 <__aeabi_dsub+0x390>
 8002416:	e08a      	b.n	800252e <__aeabi_dsub+0x4a6>
 8002418:	1b5b      	subs	r3, r3, r5
 800241a:	1c58      	adds	r0, r3, #1
 800241c:	281f      	cmp	r0, #31
 800241e:	dc00      	bgt.n	8002422 <__aeabi_dsub+0x39a>
 8002420:	e1d8      	b.n	80027d4 <__aeabi_dsub+0x74c>
 8002422:	0017      	movs	r7, r2
 8002424:	3b1f      	subs	r3, #31
 8002426:	40df      	lsrs	r7, r3
 8002428:	2820      	cmp	r0, #32
 800242a:	d005      	beq.n	8002438 <__aeabi_dsub+0x3b0>
 800242c:	2340      	movs	r3, #64	@ 0x40
 800242e:	1a1b      	subs	r3, r3, r0
 8002430:	409a      	lsls	r2, r3
 8002432:	1e53      	subs	r3, r2, #1
 8002434:	419a      	sbcs	r2, r3
 8002436:	4317      	orrs	r7, r2
 8002438:	2500      	movs	r5, #0
 800243a:	2f00      	cmp	r7, #0
 800243c:	d100      	bne.n	8002440 <__aeabi_dsub+0x3b8>
 800243e:	e0e5      	b.n	800260c <__aeabi_dsub+0x584>
 8002440:	077b      	lsls	r3, r7, #29
 8002442:	d000      	beq.n	8002446 <__aeabi_dsub+0x3be>
 8002444:	e6ab      	b.n	800219e <__aeabi_dsub+0x116>
 8002446:	002c      	movs	r4, r5
 8002448:	e7c6      	b.n	80023d8 <__aeabi_dsub+0x350>
 800244a:	08c0      	lsrs	r0, r0, #3
 800244c:	e7c6      	b.n	80023dc <__aeabi_dsub+0x354>
 800244e:	2700      	movs	r7, #0
 8002450:	2400      	movs	r4, #0
 8002452:	4dd1      	ldr	r5, [pc, #836]	@ (8002798 <__aeabi_dsub+0x710>)
 8002454:	e7ac      	b.n	80023b0 <__aeabi_dsub+0x328>
 8002456:	4fd1      	ldr	r7, [pc, #836]	@ (800279c <__aeabi_dsub+0x714>)
 8002458:	1c6b      	adds	r3, r5, #1
 800245a:	423b      	tst	r3, r7
 800245c:	d171      	bne.n	8002542 <__aeabi_dsub+0x4ba>
 800245e:	0023      	movs	r3, r4
 8002460:	4303      	orrs	r3, r0
 8002462:	2d00      	cmp	r5, #0
 8002464:	d000      	beq.n	8002468 <__aeabi_dsub+0x3e0>
 8002466:	e14e      	b.n	8002706 <__aeabi_dsub+0x67e>
 8002468:	4657      	mov	r7, sl
 800246a:	2b00      	cmp	r3, #0
 800246c:	d100      	bne.n	8002470 <__aeabi_dsub+0x3e8>
 800246e:	e1b5      	b.n	80027dc <__aeabi_dsub+0x754>
 8002470:	2f00      	cmp	r7, #0
 8002472:	d00d      	beq.n	8002490 <__aeabi_dsub+0x408>
 8002474:	1883      	adds	r3, r0, r2
 8002476:	4283      	cmp	r3, r0
 8002478:	4180      	sbcs	r0, r0
 800247a:	445c      	add	r4, fp
 800247c:	4240      	negs	r0, r0
 800247e:	1824      	adds	r4, r4, r0
 8002480:	0222      	lsls	r2, r4, #8
 8002482:	d500      	bpl.n	8002486 <__aeabi_dsub+0x3fe>
 8002484:	e1c8      	b.n	8002818 <__aeabi_dsub+0x790>
 8002486:	001f      	movs	r7, r3
 8002488:	4698      	mov	r8, r3
 800248a:	4327      	orrs	r7, r4
 800248c:	d100      	bne.n	8002490 <__aeabi_dsub+0x408>
 800248e:	e0bc      	b.n	800260a <__aeabi_dsub+0x582>
 8002490:	4643      	mov	r3, r8
 8002492:	0767      	lsls	r7, r4, #29
 8002494:	08db      	lsrs	r3, r3, #3
 8002496:	431f      	orrs	r7, r3
 8002498:	08e5      	lsrs	r5, r4, #3
 800249a:	2300      	movs	r3, #0
 800249c:	e04c      	b.n	8002538 <__aeabi_dsub+0x4b0>
 800249e:	1a83      	subs	r3, r0, r2
 80024a0:	4698      	mov	r8, r3
 80024a2:	465b      	mov	r3, fp
 80024a4:	4540      	cmp	r0, r8
 80024a6:	41bf      	sbcs	r7, r7
 80024a8:	1ae3      	subs	r3, r4, r3
 80024aa:	427f      	negs	r7, r7
 80024ac:	1bdb      	subs	r3, r3, r7
 80024ae:	021f      	lsls	r7, r3, #8
 80024b0:	d47c      	bmi.n	80025ac <__aeabi_dsub+0x524>
 80024b2:	4647      	mov	r7, r8
 80024b4:	431f      	orrs	r7, r3
 80024b6:	d100      	bne.n	80024ba <__aeabi_dsub+0x432>
 80024b8:	e0a6      	b.n	8002608 <__aeabi_dsub+0x580>
 80024ba:	001c      	movs	r4, r3
 80024bc:	4647      	mov	r7, r8
 80024be:	e645      	b.n	800214c <__aeabi_dsub+0xc4>
 80024c0:	4cb7      	ldr	r4, [pc, #732]	@ (80027a0 <__aeabi_dsub+0x718>)
 80024c2:	1aed      	subs	r5, r5, r3
 80024c4:	4014      	ands	r4, r2
 80024c6:	077b      	lsls	r3, r7, #29
 80024c8:	d000      	beq.n	80024cc <__aeabi_dsub+0x444>
 80024ca:	e780      	b.n	80023ce <__aeabi_dsub+0x346>
 80024cc:	e784      	b.n	80023d8 <__aeabi_dsub+0x350>
 80024ce:	464b      	mov	r3, r9
 80024d0:	0025      	movs	r5, r4
 80024d2:	4305      	orrs	r5, r0
 80024d4:	d066      	beq.n	80025a4 <__aeabi_dsub+0x51c>
 80024d6:	1e5f      	subs	r7, r3, #1
 80024d8:	2b01      	cmp	r3, #1
 80024da:	d100      	bne.n	80024de <__aeabi_dsub+0x456>
 80024dc:	e0fc      	b.n	80026d8 <__aeabi_dsub+0x650>
 80024de:	4dae      	ldr	r5, [pc, #696]	@ (8002798 <__aeabi_dsub+0x710>)
 80024e0:	42ab      	cmp	r3, r5
 80024e2:	d100      	bne.n	80024e6 <__aeabi_dsub+0x45e>
 80024e4:	e15e      	b.n	80027a4 <__aeabi_dsub+0x71c>
 80024e6:	4666      	mov	r6, ip
 80024e8:	2f38      	cmp	r7, #56	@ 0x38
 80024ea:	dc00      	bgt.n	80024ee <__aeabi_dsub+0x466>
 80024ec:	e0b4      	b.n	8002658 <__aeabi_dsub+0x5d0>
 80024ee:	2001      	movs	r0, #1
 80024f0:	1a17      	subs	r7, r2, r0
 80024f2:	42ba      	cmp	r2, r7
 80024f4:	4192      	sbcs	r2, r2
 80024f6:	465b      	mov	r3, fp
 80024f8:	4252      	negs	r2, r2
 80024fa:	464d      	mov	r5, r9
 80024fc:	1a9c      	subs	r4, r3, r2
 80024fe:	e620      	b.n	8002142 <__aeabi_dsub+0xba>
 8002500:	0767      	lsls	r7, r4, #29
 8002502:	08c0      	lsrs	r0, r0, #3
 8002504:	4307      	orrs	r7, r0
 8002506:	08e5      	lsrs	r5, r4, #3
 8002508:	e6ba      	b.n	8002280 <__aeabi_dsub+0x1f8>
 800250a:	001f      	movs	r7, r3
 800250c:	4659      	mov	r1, fp
 800250e:	3f20      	subs	r7, #32
 8002510:	40f9      	lsrs	r1, r7
 8002512:	000f      	movs	r7, r1
 8002514:	2b20      	cmp	r3, #32
 8002516:	d005      	beq.n	8002524 <__aeabi_dsub+0x49c>
 8002518:	2140      	movs	r1, #64	@ 0x40
 800251a:	1acb      	subs	r3, r1, r3
 800251c:	4659      	mov	r1, fp
 800251e:	4099      	lsls	r1, r3
 8002520:	430a      	orrs	r2, r1
 8002522:	4692      	mov	sl, r2
 8002524:	4653      	mov	r3, sl
 8002526:	1e5a      	subs	r2, r3, #1
 8002528:	4193      	sbcs	r3, r2
 800252a:	431f      	orrs	r7, r3
 800252c:	e604      	b.n	8002138 <__aeabi_dsub+0xb0>
 800252e:	1aeb      	subs	r3, r5, r3
 8002530:	4d9b      	ldr	r5, [pc, #620]	@ (80027a0 <__aeabi_dsub+0x718>)
 8002532:	4015      	ands	r5, r2
 8002534:	076f      	lsls	r7, r5, #29
 8002536:	08ed      	lsrs	r5, r5, #3
 8002538:	032c      	lsls	r4, r5, #12
 800253a:	055d      	lsls	r5, r3, #21
 800253c:	0b24      	lsrs	r4, r4, #12
 800253e:	0d6d      	lsrs	r5, r5, #21
 8002540:	e736      	b.n	80023b0 <__aeabi_dsub+0x328>
 8002542:	4d95      	ldr	r5, [pc, #596]	@ (8002798 <__aeabi_dsub+0x710>)
 8002544:	42ab      	cmp	r3, r5
 8002546:	d100      	bne.n	800254a <__aeabi_dsub+0x4c2>
 8002548:	e0d6      	b.n	80026f8 <__aeabi_dsub+0x670>
 800254a:	1882      	adds	r2, r0, r2
 800254c:	0021      	movs	r1, r4
 800254e:	4282      	cmp	r2, r0
 8002550:	4180      	sbcs	r0, r0
 8002552:	4459      	add	r1, fp
 8002554:	4240      	negs	r0, r0
 8002556:	1808      	adds	r0, r1, r0
 8002558:	07c7      	lsls	r7, r0, #31
 800255a:	0852      	lsrs	r2, r2, #1
 800255c:	4317      	orrs	r7, r2
 800255e:	0844      	lsrs	r4, r0, #1
 8002560:	0752      	lsls	r2, r2, #29
 8002562:	d400      	bmi.n	8002566 <__aeabi_dsub+0x4de>
 8002564:	e185      	b.n	8002872 <__aeabi_dsub+0x7ea>
 8002566:	220f      	movs	r2, #15
 8002568:	001d      	movs	r5, r3
 800256a:	403a      	ands	r2, r7
 800256c:	2a04      	cmp	r2, #4
 800256e:	d000      	beq.n	8002572 <__aeabi_dsub+0x4ea>
 8002570:	e61a      	b.n	80021a8 <__aeabi_dsub+0x120>
 8002572:	08ff      	lsrs	r7, r7, #3
 8002574:	0764      	lsls	r4, r4, #29
 8002576:	4327      	orrs	r7, r4
 8002578:	0905      	lsrs	r5, r0, #4
 800257a:	e7dd      	b.n	8002538 <__aeabi_dsub+0x4b0>
 800257c:	465b      	mov	r3, fp
 800257e:	08d2      	lsrs	r2, r2, #3
 8002580:	075f      	lsls	r7, r3, #29
 8002582:	4317      	orrs	r7, r2
 8002584:	08dd      	lsrs	r5, r3, #3
 8002586:	e67b      	b.n	8002280 <__aeabi_dsub+0x1f8>
 8002588:	2700      	movs	r7, #0
 800258a:	2400      	movs	r4, #0
 800258c:	e710      	b.n	80023b0 <__aeabi_dsub+0x328>
 800258e:	2b00      	cmp	r3, #0
 8002590:	d000      	beq.n	8002594 <__aeabi_dsub+0x50c>
 8002592:	e0d6      	b.n	8002742 <__aeabi_dsub+0x6ba>
 8002594:	2900      	cmp	r1, #0
 8002596:	d000      	beq.n	800259a <__aeabi_dsub+0x512>
 8002598:	e12f      	b.n	80027fa <__aeabi_dsub+0x772>
 800259a:	2480      	movs	r4, #128	@ 0x80
 800259c:	2600      	movs	r6, #0
 800259e:	4d7e      	ldr	r5, [pc, #504]	@ (8002798 <__aeabi_dsub+0x710>)
 80025a0:	0324      	lsls	r4, r4, #12
 80025a2:	e705      	b.n	80023b0 <__aeabi_dsub+0x328>
 80025a4:	4666      	mov	r6, ip
 80025a6:	465c      	mov	r4, fp
 80025a8:	08d0      	lsrs	r0, r2, #3
 80025aa:	e717      	b.n	80023dc <__aeabi_dsub+0x354>
 80025ac:	465b      	mov	r3, fp
 80025ae:	1a17      	subs	r7, r2, r0
 80025b0:	42ba      	cmp	r2, r7
 80025b2:	4192      	sbcs	r2, r2
 80025b4:	1b1c      	subs	r4, r3, r4
 80025b6:	2601      	movs	r6, #1
 80025b8:	4663      	mov	r3, ip
 80025ba:	4252      	negs	r2, r2
 80025bc:	1aa4      	subs	r4, r4, r2
 80025be:	401e      	ands	r6, r3
 80025c0:	e5c4      	b.n	800214c <__aeabi_dsub+0xc4>
 80025c2:	1883      	adds	r3, r0, r2
 80025c4:	4283      	cmp	r3, r0
 80025c6:	4180      	sbcs	r0, r0
 80025c8:	445c      	add	r4, fp
 80025ca:	4240      	negs	r0, r0
 80025cc:	1825      	adds	r5, r4, r0
 80025ce:	022a      	lsls	r2, r5, #8
 80025d0:	d400      	bmi.n	80025d4 <__aeabi_dsub+0x54c>
 80025d2:	e0da      	b.n	800278a <__aeabi_dsub+0x702>
 80025d4:	4a72      	ldr	r2, [pc, #456]	@ (80027a0 <__aeabi_dsub+0x718>)
 80025d6:	085b      	lsrs	r3, r3, #1
 80025d8:	4015      	ands	r5, r2
 80025da:	07ea      	lsls	r2, r5, #31
 80025dc:	431a      	orrs	r2, r3
 80025de:	0869      	lsrs	r1, r5, #1
 80025e0:	075b      	lsls	r3, r3, #29
 80025e2:	d400      	bmi.n	80025e6 <__aeabi_dsub+0x55e>
 80025e4:	e14a      	b.n	800287c <__aeabi_dsub+0x7f4>
 80025e6:	230f      	movs	r3, #15
 80025e8:	4013      	ands	r3, r2
 80025ea:	2b04      	cmp	r3, #4
 80025ec:	d100      	bne.n	80025f0 <__aeabi_dsub+0x568>
 80025ee:	e0fc      	b.n	80027ea <__aeabi_dsub+0x762>
 80025f0:	1d17      	adds	r7, r2, #4
 80025f2:	4297      	cmp	r7, r2
 80025f4:	41a4      	sbcs	r4, r4
 80025f6:	4264      	negs	r4, r4
 80025f8:	2502      	movs	r5, #2
 80025fa:	1864      	adds	r4, r4, r1
 80025fc:	e6ec      	b.n	80023d8 <__aeabi_dsub+0x350>
 80025fe:	4647      	mov	r7, r8
 8002600:	001c      	movs	r4, r3
 8002602:	431f      	orrs	r7, r3
 8002604:	d000      	beq.n	8002608 <__aeabi_dsub+0x580>
 8002606:	e743      	b.n	8002490 <__aeabi_dsub+0x408>
 8002608:	2600      	movs	r6, #0
 800260a:	2500      	movs	r5, #0
 800260c:	2400      	movs	r4, #0
 800260e:	e6cf      	b.n	80023b0 <__aeabi_dsub+0x328>
 8002610:	08c0      	lsrs	r0, r0, #3
 8002612:	0767      	lsls	r7, r4, #29
 8002614:	4307      	orrs	r7, r0
 8002616:	08e5      	lsrs	r5, r4, #3
 8002618:	e632      	b.n	8002280 <__aeabi_dsub+0x1f8>
 800261a:	1a87      	subs	r7, r0, r2
 800261c:	465b      	mov	r3, fp
 800261e:	42b8      	cmp	r0, r7
 8002620:	4180      	sbcs	r0, r0
 8002622:	1ae4      	subs	r4, r4, r3
 8002624:	4240      	negs	r0, r0
 8002626:	1a24      	subs	r4, r4, r0
 8002628:	0223      	lsls	r3, r4, #8
 800262a:	d428      	bmi.n	800267e <__aeabi_dsub+0x5f6>
 800262c:	0763      	lsls	r3, r4, #29
 800262e:	08ff      	lsrs	r7, r7, #3
 8002630:	431f      	orrs	r7, r3
 8002632:	08e5      	lsrs	r5, r4, #3
 8002634:	2301      	movs	r3, #1
 8002636:	e77f      	b.n	8002538 <__aeabi_dsub+0x4b0>
 8002638:	2b00      	cmp	r3, #0
 800263a:	d100      	bne.n	800263e <__aeabi_dsub+0x5b6>
 800263c:	e673      	b.n	8002326 <__aeabi_dsub+0x29e>
 800263e:	464b      	mov	r3, r9
 8002640:	1b5f      	subs	r7, r3, r5
 8002642:	003b      	movs	r3, r7
 8002644:	2d00      	cmp	r5, #0
 8002646:	d100      	bne.n	800264a <__aeabi_dsub+0x5c2>
 8002648:	e742      	b.n	80024d0 <__aeabi_dsub+0x448>
 800264a:	2f38      	cmp	r7, #56	@ 0x38
 800264c:	dd00      	ble.n	8002650 <__aeabi_dsub+0x5c8>
 800264e:	e0ec      	b.n	800282a <__aeabi_dsub+0x7a2>
 8002650:	2380      	movs	r3, #128	@ 0x80
 8002652:	000e      	movs	r6, r1
 8002654:	041b      	lsls	r3, r3, #16
 8002656:	431c      	orrs	r4, r3
 8002658:	2f1f      	cmp	r7, #31
 800265a:	dc25      	bgt.n	80026a8 <__aeabi_dsub+0x620>
 800265c:	2520      	movs	r5, #32
 800265e:	0023      	movs	r3, r4
 8002660:	1bed      	subs	r5, r5, r7
 8002662:	0001      	movs	r1, r0
 8002664:	40a8      	lsls	r0, r5
 8002666:	40ab      	lsls	r3, r5
 8002668:	40f9      	lsrs	r1, r7
 800266a:	1e45      	subs	r5, r0, #1
 800266c:	41a8      	sbcs	r0, r5
 800266e:	430b      	orrs	r3, r1
 8002670:	40fc      	lsrs	r4, r7
 8002672:	4318      	orrs	r0, r3
 8002674:	465b      	mov	r3, fp
 8002676:	1b1b      	subs	r3, r3, r4
 8002678:	469b      	mov	fp, r3
 800267a:	e739      	b.n	80024f0 <__aeabi_dsub+0x468>
 800267c:	4666      	mov	r6, ip
 800267e:	2501      	movs	r5, #1
 8002680:	e562      	b.n	8002148 <__aeabi_dsub+0xc0>
 8002682:	001f      	movs	r7, r3
 8002684:	4659      	mov	r1, fp
 8002686:	3f20      	subs	r7, #32
 8002688:	40f9      	lsrs	r1, r7
 800268a:	468c      	mov	ip, r1
 800268c:	2b20      	cmp	r3, #32
 800268e:	d005      	beq.n	800269c <__aeabi_dsub+0x614>
 8002690:	2740      	movs	r7, #64	@ 0x40
 8002692:	4659      	mov	r1, fp
 8002694:	1afb      	subs	r3, r7, r3
 8002696:	4099      	lsls	r1, r3
 8002698:	430a      	orrs	r2, r1
 800269a:	4692      	mov	sl, r2
 800269c:	4657      	mov	r7, sl
 800269e:	1e7b      	subs	r3, r7, #1
 80026a0:	419f      	sbcs	r7, r3
 80026a2:	4663      	mov	r3, ip
 80026a4:	431f      	orrs	r7, r3
 80026a6:	e5c1      	b.n	800222c <__aeabi_dsub+0x1a4>
 80026a8:	003b      	movs	r3, r7
 80026aa:	0025      	movs	r5, r4
 80026ac:	3b20      	subs	r3, #32
 80026ae:	40dd      	lsrs	r5, r3
 80026b0:	2f20      	cmp	r7, #32
 80026b2:	d004      	beq.n	80026be <__aeabi_dsub+0x636>
 80026b4:	2340      	movs	r3, #64	@ 0x40
 80026b6:	1bdb      	subs	r3, r3, r7
 80026b8:	409c      	lsls	r4, r3
 80026ba:	4320      	orrs	r0, r4
 80026bc:	4680      	mov	r8, r0
 80026be:	4640      	mov	r0, r8
 80026c0:	1e43      	subs	r3, r0, #1
 80026c2:	4198      	sbcs	r0, r3
 80026c4:	4328      	orrs	r0, r5
 80026c6:	e713      	b.n	80024f0 <__aeabi_dsub+0x468>
 80026c8:	2900      	cmp	r1, #0
 80026ca:	d09d      	beq.n	8002608 <__aeabi_dsub+0x580>
 80026cc:	2601      	movs	r6, #1
 80026ce:	4663      	mov	r3, ip
 80026d0:	465c      	mov	r4, fp
 80026d2:	4690      	mov	r8, r2
 80026d4:	401e      	ands	r6, r3
 80026d6:	e6db      	b.n	8002490 <__aeabi_dsub+0x408>
 80026d8:	1a17      	subs	r7, r2, r0
 80026da:	465b      	mov	r3, fp
 80026dc:	42ba      	cmp	r2, r7
 80026de:	4192      	sbcs	r2, r2
 80026e0:	1b1c      	subs	r4, r3, r4
 80026e2:	4252      	negs	r2, r2
 80026e4:	1aa4      	subs	r4, r4, r2
 80026e6:	0223      	lsls	r3, r4, #8
 80026e8:	d4c8      	bmi.n	800267c <__aeabi_dsub+0x5f4>
 80026ea:	0763      	lsls	r3, r4, #29
 80026ec:	08ff      	lsrs	r7, r7, #3
 80026ee:	431f      	orrs	r7, r3
 80026f0:	4666      	mov	r6, ip
 80026f2:	2301      	movs	r3, #1
 80026f4:	08e5      	lsrs	r5, r4, #3
 80026f6:	e71f      	b.n	8002538 <__aeabi_dsub+0x4b0>
 80026f8:	001d      	movs	r5, r3
 80026fa:	2400      	movs	r4, #0
 80026fc:	2700      	movs	r7, #0
 80026fe:	e657      	b.n	80023b0 <__aeabi_dsub+0x328>
 8002700:	465c      	mov	r4, fp
 8002702:	08d0      	lsrs	r0, r2, #3
 8002704:	e66a      	b.n	80023dc <__aeabi_dsub+0x354>
 8002706:	2b00      	cmp	r3, #0
 8002708:	d100      	bne.n	800270c <__aeabi_dsub+0x684>
 800270a:	e737      	b.n	800257c <__aeabi_dsub+0x4f4>
 800270c:	4653      	mov	r3, sl
 800270e:	08c0      	lsrs	r0, r0, #3
 8002710:	0767      	lsls	r7, r4, #29
 8002712:	4307      	orrs	r7, r0
 8002714:	08e5      	lsrs	r5, r4, #3
 8002716:	2b00      	cmp	r3, #0
 8002718:	d100      	bne.n	800271c <__aeabi_dsub+0x694>
 800271a:	e5b1      	b.n	8002280 <__aeabi_dsub+0x1f8>
 800271c:	2380      	movs	r3, #128	@ 0x80
 800271e:	031b      	lsls	r3, r3, #12
 8002720:	421d      	tst	r5, r3
 8002722:	d008      	beq.n	8002736 <__aeabi_dsub+0x6ae>
 8002724:	4659      	mov	r1, fp
 8002726:	08c8      	lsrs	r0, r1, #3
 8002728:	4218      	tst	r0, r3
 800272a:	d104      	bne.n	8002736 <__aeabi_dsub+0x6ae>
 800272c:	08d2      	lsrs	r2, r2, #3
 800272e:	0749      	lsls	r1, r1, #29
 8002730:	430a      	orrs	r2, r1
 8002732:	0017      	movs	r7, r2
 8002734:	0005      	movs	r5, r0
 8002736:	0f7b      	lsrs	r3, r7, #29
 8002738:	00ff      	lsls	r7, r7, #3
 800273a:	08ff      	lsrs	r7, r7, #3
 800273c:	075b      	lsls	r3, r3, #29
 800273e:	431f      	orrs	r7, r3
 8002740:	e59e      	b.n	8002280 <__aeabi_dsub+0x1f8>
 8002742:	08c0      	lsrs	r0, r0, #3
 8002744:	0763      	lsls	r3, r4, #29
 8002746:	4318      	orrs	r0, r3
 8002748:	08e5      	lsrs	r5, r4, #3
 800274a:	2900      	cmp	r1, #0
 800274c:	d053      	beq.n	80027f6 <__aeabi_dsub+0x76e>
 800274e:	2380      	movs	r3, #128	@ 0x80
 8002750:	031b      	lsls	r3, r3, #12
 8002752:	421d      	tst	r5, r3
 8002754:	d00a      	beq.n	800276c <__aeabi_dsub+0x6e4>
 8002756:	4659      	mov	r1, fp
 8002758:	08cc      	lsrs	r4, r1, #3
 800275a:	421c      	tst	r4, r3
 800275c:	d106      	bne.n	800276c <__aeabi_dsub+0x6e4>
 800275e:	2601      	movs	r6, #1
 8002760:	4663      	mov	r3, ip
 8002762:	0025      	movs	r5, r4
 8002764:	08d0      	lsrs	r0, r2, #3
 8002766:	0749      	lsls	r1, r1, #29
 8002768:	4308      	orrs	r0, r1
 800276a:	401e      	ands	r6, r3
 800276c:	0f47      	lsrs	r7, r0, #29
 800276e:	00c0      	lsls	r0, r0, #3
 8002770:	08c0      	lsrs	r0, r0, #3
 8002772:	077f      	lsls	r7, r7, #29
 8002774:	4307      	orrs	r7, r0
 8002776:	e583      	b.n	8002280 <__aeabi_dsub+0x1f8>
 8002778:	1883      	adds	r3, r0, r2
 800277a:	4293      	cmp	r3, r2
 800277c:	4192      	sbcs	r2, r2
 800277e:	445c      	add	r4, fp
 8002780:	4252      	negs	r2, r2
 8002782:	18a5      	adds	r5, r4, r2
 8002784:	022a      	lsls	r2, r5, #8
 8002786:	d500      	bpl.n	800278a <__aeabi_dsub+0x702>
 8002788:	e724      	b.n	80025d4 <__aeabi_dsub+0x54c>
 800278a:	076f      	lsls	r7, r5, #29
 800278c:	08db      	lsrs	r3, r3, #3
 800278e:	431f      	orrs	r7, r3
 8002790:	08ed      	lsrs	r5, r5, #3
 8002792:	2301      	movs	r3, #1
 8002794:	e6d0      	b.n	8002538 <__aeabi_dsub+0x4b0>
 8002796:	46c0      	nop			@ (mov r8, r8)
 8002798:	000007ff 	.word	0x000007ff
 800279c:	000007fe 	.word	0x000007fe
 80027a0:	ff7fffff 	.word	0xff7fffff
 80027a4:	465b      	mov	r3, fp
 80027a6:	08d2      	lsrs	r2, r2, #3
 80027a8:	075f      	lsls	r7, r3, #29
 80027aa:	4666      	mov	r6, ip
 80027ac:	4317      	orrs	r7, r2
 80027ae:	08dd      	lsrs	r5, r3, #3
 80027b0:	e566      	b.n	8002280 <__aeabi_dsub+0x1f8>
 80027b2:	0025      	movs	r5, r4
 80027b4:	3b20      	subs	r3, #32
 80027b6:	40dd      	lsrs	r5, r3
 80027b8:	4663      	mov	r3, ip
 80027ba:	2b20      	cmp	r3, #32
 80027bc:	d005      	beq.n	80027ca <__aeabi_dsub+0x742>
 80027be:	2340      	movs	r3, #64	@ 0x40
 80027c0:	4661      	mov	r1, ip
 80027c2:	1a5b      	subs	r3, r3, r1
 80027c4:	409c      	lsls	r4, r3
 80027c6:	4320      	orrs	r0, r4
 80027c8:	4680      	mov	r8, r0
 80027ca:	4647      	mov	r7, r8
 80027cc:	1e7b      	subs	r3, r7, #1
 80027ce:	419f      	sbcs	r7, r3
 80027d0:	432f      	orrs	r7, r5
 80027d2:	e5a0      	b.n	8002316 <__aeabi_dsub+0x28e>
 80027d4:	2120      	movs	r1, #32
 80027d6:	2700      	movs	r7, #0
 80027d8:	1a09      	subs	r1, r1, r0
 80027da:	e4d2      	b.n	8002182 <__aeabi_dsub+0xfa>
 80027dc:	2f00      	cmp	r7, #0
 80027de:	d100      	bne.n	80027e2 <__aeabi_dsub+0x75a>
 80027e0:	e713      	b.n	800260a <__aeabi_dsub+0x582>
 80027e2:	465c      	mov	r4, fp
 80027e4:	0017      	movs	r7, r2
 80027e6:	2500      	movs	r5, #0
 80027e8:	e5f6      	b.n	80023d8 <__aeabi_dsub+0x350>
 80027ea:	08d7      	lsrs	r7, r2, #3
 80027ec:	0749      	lsls	r1, r1, #29
 80027ee:	2302      	movs	r3, #2
 80027f0:	430f      	orrs	r7, r1
 80027f2:	092d      	lsrs	r5, r5, #4
 80027f4:	e6a0      	b.n	8002538 <__aeabi_dsub+0x4b0>
 80027f6:	0007      	movs	r7, r0
 80027f8:	e542      	b.n	8002280 <__aeabi_dsub+0x1f8>
 80027fa:	465b      	mov	r3, fp
 80027fc:	2601      	movs	r6, #1
 80027fe:	075f      	lsls	r7, r3, #29
 8002800:	08dd      	lsrs	r5, r3, #3
 8002802:	4663      	mov	r3, ip
 8002804:	08d2      	lsrs	r2, r2, #3
 8002806:	4317      	orrs	r7, r2
 8002808:	401e      	ands	r6, r3
 800280a:	e539      	b.n	8002280 <__aeabi_dsub+0x1f8>
 800280c:	465b      	mov	r3, fp
 800280e:	08d2      	lsrs	r2, r2, #3
 8002810:	075f      	lsls	r7, r3, #29
 8002812:	4317      	orrs	r7, r2
 8002814:	08dd      	lsrs	r5, r3, #3
 8002816:	e533      	b.n	8002280 <__aeabi_dsub+0x1f8>
 8002818:	4a1e      	ldr	r2, [pc, #120]	@ (8002894 <__aeabi_dsub+0x80c>)
 800281a:	08db      	lsrs	r3, r3, #3
 800281c:	4022      	ands	r2, r4
 800281e:	0757      	lsls	r7, r2, #29
 8002820:	0252      	lsls	r2, r2, #9
 8002822:	2501      	movs	r5, #1
 8002824:	431f      	orrs	r7, r3
 8002826:	0b14      	lsrs	r4, r2, #12
 8002828:	e5c2      	b.n	80023b0 <__aeabi_dsub+0x328>
 800282a:	000e      	movs	r6, r1
 800282c:	2001      	movs	r0, #1
 800282e:	e65f      	b.n	80024f0 <__aeabi_dsub+0x468>
 8002830:	2b00      	cmp	r3, #0
 8002832:	d00d      	beq.n	8002850 <__aeabi_dsub+0x7c8>
 8002834:	464b      	mov	r3, r9
 8002836:	1b5b      	subs	r3, r3, r5
 8002838:	469c      	mov	ip, r3
 800283a:	2d00      	cmp	r5, #0
 800283c:	d100      	bne.n	8002840 <__aeabi_dsub+0x7b8>
 800283e:	e548      	b.n	80022d2 <__aeabi_dsub+0x24a>
 8002840:	2701      	movs	r7, #1
 8002842:	2b38      	cmp	r3, #56	@ 0x38
 8002844:	dd00      	ble.n	8002848 <__aeabi_dsub+0x7c0>
 8002846:	e566      	b.n	8002316 <__aeabi_dsub+0x28e>
 8002848:	2380      	movs	r3, #128	@ 0x80
 800284a:	041b      	lsls	r3, r3, #16
 800284c:	431c      	orrs	r4, r3
 800284e:	e550      	b.n	80022f2 <__aeabi_dsub+0x26a>
 8002850:	1c6b      	adds	r3, r5, #1
 8002852:	4d11      	ldr	r5, [pc, #68]	@ (8002898 <__aeabi_dsub+0x810>)
 8002854:	422b      	tst	r3, r5
 8002856:	d000      	beq.n	800285a <__aeabi_dsub+0x7d2>
 8002858:	e673      	b.n	8002542 <__aeabi_dsub+0x4ba>
 800285a:	4659      	mov	r1, fp
 800285c:	0023      	movs	r3, r4
 800285e:	4311      	orrs	r1, r2
 8002860:	468a      	mov	sl, r1
 8002862:	4303      	orrs	r3, r0
 8002864:	e600      	b.n	8002468 <__aeabi_dsub+0x3e0>
 8002866:	0767      	lsls	r7, r4, #29
 8002868:	08c0      	lsrs	r0, r0, #3
 800286a:	2300      	movs	r3, #0
 800286c:	4307      	orrs	r7, r0
 800286e:	08e5      	lsrs	r5, r4, #3
 8002870:	e662      	b.n	8002538 <__aeabi_dsub+0x4b0>
 8002872:	0764      	lsls	r4, r4, #29
 8002874:	08ff      	lsrs	r7, r7, #3
 8002876:	4327      	orrs	r7, r4
 8002878:	0905      	lsrs	r5, r0, #4
 800287a:	e65d      	b.n	8002538 <__aeabi_dsub+0x4b0>
 800287c:	08d2      	lsrs	r2, r2, #3
 800287e:	0749      	lsls	r1, r1, #29
 8002880:	4311      	orrs	r1, r2
 8002882:	000f      	movs	r7, r1
 8002884:	2302      	movs	r3, #2
 8002886:	092d      	lsrs	r5, r5, #4
 8002888:	e656      	b.n	8002538 <__aeabi_dsub+0x4b0>
 800288a:	0007      	movs	r7, r0
 800288c:	e5a4      	b.n	80023d8 <__aeabi_dsub+0x350>
 800288e:	0038      	movs	r0, r7
 8002890:	e48f      	b.n	80021b2 <__aeabi_dsub+0x12a>
 8002892:	46c0      	nop			@ (mov r8, r8)
 8002894:	ff7fffff 	.word	0xff7fffff
 8002898:	000007fe 	.word	0x000007fe

0800289c <__aeabi_dcmpun>:
 800289c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800289e:	46c6      	mov	lr, r8
 80028a0:	031e      	lsls	r6, r3, #12
 80028a2:	0b36      	lsrs	r6, r6, #12
 80028a4:	46b0      	mov	r8, r6
 80028a6:	4e0d      	ldr	r6, [pc, #52]	@ (80028dc <__aeabi_dcmpun+0x40>)
 80028a8:	030c      	lsls	r4, r1, #12
 80028aa:	004d      	lsls	r5, r1, #1
 80028ac:	005f      	lsls	r7, r3, #1
 80028ae:	b500      	push	{lr}
 80028b0:	0b24      	lsrs	r4, r4, #12
 80028b2:	0d6d      	lsrs	r5, r5, #21
 80028b4:	0d7f      	lsrs	r7, r7, #21
 80028b6:	42b5      	cmp	r5, r6
 80028b8:	d00b      	beq.n	80028d2 <__aeabi_dcmpun+0x36>
 80028ba:	4908      	ldr	r1, [pc, #32]	@ (80028dc <__aeabi_dcmpun+0x40>)
 80028bc:	2000      	movs	r0, #0
 80028be:	428f      	cmp	r7, r1
 80028c0:	d104      	bne.n	80028cc <__aeabi_dcmpun+0x30>
 80028c2:	4646      	mov	r6, r8
 80028c4:	4316      	orrs	r6, r2
 80028c6:	0030      	movs	r0, r6
 80028c8:	1e43      	subs	r3, r0, #1
 80028ca:	4198      	sbcs	r0, r3
 80028cc:	bc80      	pop	{r7}
 80028ce:	46b8      	mov	r8, r7
 80028d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80028d2:	4304      	orrs	r4, r0
 80028d4:	2001      	movs	r0, #1
 80028d6:	2c00      	cmp	r4, #0
 80028d8:	d1f8      	bne.n	80028cc <__aeabi_dcmpun+0x30>
 80028da:	e7ee      	b.n	80028ba <__aeabi_dcmpun+0x1e>
 80028dc:	000007ff 	.word	0x000007ff

080028e0 <__aeabi_d2iz>:
 80028e0:	000b      	movs	r3, r1
 80028e2:	0002      	movs	r2, r0
 80028e4:	b570      	push	{r4, r5, r6, lr}
 80028e6:	4d16      	ldr	r5, [pc, #88]	@ (8002940 <__aeabi_d2iz+0x60>)
 80028e8:	030c      	lsls	r4, r1, #12
 80028ea:	b082      	sub	sp, #8
 80028ec:	0049      	lsls	r1, r1, #1
 80028ee:	2000      	movs	r0, #0
 80028f0:	9200      	str	r2, [sp, #0]
 80028f2:	9301      	str	r3, [sp, #4]
 80028f4:	0b24      	lsrs	r4, r4, #12
 80028f6:	0d49      	lsrs	r1, r1, #21
 80028f8:	0fde      	lsrs	r6, r3, #31
 80028fa:	42a9      	cmp	r1, r5
 80028fc:	dd04      	ble.n	8002908 <__aeabi_d2iz+0x28>
 80028fe:	4811      	ldr	r0, [pc, #68]	@ (8002944 <__aeabi_d2iz+0x64>)
 8002900:	4281      	cmp	r1, r0
 8002902:	dd03      	ble.n	800290c <__aeabi_d2iz+0x2c>
 8002904:	4b10      	ldr	r3, [pc, #64]	@ (8002948 <__aeabi_d2iz+0x68>)
 8002906:	18f0      	adds	r0, r6, r3
 8002908:	b002      	add	sp, #8
 800290a:	bd70      	pop	{r4, r5, r6, pc}
 800290c:	2080      	movs	r0, #128	@ 0x80
 800290e:	0340      	lsls	r0, r0, #13
 8002910:	4320      	orrs	r0, r4
 8002912:	4c0e      	ldr	r4, [pc, #56]	@ (800294c <__aeabi_d2iz+0x6c>)
 8002914:	1a64      	subs	r4, r4, r1
 8002916:	2c1f      	cmp	r4, #31
 8002918:	dd08      	ble.n	800292c <__aeabi_d2iz+0x4c>
 800291a:	4b0d      	ldr	r3, [pc, #52]	@ (8002950 <__aeabi_d2iz+0x70>)
 800291c:	1a5b      	subs	r3, r3, r1
 800291e:	40d8      	lsrs	r0, r3
 8002920:	0003      	movs	r3, r0
 8002922:	4258      	negs	r0, r3
 8002924:	2e00      	cmp	r6, #0
 8002926:	d1ef      	bne.n	8002908 <__aeabi_d2iz+0x28>
 8002928:	0018      	movs	r0, r3
 800292a:	e7ed      	b.n	8002908 <__aeabi_d2iz+0x28>
 800292c:	4b09      	ldr	r3, [pc, #36]	@ (8002954 <__aeabi_d2iz+0x74>)
 800292e:	9a00      	ldr	r2, [sp, #0]
 8002930:	469c      	mov	ip, r3
 8002932:	0003      	movs	r3, r0
 8002934:	4461      	add	r1, ip
 8002936:	408b      	lsls	r3, r1
 8002938:	40e2      	lsrs	r2, r4
 800293a:	4313      	orrs	r3, r2
 800293c:	e7f1      	b.n	8002922 <__aeabi_d2iz+0x42>
 800293e:	46c0      	nop			@ (mov r8, r8)
 8002940:	000003fe 	.word	0x000003fe
 8002944:	0000041d 	.word	0x0000041d
 8002948:	7fffffff 	.word	0x7fffffff
 800294c:	00000433 	.word	0x00000433
 8002950:	00000413 	.word	0x00000413
 8002954:	fffffbed 	.word	0xfffffbed

08002958 <__aeabi_i2d>:
 8002958:	b570      	push	{r4, r5, r6, lr}
 800295a:	2800      	cmp	r0, #0
 800295c:	d016      	beq.n	800298c <__aeabi_i2d+0x34>
 800295e:	17c3      	asrs	r3, r0, #31
 8002960:	18c5      	adds	r5, r0, r3
 8002962:	405d      	eors	r5, r3
 8002964:	0fc4      	lsrs	r4, r0, #31
 8002966:	0028      	movs	r0, r5
 8002968:	f000 f912 	bl	8002b90 <__clzsi2>
 800296c:	4b10      	ldr	r3, [pc, #64]	@ (80029b0 <__aeabi_i2d+0x58>)
 800296e:	1a1b      	subs	r3, r3, r0
 8002970:	055b      	lsls	r3, r3, #21
 8002972:	0d5b      	lsrs	r3, r3, #21
 8002974:	280a      	cmp	r0, #10
 8002976:	dc14      	bgt.n	80029a2 <__aeabi_i2d+0x4a>
 8002978:	0002      	movs	r2, r0
 800297a:	002e      	movs	r6, r5
 800297c:	3215      	adds	r2, #21
 800297e:	4096      	lsls	r6, r2
 8002980:	220b      	movs	r2, #11
 8002982:	1a12      	subs	r2, r2, r0
 8002984:	40d5      	lsrs	r5, r2
 8002986:	032d      	lsls	r5, r5, #12
 8002988:	0b2d      	lsrs	r5, r5, #12
 800298a:	e003      	b.n	8002994 <__aeabi_i2d+0x3c>
 800298c:	2400      	movs	r4, #0
 800298e:	2300      	movs	r3, #0
 8002990:	2500      	movs	r5, #0
 8002992:	2600      	movs	r6, #0
 8002994:	051b      	lsls	r3, r3, #20
 8002996:	432b      	orrs	r3, r5
 8002998:	07e4      	lsls	r4, r4, #31
 800299a:	4323      	orrs	r3, r4
 800299c:	0030      	movs	r0, r6
 800299e:	0019      	movs	r1, r3
 80029a0:	bd70      	pop	{r4, r5, r6, pc}
 80029a2:	380b      	subs	r0, #11
 80029a4:	4085      	lsls	r5, r0
 80029a6:	032d      	lsls	r5, r5, #12
 80029a8:	2600      	movs	r6, #0
 80029aa:	0b2d      	lsrs	r5, r5, #12
 80029ac:	e7f2      	b.n	8002994 <__aeabi_i2d+0x3c>
 80029ae:	46c0      	nop			@ (mov r8, r8)
 80029b0:	0000041e 	.word	0x0000041e

080029b4 <__aeabi_ui2d>:
 80029b4:	b510      	push	{r4, lr}
 80029b6:	1e04      	subs	r4, r0, #0
 80029b8:	d010      	beq.n	80029dc <__aeabi_ui2d+0x28>
 80029ba:	f000 f8e9 	bl	8002b90 <__clzsi2>
 80029be:	4b0e      	ldr	r3, [pc, #56]	@ (80029f8 <__aeabi_ui2d+0x44>)
 80029c0:	1a1b      	subs	r3, r3, r0
 80029c2:	055b      	lsls	r3, r3, #21
 80029c4:	0d5b      	lsrs	r3, r3, #21
 80029c6:	280a      	cmp	r0, #10
 80029c8:	dc0f      	bgt.n	80029ea <__aeabi_ui2d+0x36>
 80029ca:	220b      	movs	r2, #11
 80029cc:	0021      	movs	r1, r4
 80029ce:	1a12      	subs	r2, r2, r0
 80029d0:	40d1      	lsrs	r1, r2
 80029d2:	3015      	adds	r0, #21
 80029d4:	030a      	lsls	r2, r1, #12
 80029d6:	4084      	lsls	r4, r0
 80029d8:	0b12      	lsrs	r2, r2, #12
 80029da:	e001      	b.n	80029e0 <__aeabi_ui2d+0x2c>
 80029dc:	2300      	movs	r3, #0
 80029de:	2200      	movs	r2, #0
 80029e0:	051b      	lsls	r3, r3, #20
 80029e2:	4313      	orrs	r3, r2
 80029e4:	0020      	movs	r0, r4
 80029e6:	0019      	movs	r1, r3
 80029e8:	bd10      	pop	{r4, pc}
 80029ea:	0022      	movs	r2, r4
 80029ec:	380b      	subs	r0, #11
 80029ee:	4082      	lsls	r2, r0
 80029f0:	0312      	lsls	r2, r2, #12
 80029f2:	2400      	movs	r4, #0
 80029f4:	0b12      	lsrs	r2, r2, #12
 80029f6:	e7f3      	b.n	80029e0 <__aeabi_ui2d+0x2c>
 80029f8:	0000041e 	.word	0x0000041e

080029fc <__aeabi_f2d>:
 80029fc:	b570      	push	{r4, r5, r6, lr}
 80029fe:	0242      	lsls	r2, r0, #9
 8002a00:	0043      	lsls	r3, r0, #1
 8002a02:	0fc4      	lsrs	r4, r0, #31
 8002a04:	20fe      	movs	r0, #254	@ 0xfe
 8002a06:	0e1b      	lsrs	r3, r3, #24
 8002a08:	1c59      	adds	r1, r3, #1
 8002a0a:	0a55      	lsrs	r5, r2, #9
 8002a0c:	4208      	tst	r0, r1
 8002a0e:	d00c      	beq.n	8002a2a <__aeabi_f2d+0x2e>
 8002a10:	21e0      	movs	r1, #224	@ 0xe0
 8002a12:	0089      	lsls	r1, r1, #2
 8002a14:	468c      	mov	ip, r1
 8002a16:	076d      	lsls	r5, r5, #29
 8002a18:	0b12      	lsrs	r2, r2, #12
 8002a1a:	4463      	add	r3, ip
 8002a1c:	051b      	lsls	r3, r3, #20
 8002a1e:	4313      	orrs	r3, r2
 8002a20:	07e4      	lsls	r4, r4, #31
 8002a22:	4323      	orrs	r3, r4
 8002a24:	0028      	movs	r0, r5
 8002a26:	0019      	movs	r1, r3
 8002a28:	bd70      	pop	{r4, r5, r6, pc}
 8002a2a:	2b00      	cmp	r3, #0
 8002a2c:	d114      	bne.n	8002a58 <__aeabi_f2d+0x5c>
 8002a2e:	2d00      	cmp	r5, #0
 8002a30:	d01b      	beq.n	8002a6a <__aeabi_f2d+0x6e>
 8002a32:	0028      	movs	r0, r5
 8002a34:	f000 f8ac 	bl	8002b90 <__clzsi2>
 8002a38:	280a      	cmp	r0, #10
 8002a3a:	dc1c      	bgt.n	8002a76 <__aeabi_f2d+0x7a>
 8002a3c:	230b      	movs	r3, #11
 8002a3e:	002a      	movs	r2, r5
 8002a40:	1a1b      	subs	r3, r3, r0
 8002a42:	40da      	lsrs	r2, r3
 8002a44:	0003      	movs	r3, r0
 8002a46:	3315      	adds	r3, #21
 8002a48:	409d      	lsls	r5, r3
 8002a4a:	4b0e      	ldr	r3, [pc, #56]	@ (8002a84 <__aeabi_f2d+0x88>)
 8002a4c:	0312      	lsls	r2, r2, #12
 8002a4e:	1a1b      	subs	r3, r3, r0
 8002a50:	055b      	lsls	r3, r3, #21
 8002a52:	0b12      	lsrs	r2, r2, #12
 8002a54:	0d5b      	lsrs	r3, r3, #21
 8002a56:	e7e1      	b.n	8002a1c <__aeabi_f2d+0x20>
 8002a58:	2d00      	cmp	r5, #0
 8002a5a:	d009      	beq.n	8002a70 <__aeabi_f2d+0x74>
 8002a5c:	0b13      	lsrs	r3, r2, #12
 8002a5e:	2280      	movs	r2, #128	@ 0x80
 8002a60:	0312      	lsls	r2, r2, #12
 8002a62:	431a      	orrs	r2, r3
 8002a64:	076d      	lsls	r5, r5, #29
 8002a66:	4b08      	ldr	r3, [pc, #32]	@ (8002a88 <__aeabi_f2d+0x8c>)
 8002a68:	e7d8      	b.n	8002a1c <__aeabi_f2d+0x20>
 8002a6a:	2300      	movs	r3, #0
 8002a6c:	2200      	movs	r2, #0
 8002a6e:	e7d5      	b.n	8002a1c <__aeabi_f2d+0x20>
 8002a70:	2200      	movs	r2, #0
 8002a72:	4b05      	ldr	r3, [pc, #20]	@ (8002a88 <__aeabi_f2d+0x8c>)
 8002a74:	e7d2      	b.n	8002a1c <__aeabi_f2d+0x20>
 8002a76:	0003      	movs	r3, r0
 8002a78:	002a      	movs	r2, r5
 8002a7a:	3b0b      	subs	r3, #11
 8002a7c:	409a      	lsls	r2, r3
 8002a7e:	2500      	movs	r5, #0
 8002a80:	e7e3      	b.n	8002a4a <__aeabi_f2d+0x4e>
 8002a82:	46c0      	nop			@ (mov r8, r8)
 8002a84:	00000389 	.word	0x00000389
 8002a88:	000007ff 	.word	0x000007ff

08002a8c <__aeabi_d2f>:
 8002a8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002a8e:	004b      	lsls	r3, r1, #1
 8002a90:	030f      	lsls	r7, r1, #12
 8002a92:	0d5b      	lsrs	r3, r3, #21
 8002a94:	4c3a      	ldr	r4, [pc, #232]	@ (8002b80 <__aeabi_d2f+0xf4>)
 8002a96:	0f45      	lsrs	r5, r0, #29
 8002a98:	b083      	sub	sp, #12
 8002a9a:	0a7f      	lsrs	r7, r7, #9
 8002a9c:	1c5e      	adds	r6, r3, #1
 8002a9e:	432f      	orrs	r7, r5
 8002aa0:	9000      	str	r0, [sp, #0]
 8002aa2:	9101      	str	r1, [sp, #4]
 8002aa4:	0fca      	lsrs	r2, r1, #31
 8002aa6:	00c5      	lsls	r5, r0, #3
 8002aa8:	4226      	tst	r6, r4
 8002aaa:	d00b      	beq.n	8002ac4 <__aeabi_d2f+0x38>
 8002aac:	4935      	ldr	r1, [pc, #212]	@ (8002b84 <__aeabi_d2f+0xf8>)
 8002aae:	185c      	adds	r4, r3, r1
 8002ab0:	2cfe      	cmp	r4, #254	@ 0xfe
 8002ab2:	dd13      	ble.n	8002adc <__aeabi_d2f+0x50>
 8002ab4:	20ff      	movs	r0, #255	@ 0xff
 8002ab6:	2300      	movs	r3, #0
 8002ab8:	05c0      	lsls	r0, r0, #23
 8002aba:	4318      	orrs	r0, r3
 8002abc:	07d2      	lsls	r2, r2, #31
 8002abe:	4310      	orrs	r0, r2
 8002ac0:	b003      	add	sp, #12
 8002ac2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002ac4:	433d      	orrs	r5, r7
 8002ac6:	2b00      	cmp	r3, #0
 8002ac8:	d101      	bne.n	8002ace <__aeabi_d2f+0x42>
 8002aca:	2000      	movs	r0, #0
 8002acc:	e7f4      	b.n	8002ab8 <__aeabi_d2f+0x2c>
 8002ace:	2d00      	cmp	r5, #0
 8002ad0:	d0f0      	beq.n	8002ab4 <__aeabi_d2f+0x28>
 8002ad2:	2380      	movs	r3, #128	@ 0x80
 8002ad4:	03db      	lsls	r3, r3, #15
 8002ad6:	20ff      	movs	r0, #255	@ 0xff
 8002ad8:	433b      	orrs	r3, r7
 8002ada:	e7ed      	b.n	8002ab8 <__aeabi_d2f+0x2c>
 8002adc:	2c00      	cmp	r4, #0
 8002ade:	dd0c      	ble.n	8002afa <__aeabi_d2f+0x6e>
 8002ae0:	9b00      	ldr	r3, [sp, #0]
 8002ae2:	00ff      	lsls	r7, r7, #3
 8002ae4:	019b      	lsls	r3, r3, #6
 8002ae6:	1e58      	subs	r0, r3, #1
 8002ae8:	4183      	sbcs	r3, r0
 8002aea:	0f69      	lsrs	r1, r5, #29
 8002aec:	433b      	orrs	r3, r7
 8002aee:	430b      	orrs	r3, r1
 8002af0:	0759      	lsls	r1, r3, #29
 8002af2:	d127      	bne.n	8002b44 <__aeabi_d2f+0xb8>
 8002af4:	08db      	lsrs	r3, r3, #3
 8002af6:	b2e0      	uxtb	r0, r4
 8002af8:	e7de      	b.n	8002ab8 <__aeabi_d2f+0x2c>
 8002afa:	0021      	movs	r1, r4
 8002afc:	3117      	adds	r1, #23
 8002afe:	db31      	blt.n	8002b64 <__aeabi_d2f+0xd8>
 8002b00:	2180      	movs	r1, #128	@ 0x80
 8002b02:	201e      	movs	r0, #30
 8002b04:	0409      	lsls	r1, r1, #16
 8002b06:	4339      	orrs	r1, r7
 8002b08:	1b00      	subs	r0, r0, r4
 8002b0a:	281f      	cmp	r0, #31
 8002b0c:	dd2d      	ble.n	8002b6a <__aeabi_d2f+0xde>
 8002b0e:	2602      	movs	r6, #2
 8002b10:	4276      	negs	r6, r6
 8002b12:	1b34      	subs	r4, r6, r4
 8002b14:	000e      	movs	r6, r1
 8002b16:	40e6      	lsrs	r6, r4
 8002b18:	0034      	movs	r4, r6
 8002b1a:	2820      	cmp	r0, #32
 8002b1c:	d004      	beq.n	8002b28 <__aeabi_d2f+0x9c>
 8002b1e:	481a      	ldr	r0, [pc, #104]	@ (8002b88 <__aeabi_d2f+0xfc>)
 8002b20:	4684      	mov	ip, r0
 8002b22:	4463      	add	r3, ip
 8002b24:	4099      	lsls	r1, r3
 8002b26:	430d      	orrs	r5, r1
 8002b28:	002b      	movs	r3, r5
 8002b2a:	1e59      	subs	r1, r3, #1
 8002b2c:	418b      	sbcs	r3, r1
 8002b2e:	4323      	orrs	r3, r4
 8002b30:	0759      	lsls	r1, r3, #29
 8002b32:	d003      	beq.n	8002b3c <__aeabi_d2f+0xb0>
 8002b34:	210f      	movs	r1, #15
 8002b36:	4019      	ands	r1, r3
 8002b38:	2904      	cmp	r1, #4
 8002b3a:	d10b      	bne.n	8002b54 <__aeabi_d2f+0xc8>
 8002b3c:	019b      	lsls	r3, r3, #6
 8002b3e:	2000      	movs	r0, #0
 8002b40:	0a5b      	lsrs	r3, r3, #9
 8002b42:	e7b9      	b.n	8002ab8 <__aeabi_d2f+0x2c>
 8002b44:	210f      	movs	r1, #15
 8002b46:	4019      	ands	r1, r3
 8002b48:	2904      	cmp	r1, #4
 8002b4a:	d104      	bne.n	8002b56 <__aeabi_d2f+0xca>
 8002b4c:	019b      	lsls	r3, r3, #6
 8002b4e:	0a5b      	lsrs	r3, r3, #9
 8002b50:	b2e0      	uxtb	r0, r4
 8002b52:	e7b1      	b.n	8002ab8 <__aeabi_d2f+0x2c>
 8002b54:	2400      	movs	r4, #0
 8002b56:	3304      	adds	r3, #4
 8002b58:	0159      	lsls	r1, r3, #5
 8002b5a:	d5f7      	bpl.n	8002b4c <__aeabi_d2f+0xc0>
 8002b5c:	3401      	adds	r4, #1
 8002b5e:	2300      	movs	r3, #0
 8002b60:	b2e0      	uxtb	r0, r4
 8002b62:	e7a9      	b.n	8002ab8 <__aeabi_d2f+0x2c>
 8002b64:	2000      	movs	r0, #0
 8002b66:	2300      	movs	r3, #0
 8002b68:	e7a6      	b.n	8002ab8 <__aeabi_d2f+0x2c>
 8002b6a:	4c08      	ldr	r4, [pc, #32]	@ (8002b8c <__aeabi_d2f+0x100>)
 8002b6c:	191c      	adds	r4, r3, r4
 8002b6e:	002b      	movs	r3, r5
 8002b70:	40a5      	lsls	r5, r4
 8002b72:	40c3      	lsrs	r3, r0
 8002b74:	40a1      	lsls	r1, r4
 8002b76:	1e68      	subs	r0, r5, #1
 8002b78:	4185      	sbcs	r5, r0
 8002b7a:	4329      	orrs	r1, r5
 8002b7c:	430b      	orrs	r3, r1
 8002b7e:	e7d7      	b.n	8002b30 <__aeabi_d2f+0xa4>
 8002b80:	000007fe 	.word	0x000007fe
 8002b84:	fffffc80 	.word	0xfffffc80
 8002b88:	fffffca2 	.word	0xfffffca2
 8002b8c:	fffffc82 	.word	0xfffffc82

08002b90 <__clzsi2>:
 8002b90:	211c      	movs	r1, #28
 8002b92:	2301      	movs	r3, #1
 8002b94:	041b      	lsls	r3, r3, #16
 8002b96:	4298      	cmp	r0, r3
 8002b98:	d301      	bcc.n	8002b9e <__clzsi2+0xe>
 8002b9a:	0c00      	lsrs	r0, r0, #16
 8002b9c:	3910      	subs	r1, #16
 8002b9e:	0a1b      	lsrs	r3, r3, #8
 8002ba0:	4298      	cmp	r0, r3
 8002ba2:	d301      	bcc.n	8002ba8 <__clzsi2+0x18>
 8002ba4:	0a00      	lsrs	r0, r0, #8
 8002ba6:	3908      	subs	r1, #8
 8002ba8:	091b      	lsrs	r3, r3, #4
 8002baa:	4298      	cmp	r0, r3
 8002bac:	d301      	bcc.n	8002bb2 <__clzsi2+0x22>
 8002bae:	0900      	lsrs	r0, r0, #4
 8002bb0:	3904      	subs	r1, #4
 8002bb2:	a202      	add	r2, pc, #8	@ (adr r2, 8002bbc <__clzsi2+0x2c>)
 8002bb4:	5c10      	ldrb	r0, [r2, r0]
 8002bb6:	1840      	adds	r0, r0, r1
 8002bb8:	4770      	bx	lr
 8002bba:	46c0      	nop			@ (mov r8, r8)
 8002bbc:	02020304 	.word	0x02020304
 8002bc0:	01010101 	.word	0x01010101
	...

08002bcc <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8002bcc:	b590      	push	{r4, r7, lr}
 8002bce:	b0a5      	sub	sp, #148	@ 0x94
 8002bd0:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8002bd2:	f000 fb9d 	bl	8003310 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8002bd6:	f000 f82f 	bl	8002c38 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8002bda:	f000 f8ff 	bl	8002ddc <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8002bde:	f000 f8cd 	bl	8002d7c <MX_USART2_UART_Init>
  MX_I2C1_Init();
 8002be2:	f000 f88b 	bl	8002cfc <MX_I2C1_Init>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  char buffer[128];
  while (1)
  {
	  float temperature = getTemp();
 8002be6:	f000 f987 	bl	8002ef8 <getTemp>
 8002bea:	1c03      	adds	r3, r0, #0
 8002bec:	2484      	movs	r4, #132	@ 0x84
 8002bee:	193a      	adds	r2, r7, r4
 8002bf0:	6013      	str	r3, [r2, #0]
	  //! to string
	  if (temperature != -1.0f)
 8002bf2:	490f      	ldr	r1, [pc, #60]	@ (8002c30 <main+0x64>)
 8002bf4:	193b      	adds	r3, r7, r4
 8002bf6:	6818      	ldr	r0, [r3, #0]
 8002bf8:	f7fd fc62 	bl	80004c0 <__aeabi_fcmpeq>
 8002bfc:	1e03      	subs	r3, r0, #0
 8002bfe:	d111      	bne.n	8002c24 <main+0x58>
	  {
	      snprintf(buffer, sizeof(buffer), "%.2f\r\n", temperature);
 8002c00:	193b      	adds	r3, r7, r4
 8002c02:	6818      	ldr	r0, [r3, #0]
 8002c04:	f7ff fefa 	bl	80029fc <__aeabi_f2d>
 8002c08:	0002      	movs	r2, r0
 8002c0a:	000b      	movs	r3, r1
 8002c0c:	4909      	ldr	r1, [pc, #36]	@ (8002c34 <main+0x68>)
 8002c0e:	1d38      	adds	r0, r7, #4
 8002c10:	9200      	str	r2, [sp, #0]
 8002c12:	9301      	str	r3, [sp, #4]
 8002c14:	000a      	movs	r2, r1
 8002c16:	2180      	movs	r1, #128	@ 0x80
 8002c18:	f003 fc6e 	bl	80064f8 <sniprintf>
	      sendString(buffer);
 8002c1c:	1d3b      	adds	r3, r7, #4
 8002c1e:	0018      	movs	r0, r3
 8002c20:	f000 f954 	bl	8002ecc <sendString>
	  }
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	  HAL_Delay(1000);
 8002c24:	23fa      	movs	r3, #250	@ 0xfa
 8002c26:	009b      	lsls	r3, r3, #2
 8002c28:	0018      	movs	r0, r3
 8002c2a:	f000 fbd5 	bl	80033d8 <HAL_Delay>
  {
 8002c2e:	e7da      	b.n	8002be6 <main+0x1a>
 8002c30:	bf800000 	.word	0xbf800000
 8002c34:	08009fa8 	.word	0x08009fa8

08002c38 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002c38:	b590      	push	{r4, r7, lr}
 8002c3a:	b095      	sub	sp, #84	@ 0x54
 8002c3c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002c3e:	2420      	movs	r4, #32
 8002c40:	193b      	adds	r3, r7, r4
 8002c42:	0018      	movs	r0, r3
 8002c44:	2330      	movs	r3, #48	@ 0x30
 8002c46:	001a      	movs	r2, r3
 8002c48:	2100      	movs	r1, #0
 8002c4a:	f003 fd99 	bl	8006780 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002c4e:	2310      	movs	r3, #16
 8002c50:	18fb      	adds	r3, r7, r3
 8002c52:	0018      	movs	r0, r3
 8002c54:	2310      	movs	r3, #16
 8002c56:	001a      	movs	r2, r3
 8002c58:	2100      	movs	r1, #0
 8002c5a:	f003 fd91 	bl	8006780 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8002c5e:	003b      	movs	r3, r7
 8002c60:	0018      	movs	r0, r3
 8002c62:	2310      	movs	r3, #16
 8002c64:	001a      	movs	r2, r3
 8002c66:	2100      	movs	r1, #0
 8002c68:	f003 fd8a 	bl	8006780 <memset>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8002c6c:	0021      	movs	r1, r4
 8002c6e:	187b      	adds	r3, r7, r1
 8002c70:	2202      	movs	r2, #2
 8002c72:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002c74:	187b      	adds	r3, r7, r1
 8002c76:	2201      	movs	r2, #1
 8002c78:	60da      	str	r2, [r3, #12]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8002c7a:	187b      	adds	r3, r7, r1
 8002c7c:	2210      	movs	r2, #16
 8002c7e:	611a      	str	r2, [r3, #16]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002c80:	187b      	adds	r3, r7, r1
 8002c82:	2202      	movs	r2, #2
 8002c84:	621a      	str	r2, [r3, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8002c86:	187b      	adds	r3, r7, r1
 8002c88:	2200      	movs	r2, #0
 8002c8a:	625a      	str	r2, [r3, #36]	@ 0x24
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 8002c8c:	187b      	adds	r3, r7, r1
 8002c8e:	22a0      	movs	r2, #160	@ 0xa0
 8002c90:	0392      	lsls	r2, r2, #14
 8002c92:	629a      	str	r2, [r3, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 8002c94:	187b      	adds	r3, r7, r1
 8002c96:	2200      	movs	r2, #0
 8002c98:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002c9a:	187b      	adds	r3, r7, r1
 8002c9c:	0018      	movs	r0, r3
 8002c9e:	f001 fb0b 	bl	80042b8 <HAL_RCC_OscConfig>
 8002ca2:	1e03      	subs	r3, r0, #0
 8002ca4:	d001      	beq.n	8002caa <SystemClock_Config+0x72>
  {
    Error_Handler();
 8002ca6:	f000 f967 	bl	8002f78 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002caa:	2110      	movs	r1, #16
 8002cac:	187b      	adds	r3, r7, r1
 8002cae:	2207      	movs	r2, #7
 8002cb0:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002cb2:	187b      	adds	r3, r7, r1
 8002cb4:	2202      	movs	r2, #2
 8002cb6:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002cb8:	187b      	adds	r3, r7, r1
 8002cba:	2200      	movs	r2, #0
 8002cbc:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8002cbe:	187b      	adds	r3, r7, r1
 8002cc0:	2200      	movs	r2, #0
 8002cc2:	60da      	str	r2, [r3, #12]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8002cc4:	187b      	adds	r3, r7, r1
 8002cc6:	2101      	movs	r1, #1
 8002cc8:	0018      	movs	r0, r3
 8002cca:	f001 fe0f 	bl	80048ec <HAL_RCC_ClockConfig>
 8002cce:	1e03      	subs	r3, r0, #0
 8002cd0:	d001      	beq.n	8002cd6 <SystemClock_Config+0x9e>
  {
    Error_Handler();
 8002cd2:	f000 f951 	bl	8002f78 <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 8002cd6:	003b      	movs	r3, r7
 8002cd8:	2220      	movs	r2, #32
 8002cda:	601a      	str	r2, [r3, #0]
  PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 8002cdc:	003b      	movs	r3, r7
 8002cde:	2200      	movs	r2, #0
 8002ce0:	60da      	str	r2, [r3, #12]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8002ce2:	003b      	movs	r3, r7
 8002ce4:	0018      	movs	r0, r3
 8002ce6:	f001 ff45 	bl	8004b74 <HAL_RCCEx_PeriphCLKConfig>
 8002cea:	1e03      	subs	r3, r0, #0
 8002cec:	d001      	beq.n	8002cf2 <SystemClock_Config+0xba>
  {
    Error_Handler();
 8002cee:	f000 f943 	bl	8002f78 <Error_Handler>
  }
}
 8002cf2:	46c0      	nop			@ (mov r8, r8)
 8002cf4:	46bd      	mov	sp, r7
 8002cf6:	b015      	add	sp, #84	@ 0x54
 8002cf8:	bd90      	pop	{r4, r7, pc}
	...

08002cfc <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8002cfc:	b580      	push	{r7, lr}
 8002cfe:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8002d00:	4b1b      	ldr	r3, [pc, #108]	@ (8002d70 <MX_I2C1_Init+0x74>)
 8002d02:	4a1c      	ldr	r2, [pc, #112]	@ (8002d74 <MX_I2C1_Init+0x78>)
 8002d04:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x00201D2B;
 8002d06:	4b1a      	ldr	r3, [pc, #104]	@ (8002d70 <MX_I2C1_Init+0x74>)
 8002d08:	4a1b      	ldr	r2, [pc, #108]	@ (8002d78 <MX_I2C1_Init+0x7c>)
 8002d0a:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 8002d0c:	4b18      	ldr	r3, [pc, #96]	@ (8002d70 <MX_I2C1_Init+0x74>)
 8002d0e:	2200      	movs	r2, #0
 8002d10:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8002d12:	4b17      	ldr	r3, [pc, #92]	@ (8002d70 <MX_I2C1_Init+0x74>)
 8002d14:	2201      	movs	r2, #1
 8002d16:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8002d18:	4b15      	ldr	r3, [pc, #84]	@ (8002d70 <MX_I2C1_Init+0x74>)
 8002d1a:	2200      	movs	r2, #0
 8002d1c:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 8002d1e:	4b14      	ldr	r3, [pc, #80]	@ (8002d70 <MX_I2C1_Init+0x74>)
 8002d20:	2200      	movs	r2, #0
 8002d22:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8002d24:	4b12      	ldr	r3, [pc, #72]	@ (8002d70 <MX_I2C1_Init+0x74>)
 8002d26:	2200      	movs	r2, #0
 8002d28:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8002d2a:	4b11      	ldr	r3, [pc, #68]	@ (8002d70 <MX_I2C1_Init+0x74>)
 8002d2c:	2200      	movs	r2, #0
 8002d2e:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8002d30:	4b0f      	ldr	r3, [pc, #60]	@ (8002d70 <MX_I2C1_Init+0x74>)
 8002d32:	2200      	movs	r2, #0
 8002d34:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8002d36:	4b0e      	ldr	r3, [pc, #56]	@ (8002d70 <MX_I2C1_Init+0x74>)
 8002d38:	0018      	movs	r0, r3
 8002d3a:	f000 fdb3 	bl	80038a4 <HAL_I2C_Init>
 8002d3e:	1e03      	subs	r3, r0, #0
 8002d40:	d001      	beq.n	8002d46 <MX_I2C1_Init+0x4a>
  {
    Error_Handler();
 8002d42:	f000 f919 	bl	8002f78 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8002d46:	4b0a      	ldr	r3, [pc, #40]	@ (8002d70 <MX_I2C1_Init+0x74>)
 8002d48:	2100      	movs	r1, #0
 8002d4a:	0018      	movs	r0, r3
 8002d4c:	f001 fa1c 	bl	8004188 <HAL_I2CEx_ConfigAnalogFilter>
 8002d50:	1e03      	subs	r3, r0, #0
 8002d52:	d001      	beq.n	8002d58 <MX_I2C1_Init+0x5c>
  {
    Error_Handler();
 8002d54:	f000 f910 	bl	8002f78 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8002d58:	4b05      	ldr	r3, [pc, #20]	@ (8002d70 <MX_I2C1_Init+0x74>)
 8002d5a:	2100      	movs	r1, #0
 8002d5c:	0018      	movs	r0, r3
 8002d5e:	f001 fa5f 	bl	8004220 <HAL_I2CEx_ConfigDigitalFilter>
 8002d62:	1e03      	subs	r3, r0, #0
 8002d64:	d001      	beq.n	8002d6a <MX_I2C1_Init+0x6e>
  {
    Error_Handler();
 8002d66:	f000 f907 	bl	8002f78 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8002d6a:	46c0      	nop			@ (mov r8, r8)
 8002d6c:	46bd      	mov	sp, r7
 8002d6e:	bd80      	pop	{r7, pc}
 8002d70:	200001f0 	.word	0x200001f0
 8002d74:	40005400 	.word	0x40005400
 8002d78:	00201d2b 	.word	0x00201d2b

08002d7c <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8002d7c:	b580      	push	{r7, lr}
 8002d7e:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8002d80:	4b14      	ldr	r3, [pc, #80]	@ (8002dd4 <MX_USART2_UART_Init+0x58>)
 8002d82:	4a15      	ldr	r2, [pc, #84]	@ (8002dd8 <MX_USART2_UART_Init+0x5c>)
 8002d84:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 38400;
 8002d86:	4b13      	ldr	r3, [pc, #76]	@ (8002dd4 <MX_USART2_UART_Init+0x58>)
 8002d88:	2296      	movs	r2, #150	@ 0x96
 8002d8a:	0212      	lsls	r2, r2, #8
 8002d8c:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8002d8e:	4b11      	ldr	r3, [pc, #68]	@ (8002dd4 <MX_USART2_UART_Init+0x58>)
 8002d90:	2200      	movs	r2, #0
 8002d92:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8002d94:	4b0f      	ldr	r3, [pc, #60]	@ (8002dd4 <MX_USART2_UART_Init+0x58>)
 8002d96:	2200      	movs	r2, #0
 8002d98:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8002d9a:	4b0e      	ldr	r3, [pc, #56]	@ (8002dd4 <MX_USART2_UART_Init+0x58>)
 8002d9c:	2200      	movs	r2, #0
 8002d9e:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002da0:	4b0c      	ldr	r3, [pc, #48]	@ (8002dd4 <MX_USART2_UART_Init+0x58>)
 8002da2:	220c      	movs	r2, #12
 8002da4:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002da6:	4b0b      	ldr	r3, [pc, #44]	@ (8002dd4 <MX_USART2_UART_Init+0x58>)
 8002da8:	2200      	movs	r2, #0
 8002daa:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002dac:	4b09      	ldr	r3, [pc, #36]	@ (8002dd4 <MX_USART2_UART_Init+0x58>)
 8002dae:	2200      	movs	r2, #0
 8002db0:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8002db2:	4b08      	ldr	r3, [pc, #32]	@ (8002dd4 <MX_USART2_UART_Init+0x58>)
 8002db4:	2200      	movs	r2, #0
 8002db6:	621a      	str	r2, [r3, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8002db8:	4b06      	ldr	r3, [pc, #24]	@ (8002dd4 <MX_USART2_UART_Init+0x58>)
 8002dba:	2200      	movs	r2, #0
 8002dbc:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8002dbe:	4b05      	ldr	r3, [pc, #20]	@ (8002dd4 <MX_USART2_UART_Init+0x58>)
 8002dc0:	0018      	movs	r0, r3
 8002dc2:	f001 ffa5 	bl	8004d10 <HAL_UART_Init>
 8002dc6:	1e03      	subs	r3, r0, #0
 8002dc8:	d001      	beq.n	8002dce <MX_USART2_UART_Init+0x52>
  {
    Error_Handler();
 8002dca:	f000 f8d5 	bl	8002f78 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8002dce:	46c0      	nop			@ (mov r8, r8)
 8002dd0:	46bd      	mov	sp, r7
 8002dd2:	bd80      	pop	{r7, pc}
 8002dd4:	20000244 	.word	0x20000244
 8002dd8:	40004400 	.word	0x40004400

08002ddc <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002ddc:	b590      	push	{r4, r7, lr}
 8002dde:	b08b      	sub	sp, #44	@ 0x2c
 8002de0:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002de2:	2414      	movs	r4, #20
 8002de4:	193b      	adds	r3, r7, r4
 8002de6:	0018      	movs	r0, r3
 8002de8:	2314      	movs	r3, #20
 8002dea:	001a      	movs	r2, r3
 8002dec:	2100      	movs	r1, #0
 8002dee:	f003 fcc7 	bl	8006780 <memset>
  /* USER CODE BEGIN MX_GPIO_Init_1 */

  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002df2:	4b34      	ldr	r3, [pc, #208]	@ (8002ec4 <MX_GPIO_Init+0xe8>)
 8002df4:	695a      	ldr	r2, [r3, #20]
 8002df6:	4b33      	ldr	r3, [pc, #204]	@ (8002ec4 <MX_GPIO_Init+0xe8>)
 8002df8:	2180      	movs	r1, #128	@ 0x80
 8002dfa:	0309      	lsls	r1, r1, #12
 8002dfc:	430a      	orrs	r2, r1
 8002dfe:	615a      	str	r2, [r3, #20]
 8002e00:	4b30      	ldr	r3, [pc, #192]	@ (8002ec4 <MX_GPIO_Init+0xe8>)
 8002e02:	695a      	ldr	r2, [r3, #20]
 8002e04:	2380      	movs	r3, #128	@ 0x80
 8002e06:	031b      	lsls	r3, r3, #12
 8002e08:	4013      	ands	r3, r2
 8002e0a:	613b      	str	r3, [r7, #16]
 8002e0c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8002e0e:	4b2d      	ldr	r3, [pc, #180]	@ (8002ec4 <MX_GPIO_Init+0xe8>)
 8002e10:	695a      	ldr	r2, [r3, #20]
 8002e12:	4b2c      	ldr	r3, [pc, #176]	@ (8002ec4 <MX_GPIO_Init+0xe8>)
 8002e14:	2180      	movs	r1, #128	@ 0x80
 8002e16:	03c9      	lsls	r1, r1, #15
 8002e18:	430a      	orrs	r2, r1
 8002e1a:	615a      	str	r2, [r3, #20]
 8002e1c:	4b29      	ldr	r3, [pc, #164]	@ (8002ec4 <MX_GPIO_Init+0xe8>)
 8002e1e:	695a      	ldr	r2, [r3, #20]
 8002e20:	2380      	movs	r3, #128	@ 0x80
 8002e22:	03db      	lsls	r3, r3, #15
 8002e24:	4013      	ands	r3, r2
 8002e26:	60fb      	str	r3, [r7, #12]
 8002e28:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002e2a:	4b26      	ldr	r3, [pc, #152]	@ (8002ec4 <MX_GPIO_Init+0xe8>)
 8002e2c:	695a      	ldr	r2, [r3, #20]
 8002e2e:	4b25      	ldr	r3, [pc, #148]	@ (8002ec4 <MX_GPIO_Init+0xe8>)
 8002e30:	2180      	movs	r1, #128	@ 0x80
 8002e32:	0289      	lsls	r1, r1, #10
 8002e34:	430a      	orrs	r2, r1
 8002e36:	615a      	str	r2, [r3, #20]
 8002e38:	4b22      	ldr	r3, [pc, #136]	@ (8002ec4 <MX_GPIO_Init+0xe8>)
 8002e3a:	695a      	ldr	r2, [r3, #20]
 8002e3c:	2380      	movs	r3, #128	@ 0x80
 8002e3e:	029b      	lsls	r3, r3, #10
 8002e40:	4013      	ands	r3, r2
 8002e42:	60bb      	str	r3, [r7, #8]
 8002e44:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002e46:	4b1f      	ldr	r3, [pc, #124]	@ (8002ec4 <MX_GPIO_Init+0xe8>)
 8002e48:	695a      	ldr	r2, [r3, #20]
 8002e4a:	4b1e      	ldr	r3, [pc, #120]	@ (8002ec4 <MX_GPIO_Init+0xe8>)
 8002e4c:	2180      	movs	r1, #128	@ 0x80
 8002e4e:	02c9      	lsls	r1, r1, #11
 8002e50:	430a      	orrs	r2, r1
 8002e52:	615a      	str	r2, [r3, #20]
 8002e54:	4b1b      	ldr	r3, [pc, #108]	@ (8002ec4 <MX_GPIO_Init+0xe8>)
 8002e56:	695a      	ldr	r2, [r3, #20]
 8002e58:	2380      	movs	r3, #128	@ 0x80
 8002e5a:	02db      	lsls	r3, r3, #11
 8002e5c:	4013      	ands	r3, r2
 8002e5e:	607b      	str	r3, [r7, #4]
 8002e60:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 8002e62:	2390      	movs	r3, #144	@ 0x90
 8002e64:	05db      	lsls	r3, r3, #23
 8002e66:	2200      	movs	r2, #0
 8002e68:	2120      	movs	r1, #32
 8002e6a:	0018      	movs	r0, r3
 8002e6c:	f000 fcfc 	bl	8003868 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8002e70:	193b      	adds	r3, r7, r4
 8002e72:	2280      	movs	r2, #128	@ 0x80
 8002e74:	0192      	lsls	r2, r2, #6
 8002e76:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8002e78:	193b      	adds	r3, r7, r4
 8002e7a:	2284      	movs	r2, #132	@ 0x84
 8002e7c:	0392      	lsls	r2, r2, #14
 8002e7e:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002e80:	193b      	adds	r3, r7, r4
 8002e82:	2200      	movs	r2, #0
 8002e84:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8002e86:	193b      	adds	r3, r7, r4
 8002e88:	4a0f      	ldr	r2, [pc, #60]	@ (8002ec8 <MX_GPIO_Init+0xec>)
 8002e8a:	0019      	movs	r1, r3
 8002e8c:	0010      	movs	r0, r2
 8002e8e:	f000 fb7b 	bl	8003588 <HAL_GPIO_Init>

  /*Configure GPIO pin : LD2_Pin */
  GPIO_InitStruct.Pin = LD2_Pin;
 8002e92:	0021      	movs	r1, r4
 8002e94:	187b      	adds	r3, r7, r1
 8002e96:	2220      	movs	r2, #32
 8002e98:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002e9a:	187b      	adds	r3, r7, r1
 8002e9c:	2201      	movs	r2, #1
 8002e9e:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002ea0:	187b      	adds	r3, r7, r1
 8002ea2:	2200      	movs	r2, #0
 8002ea4:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002ea6:	187b      	adds	r3, r7, r1
 8002ea8:	2200      	movs	r2, #0
 8002eaa:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 8002eac:	187a      	adds	r2, r7, r1
 8002eae:	2390      	movs	r3, #144	@ 0x90
 8002eb0:	05db      	lsls	r3, r3, #23
 8002eb2:	0011      	movs	r1, r2
 8002eb4:	0018      	movs	r0, r3
 8002eb6:	f000 fb67 	bl	8003588 <HAL_GPIO_Init>

  /* USER CODE BEGIN MX_GPIO_Init_2 */

  /* USER CODE END MX_GPIO_Init_2 */
}
 8002eba:	46c0      	nop			@ (mov r8, r8)
 8002ebc:	46bd      	mov	sp, r7
 8002ebe:	b00b      	add	sp, #44	@ 0x2c
 8002ec0:	bd90      	pop	{r4, r7, pc}
 8002ec2:	46c0      	nop			@ (mov r8, r8)
 8002ec4:	40021000 	.word	0x40021000
 8002ec8:	48000800 	.word	0x48000800

08002ecc <sendString>:

/* USER CODE BEGIN 4 */
static void sendString(char *str)
{
 8002ecc:	b580      	push	{r7, lr}
 8002ece:	b082      	sub	sp, #8
 8002ed0:	af00      	add	r7, sp, #0
 8002ed2:	6078      	str	r0, [r7, #4]
	HAL_UART_Transmit(&huart2, (uint8_t*)str, strlen(str), HAL_MAX_DELAY);
 8002ed4:	687b      	ldr	r3, [r7, #4]
 8002ed6:	0018      	movs	r0, r3
 8002ed8:	f7fd f916 	bl	8000108 <strlen>
 8002edc:	0003      	movs	r3, r0
 8002ede:	b29a      	uxth	r2, r3
 8002ee0:	2301      	movs	r3, #1
 8002ee2:	425b      	negs	r3, r3
 8002ee4:	6879      	ldr	r1, [r7, #4]
 8002ee6:	4803      	ldr	r0, [pc, #12]	@ (8002ef4 <sendString+0x28>)
 8002ee8:	f001 ff66 	bl	8004db8 <HAL_UART_Transmit>
}
 8002eec:	46c0      	nop			@ (mov r8, r8)
 8002eee:	46bd      	mov	sp, r7
 8002ef0:	b002      	add	sp, #8
 8002ef2:	bd80      	pop	{r7, pc}
 8002ef4:	20000244 	.word	0x20000244

08002ef8 <getTemp>:

static float getTemp(void){
 8002ef8:	b580      	push	{r7, lr}
 8002efa:	b088      	sub	sp, #32
 8002efc:	af04      	add	r7, sp, #16
	//! get temperature from I2C
	uint8_t tempData[2];    // Buffer
	int16_t rawTemp;        //
	float temperature;      // Temperature in Celsius.
	if (HAL_I2C_Mem_Read(&hi2c1, TMP102_ADDR, 0x00, I2C_MEMADD_SIZE_8BIT, tempData, 2, HAL_MAX_DELAY) != HAL_OK)
 8002efe:	481b      	ldr	r0, [pc, #108]	@ (8002f6c <getTemp+0x74>)
 8002f00:	2301      	movs	r3, #1
 8002f02:	425b      	negs	r3, r3
 8002f04:	9302      	str	r3, [sp, #8]
 8002f06:	2302      	movs	r3, #2
 8002f08:	9301      	str	r3, [sp, #4]
 8002f0a:	1d3b      	adds	r3, r7, #4
 8002f0c:	9300      	str	r3, [sp, #0]
 8002f0e:	2301      	movs	r3, #1
 8002f10:	2200      	movs	r2, #0
 8002f12:	2190      	movs	r1, #144	@ 0x90
 8002f14:	f000 fd6c 	bl	80039f0 <HAL_I2C_Mem_Read>
 8002f18:	1e03      	subs	r3, r0, #0
 8002f1a:	d005      	beq.n	8002f28 <getTemp+0x30>
	    {
	        printf("Reading error I2C!\n");
 8002f1c:	4b14      	ldr	r3, [pc, #80]	@ (8002f70 <getTemp+0x78>)
 8002f1e:	0018      	movs	r0, r3
 8002f20:	f003 fae0 	bl	80064e4 <puts>
	        return -1.0f;
 8002f24:	4b13      	ldr	r3, [pc, #76]	@ (8002f74 <getTemp+0x7c>)
 8002f26:	e01c      	b.n	8002f62 <getTemp+0x6a>
	    }
	    rawTemp = (int16_t)((tempData[0] << 4) | (tempData[1] >> 4));
 8002f28:	1d3b      	adds	r3, r7, #4
 8002f2a:	781b      	ldrb	r3, [r3, #0]
 8002f2c:	b21b      	sxth	r3, r3
 8002f2e:	011b      	lsls	r3, r3, #4
 8002f30:	b219      	sxth	r1, r3
 8002f32:	1d3b      	adds	r3, r7, #4
 8002f34:	785b      	ldrb	r3, [r3, #1]
 8002f36:	091b      	lsrs	r3, r3, #4
 8002f38:	b2db      	uxtb	r3, r3
 8002f3a:	b21a      	sxth	r2, r3
 8002f3c:	200e      	movs	r0, #14
 8002f3e:	183b      	adds	r3, r7, r0
 8002f40:	430a      	orrs	r2, r1
 8002f42:	801a      	strh	r2, [r3, #0]
	    temperature = rawTemp * 0.0625f;  // TMP102 0.0625°C.
 8002f44:	183b      	adds	r3, r7, r0
 8002f46:	2200      	movs	r2, #0
 8002f48:	5e9b      	ldrsh	r3, [r3, r2]
 8002f4a:	0018      	movs	r0, r3
 8002f4c:	f7fd fd66 	bl	8000a1c <__aeabi_i2f>
 8002f50:	1c03      	adds	r3, r0, #0
 8002f52:	21f6      	movs	r1, #246	@ 0xf6
 8002f54:	0589      	lsls	r1, r1, #22
 8002f56:	1c18      	adds	r0, r3, #0
 8002f58:	f7fd fc06 	bl	8000768 <__aeabi_fmul>
 8002f5c:	1c03      	adds	r3, r0, #0
 8002f5e:	60bb      	str	r3, [r7, #8]
	    return temperature;
 8002f60:	68bb      	ldr	r3, [r7, #8]
}
 8002f62:	1c18      	adds	r0, r3, #0
 8002f64:	46bd      	mov	sp, r7
 8002f66:	b004      	add	sp, #16
 8002f68:	bd80      	pop	{r7, pc}
 8002f6a:	46c0      	nop			@ (mov r8, r8)
 8002f6c:	200001f0 	.word	0x200001f0
 8002f70:	08009fb0 	.word	0x08009fb0
 8002f74:	bf800000 	.word	0xbf800000

08002f78 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002f78:	b580      	push	{r7, lr}
 8002f7a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002f7c:	b672      	cpsid	i
}
 8002f7e:	46c0      	nop			@ (mov r8, r8)
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002f80:	46c0      	nop			@ (mov r8, r8)
 8002f82:	e7fd      	b.n	8002f80 <Error_Handler+0x8>

08002f84 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002f84:	b580      	push	{r7, lr}
 8002f86:	b082      	sub	sp, #8
 8002f88:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002f8a:	4b0f      	ldr	r3, [pc, #60]	@ (8002fc8 <HAL_MspInit+0x44>)
 8002f8c:	699a      	ldr	r2, [r3, #24]
 8002f8e:	4b0e      	ldr	r3, [pc, #56]	@ (8002fc8 <HAL_MspInit+0x44>)
 8002f90:	2101      	movs	r1, #1
 8002f92:	430a      	orrs	r2, r1
 8002f94:	619a      	str	r2, [r3, #24]
 8002f96:	4b0c      	ldr	r3, [pc, #48]	@ (8002fc8 <HAL_MspInit+0x44>)
 8002f98:	699b      	ldr	r3, [r3, #24]
 8002f9a:	2201      	movs	r2, #1
 8002f9c:	4013      	ands	r3, r2
 8002f9e:	607b      	str	r3, [r7, #4]
 8002fa0:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002fa2:	4b09      	ldr	r3, [pc, #36]	@ (8002fc8 <HAL_MspInit+0x44>)
 8002fa4:	69da      	ldr	r2, [r3, #28]
 8002fa6:	4b08      	ldr	r3, [pc, #32]	@ (8002fc8 <HAL_MspInit+0x44>)
 8002fa8:	2180      	movs	r1, #128	@ 0x80
 8002faa:	0549      	lsls	r1, r1, #21
 8002fac:	430a      	orrs	r2, r1
 8002fae:	61da      	str	r2, [r3, #28]
 8002fb0:	4b05      	ldr	r3, [pc, #20]	@ (8002fc8 <HAL_MspInit+0x44>)
 8002fb2:	69da      	ldr	r2, [r3, #28]
 8002fb4:	2380      	movs	r3, #128	@ 0x80
 8002fb6:	055b      	lsls	r3, r3, #21
 8002fb8:	4013      	ands	r3, r2
 8002fba:	603b      	str	r3, [r7, #0]
 8002fbc:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002fbe:	46c0      	nop			@ (mov r8, r8)
 8002fc0:	46bd      	mov	sp, r7
 8002fc2:	b002      	add	sp, #8
 8002fc4:	bd80      	pop	{r7, pc}
 8002fc6:	46c0      	nop			@ (mov r8, r8)
 8002fc8:	40021000 	.word	0x40021000

08002fcc <HAL_I2C_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002fcc:	b590      	push	{r4, r7, lr}
 8002fce:	b08b      	sub	sp, #44	@ 0x2c
 8002fd0:	af00      	add	r7, sp, #0
 8002fd2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002fd4:	2414      	movs	r4, #20
 8002fd6:	193b      	adds	r3, r7, r4
 8002fd8:	0018      	movs	r0, r3
 8002fda:	2314      	movs	r3, #20
 8002fdc:	001a      	movs	r2, r3
 8002fde:	2100      	movs	r1, #0
 8002fe0:	f003 fbce 	bl	8006780 <memset>
  if(hi2c->Instance==I2C1)
 8002fe4:	687b      	ldr	r3, [r7, #4]
 8002fe6:	681b      	ldr	r3, [r3, #0]
 8002fe8:	4a1c      	ldr	r2, [pc, #112]	@ (800305c <HAL_I2C_MspInit+0x90>)
 8002fea:	4293      	cmp	r3, r2
 8002fec:	d131      	bne.n	8003052 <HAL_I2C_MspInit+0x86>
  {
    /* USER CODE BEGIN I2C1_MspInit 0 */

    /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002fee:	4b1c      	ldr	r3, [pc, #112]	@ (8003060 <HAL_I2C_MspInit+0x94>)
 8002ff0:	695a      	ldr	r2, [r3, #20]
 8002ff2:	4b1b      	ldr	r3, [pc, #108]	@ (8003060 <HAL_I2C_MspInit+0x94>)
 8002ff4:	2180      	movs	r1, #128	@ 0x80
 8002ff6:	02c9      	lsls	r1, r1, #11
 8002ff8:	430a      	orrs	r2, r1
 8002ffa:	615a      	str	r2, [r3, #20]
 8002ffc:	4b18      	ldr	r3, [pc, #96]	@ (8003060 <HAL_I2C_MspInit+0x94>)
 8002ffe:	695a      	ldr	r2, [r3, #20]
 8003000:	2380      	movs	r3, #128	@ 0x80
 8003002:	02db      	lsls	r3, r3, #11
 8003004:	4013      	ands	r3, r2
 8003006:	613b      	str	r3, [r7, #16]
 8003008:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800300a:	0021      	movs	r1, r4
 800300c:	187b      	adds	r3, r7, r1
 800300e:	22c0      	movs	r2, #192	@ 0xc0
 8003010:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8003012:	187b      	adds	r3, r7, r1
 8003014:	2212      	movs	r2, #18
 8003016:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003018:	187b      	adds	r3, r7, r1
 800301a:	2200      	movs	r2, #0
 800301c:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800301e:	187b      	adds	r3, r7, r1
 8003020:	2203      	movs	r2, #3
 8003022:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_I2C1;
 8003024:	187b      	adds	r3, r7, r1
 8003026:	2201      	movs	r2, #1
 8003028:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800302a:	187b      	adds	r3, r7, r1
 800302c:	4a0d      	ldr	r2, [pc, #52]	@ (8003064 <HAL_I2C_MspInit+0x98>)
 800302e:	0019      	movs	r1, r3
 8003030:	0010      	movs	r0, r2
 8003032:	f000 faa9 	bl	8003588 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8003036:	4b0a      	ldr	r3, [pc, #40]	@ (8003060 <HAL_I2C_MspInit+0x94>)
 8003038:	69da      	ldr	r2, [r3, #28]
 800303a:	4b09      	ldr	r3, [pc, #36]	@ (8003060 <HAL_I2C_MspInit+0x94>)
 800303c:	2180      	movs	r1, #128	@ 0x80
 800303e:	0389      	lsls	r1, r1, #14
 8003040:	430a      	orrs	r2, r1
 8003042:	61da      	str	r2, [r3, #28]
 8003044:	4b06      	ldr	r3, [pc, #24]	@ (8003060 <HAL_I2C_MspInit+0x94>)
 8003046:	69da      	ldr	r2, [r3, #28]
 8003048:	2380      	movs	r3, #128	@ 0x80
 800304a:	039b      	lsls	r3, r3, #14
 800304c:	4013      	ands	r3, r2
 800304e:	60fb      	str	r3, [r7, #12]
 8003050:	68fb      	ldr	r3, [r7, #12]

    /* USER CODE END I2C1_MspInit 1 */

  }

}
 8003052:	46c0      	nop			@ (mov r8, r8)
 8003054:	46bd      	mov	sp, r7
 8003056:	b00b      	add	sp, #44	@ 0x2c
 8003058:	bd90      	pop	{r4, r7, pc}
 800305a:	46c0      	nop			@ (mov r8, r8)
 800305c:	40005400 	.word	0x40005400
 8003060:	40021000 	.word	0x40021000
 8003064:	48000400 	.word	0x48000400

08003068 <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8003068:	b590      	push	{r4, r7, lr}
 800306a:	b08b      	sub	sp, #44	@ 0x2c
 800306c:	af00      	add	r7, sp, #0
 800306e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003070:	2414      	movs	r4, #20
 8003072:	193b      	adds	r3, r7, r4
 8003074:	0018      	movs	r0, r3
 8003076:	2314      	movs	r3, #20
 8003078:	001a      	movs	r2, r3
 800307a:	2100      	movs	r1, #0
 800307c:	f003 fb80 	bl	8006780 <memset>
  if(huart->Instance==USART2)
 8003080:	687b      	ldr	r3, [r7, #4]
 8003082:	681b      	ldr	r3, [r3, #0]
 8003084:	4a1c      	ldr	r2, [pc, #112]	@ (80030f8 <HAL_UART_MspInit+0x90>)
 8003086:	4293      	cmp	r3, r2
 8003088:	d132      	bne.n	80030f0 <HAL_UART_MspInit+0x88>
  {
    /* USER CODE BEGIN USART2_MspInit 0 */

    /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 800308a:	4b1c      	ldr	r3, [pc, #112]	@ (80030fc <HAL_UART_MspInit+0x94>)
 800308c:	69da      	ldr	r2, [r3, #28]
 800308e:	4b1b      	ldr	r3, [pc, #108]	@ (80030fc <HAL_UART_MspInit+0x94>)
 8003090:	2180      	movs	r1, #128	@ 0x80
 8003092:	0289      	lsls	r1, r1, #10
 8003094:	430a      	orrs	r2, r1
 8003096:	61da      	str	r2, [r3, #28]
 8003098:	4b18      	ldr	r3, [pc, #96]	@ (80030fc <HAL_UART_MspInit+0x94>)
 800309a:	69da      	ldr	r2, [r3, #28]
 800309c:	2380      	movs	r3, #128	@ 0x80
 800309e:	029b      	lsls	r3, r3, #10
 80030a0:	4013      	ands	r3, r2
 80030a2:	613b      	str	r3, [r7, #16]
 80030a4:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80030a6:	4b15      	ldr	r3, [pc, #84]	@ (80030fc <HAL_UART_MspInit+0x94>)
 80030a8:	695a      	ldr	r2, [r3, #20]
 80030aa:	4b14      	ldr	r3, [pc, #80]	@ (80030fc <HAL_UART_MspInit+0x94>)
 80030ac:	2180      	movs	r1, #128	@ 0x80
 80030ae:	0289      	lsls	r1, r1, #10
 80030b0:	430a      	orrs	r2, r1
 80030b2:	615a      	str	r2, [r3, #20]
 80030b4:	4b11      	ldr	r3, [pc, #68]	@ (80030fc <HAL_UART_MspInit+0x94>)
 80030b6:	695a      	ldr	r2, [r3, #20]
 80030b8:	2380      	movs	r3, #128	@ 0x80
 80030ba:	029b      	lsls	r3, r3, #10
 80030bc:	4013      	ands	r3, r2
 80030be:	60fb      	str	r3, [r7, #12]
 80030c0:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 80030c2:	0021      	movs	r1, r4
 80030c4:	187b      	adds	r3, r7, r1
 80030c6:	220c      	movs	r2, #12
 80030c8:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80030ca:	187b      	adds	r3, r7, r1
 80030cc:	2202      	movs	r2, #2
 80030ce:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80030d0:	187b      	adds	r3, r7, r1
 80030d2:	2200      	movs	r2, #0
 80030d4:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80030d6:	187b      	adds	r3, r7, r1
 80030d8:	2200      	movs	r2, #0
 80030da:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
 80030dc:	187b      	adds	r3, r7, r1
 80030de:	2201      	movs	r2, #1
 80030e0:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80030e2:	187a      	adds	r2, r7, r1
 80030e4:	2390      	movs	r3, #144	@ 0x90
 80030e6:	05db      	lsls	r3, r3, #23
 80030e8:	0011      	movs	r1, r2
 80030ea:	0018      	movs	r0, r3
 80030ec:	f000 fa4c 	bl	8003588 <HAL_GPIO_Init>

    /* USER CODE END USART2_MspInit 1 */

  }

}
 80030f0:	46c0      	nop			@ (mov r8, r8)
 80030f2:	46bd      	mov	sp, r7
 80030f4:	b00b      	add	sp, #44	@ 0x2c
 80030f6:	bd90      	pop	{r4, r7, pc}
 80030f8:	40004400 	.word	0x40004400
 80030fc:	40021000 	.word	0x40021000

08003100 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8003100:	b580      	push	{r7, lr}
 8003102:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8003104:	46c0      	nop			@ (mov r8, r8)
 8003106:	e7fd      	b.n	8003104 <NMI_Handler+0x4>

08003108 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8003108:	b580      	push	{r7, lr}
 800310a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800310c:	46c0      	nop			@ (mov r8, r8)
 800310e:	e7fd      	b.n	800310c <HardFault_Handler+0x4>

08003110 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8003110:	b580      	push	{r7, lr}
 8003112:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8003114:	46c0      	nop			@ (mov r8, r8)
 8003116:	46bd      	mov	sp, r7
 8003118:	bd80      	pop	{r7, pc}

0800311a <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800311a:	b580      	push	{r7, lr}
 800311c:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800311e:	46c0      	nop			@ (mov r8, r8)
 8003120:	46bd      	mov	sp, r7
 8003122:	bd80      	pop	{r7, pc}

08003124 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8003124:	b580      	push	{r7, lr}
 8003126:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8003128:	f000 f93a 	bl	80033a0 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800312c:	46c0      	nop			@ (mov r8, r8)
 800312e:	46bd      	mov	sp, r7
 8003130:	bd80      	pop	{r7, pc}

08003132 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8003132:	b580      	push	{r7, lr}
 8003134:	af00      	add	r7, sp, #0
  return 1;
 8003136:	2301      	movs	r3, #1
}
 8003138:	0018      	movs	r0, r3
 800313a:	46bd      	mov	sp, r7
 800313c:	bd80      	pop	{r7, pc}

0800313e <_kill>:

int _kill(int pid, int sig)
{
 800313e:	b580      	push	{r7, lr}
 8003140:	b082      	sub	sp, #8
 8003142:	af00      	add	r7, sp, #0
 8003144:	6078      	str	r0, [r7, #4]
 8003146:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8003148:	f003 fb74 	bl	8006834 <__errno>
 800314c:	0003      	movs	r3, r0
 800314e:	2216      	movs	r2, #22
 8003150:	601a      	str	r2, [r3, #0]
  return -1;
 8003152:	2301      	movs	r3, #1
 8003154:	425b      	negs	r3, r3
}
 8003156:	0018      	movs	r0, r3
 8003158:	46bd      	mov	sp, r7
 800315a:	b002      	add	sp, #8
 800315c:	bd80      	pop	{r7, pc}

0800315e <_exit>:

void _exit (int status)
{
 800315e:	b580      	push	{r7, lr}
 8003160:	b082      	sub	sp, #8
 8003162:	af00      	add	r7, sp, #0
 8003164:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8003166:	2301      	movs	r3, #1
 8003168:	425a      	negs	r2, r3
 800316a:	687b      	ldr	r3, [r7, #4]
 800316c:	0011      	movs	r1, r2
 800316e:	0018      	movs	r0, r3
 8003170:	f7ff ffe5 	bl	800313e <_kill>
  while (1) {}    /* Make sure we hang here */
 8003174:	46c0      	nop			@ (mov r8, r8)
 8003176:	e7fd      	b.n	8003174 <_exit+0x16>

08003178 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8003178:	b580      	push	{r7, lr}
 800317a:	b086      	sub	sp, #24
 800317c:	af00      	add	r7, sp, #0
 800317e:	60f8      	str	r0, [r7, #12]
 8003180:	60b9      	str	r1, [r7, #8]
 8003182:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003184:	2300      	movs	r3, #0
 8003186:	617b      	str	r3, [r7, #20]
 8003188:	e00a      	b.n	80031a0 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800318a:	e000      	b.n	800318e <_read+0x16>
 800318c:	bf00      	nop
 800318e:	0001      	movs	r1, r0
 8003190:	68bb      	ldr	r3, [r7, #8]
 8003192:	1c5a      	adds	r2, r3, #1
 8003194:	60ba      	str	r2, [r7, #8]
 8003196:	b2ca      	uxtb	r2, r1
 8003198:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800319a:	697b      	ldr	r3, [r7, #20]
 800319c:	3301      	adds	r3, #1
 800319e:	617b      	str	r3, [r7, #20]
 80031a0:	697a      	ldr	r2, [r7, #20]
 80031a2:	687b      	ldr	r3, [r7, #4]
 80031a4:	429a      	cmp	r2, r3
 80031a6:	dbf0      	blt.n	800318a <_read+0x12>
  }

  return len;
 80031a8:	687b      	ldr	r3, [r7, #4]
}
 80031aa:	0018      	movs	r0, r3
 80031ac:	46bd      	mov	sp, r7
 80031ae:	b006      	add	sp, #24
 80031b0:	bd80      	pop	{r7, pc}

080031b2 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80031b2:	b580      	push	{r7, lr}
 80031b4:	b086      	sub	sp, #24
 80031b6:	af00      	add	r7, sp, #0
 80031b8:	60f8      	str	r0, [r7, #12]
 80031ba:	60b9      	str	r1, [r7, #8]
 80031bc:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80031be:	2300      	movs	r3, #0
 80031c0:	617b      	str	r3, [r7, #20]
 80031c2:	e009      	b.n	80031d8 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80031c4:	68bb      	ldr	r3, [r7, #8]
 80031c6:	1c5a      	adds	r2, r3, #1
 80031c8:	60ba      	str	r2, [r7, #8]
 80031ca:	781b      	ldrb	r3, [r3, #0]
 80031cc:	0018      	movs	r0, r3
 80031ce:	e000      	b.n	80031d2 <_write+0x20>
 80031d0:	bf00      	nop
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80031d2:	697b      	ldr	r3, [r7, #20]
 80031d4:	3301      	adds	r3, #1
 80031d6:	617b      	str	r3, [r7, #20]
 80031d8:	697a      	ldr	r2, [r7, #20]
 80031da:	687b      	ldr	r3, [r7, #4]
 80031dc:	429a      	cmp	r2, r3
 80031de:	dbf1      	blt.n	80031c4 <_write+0x12>
  }
  return len;
 80031e0:	687b      	ldr	r3, [r7, #4]
}
 80031e2:	0018      	movs	r0, r3
 80031e4:	46bd      	mov	sp, r7
 80031e6:	b006      	add	sp, #24
 80031e8:	bd80      	pop	{r7, pc}

080031ea <_close>:

int _close(int file)
{
 80031ea:	b580      	push	{r7, lr}
 80031ec:	b082      	sub	sp, #8
 80031ee:	af00      	add	r7, sp, #0
 80031f0:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80031f2:	2301      	movs	r3, #1
 80031f4:	425b      	negs	r3, r3
}
 80031f6:	0018      	movs	r0, r3
 80031f8:	46bd      	mov	sp, r7
 80031fa:	b002      	add	sp, #8
 80031fc:	bd80      	pop	{r7, pc}

080031fe <_fstat>:


int _fstat(int file, struct stat *st)
{
 80031fe:	b580      	push	{r7, lr}
 8003200:	b082      	sub	sp, #8
 8003202:	af00      	add	r7, sp, #0
 8003204:	6078      	str	r0, [r7, #4]
 8003206:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8003208:	683b      	ldr	r3, [r7, #0]
 800320a:	2280      	movs	r2, #128	@ 0x80
 800320c:	0192      	lsls	r2, r2, #6
 800320e:	605a      	str	r2, [r3, #4]
  return 0;
 8003210:	2300      	movs	r3, #0
}
 8003212:	0018      	movs	r0, r3
 8003214:	46bd      	mov	sp, r7
 8003216:	b002      	add	sp, #8
 8003218:	bd80      	pop	{r7, pc}

0800321a <_isatty>:

int _isatty(int file)
{
 800321a:	b580      	push	{r7, lr}
 800321c:	b082      	sub	sp, #8
 800321e:	af00      	add	r7, sp, #0
 8003220:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8003222:	2301      	movs	r3, #1
}
 8003224:	0018      	movs	r0, r3
 8003226:	46bd      	mov	sp, r7
 8003228:	b002      	add	sp, #8
 800322a:	bd80      	pop	{r7, pc}

0800322c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800322c:	b580      	push	{r7, lr}
 800322e:	b084      	sub	sp, #16
 8003230:	af00      	add	r7, sp, #0
 8003232:	60f8      	str	r0, [r7, #12]
 8003234:	60b9      	str	r1, [r7, #8]
 8003236:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8003238:	2300      	movs	r3, #0
}
 800323a:	0018      	movs	r0, r3
 800323c:	46bd      	mov	sp, r7
 800323e:	b004      	add	sp, #16
 8003240:	bd80      	pop	{r7, pc}
	...

08003244 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8003244:	b580      	push	{r7, lr}
 8003246:	b086      	sub	sp, #24
 8003248:	af00      	add	r7, sp, #0
 800324a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800324c:	4a14      	ldr	r2, [pc, #80]	@ (80032a0 <_sbrk+0x5c>)
 800324e:	4b15      	ldr	r3, [pc, #84]	@ (80032a4 <_sbrk+0x60>)
 8003250:	1ad3      	subs	r3, r2, r3
 8003252:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8003254:	697b      	ldr	r3, [r7, #20]
 8003256:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8003258:	4b13      	ldr	r3, [pc, #76]	@ (80032a8 <_sbrk+0x64>)
 800325a:	681b      	ldr	r3, [r3, #0]
 800325c:	2b00      	cmp	r3, #0
 800325e:	d102      	bne.n	8003266 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8003260:	4b11      	ldr	r3, [pc, #68]	@ (80032a8 <_sbrk+0x64>)
 8003262:	4a12      	ldr	r2, [pc, #72]	@ (80032ac <_sbrk+0x68>)
 8003264:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8003266:	4b10      	ldr	r3, [pc, #64]	@ (80032a8 <_sbrk+0x64>)
 8003268:	681a      	ldr	r2, [r3, #0]
 800326a:	687b      	ldr	r3, [r7, #4]
 800326c:	18d3      	adds	r3, r2, r3
 800326e:	693a      	ldr	r2, [r7, #16]
 8003270:	429a      	cmp	r2, r3
 8003272:	d207      	bcs.n	8003284 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8003274:	f003 fade 	bl	8006834 <__errno>
 8003278:	0003      	movs	r3, r0
 800327a:	220c      	movs	r2, #12
 800327c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800327e:	2301      	movs	r3, #1
 8003280:	425b      	negs	r3, r3
 8003282:	e009      	b.n	8003298 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8003284:	4b08      	ldr	r3, [pc, #32]	@ (80032a8 <_sbrk+0x64>)
 8003286:	681b      	ldr	r3, [r3, #0]
 8003288:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800328a:	4b07      	ldr	r3, [pc, #28]	@ (80032a8 <_sbrk+0x64>)
 800328c:	681a      	ldr	r2, [r3, #0]
 800328e:	687b      	ldr	r3, [r7, #4]
 8003290:	18d2      	adds	r2, r2, r3
 8003292:	4b05      	ldr	r3, [pc, #20]	@ (80032a8 <_sbrk+0x64>)
 8003294:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 8003296:	68fb      	ldr	r3, [r7, #12]
}
 8003298:	0018      	movs	r0, r3
 800329a:	46bd      	mov	sp, r7
 800329c:	b006      	add	sp, #24
 800329e:	bd80      	pop	{r7, pc}
 80032a0:	20002000 	.word	0x20002000
 80032a4:	00000400 	.word	0x00000400
 80032a8:	200002cc 	.word	0x200002cc
 80032ac:	20000420 	.word	0x20000420

080032b0 <SystemInit>:
  * @brief  Setup the microcontroller system
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80032b0:	b580      	push	{r7, lr}
 80032b2:	af00      	add	r7, sp, #0
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 80032b4:	46c0      	nop			@ (mov r8, r8)
 80032b6:	46bd      	mov	sp, r7
 80032b8:	bd80      	pop	{r7, pc}
	...

080032bc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80032bc:	480d      	ldr	r0, [pc, #52]	@ (80032f4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80032be:	4685      	mov	sp, r0

/* Call the clock system initialization function.*/
  bl  SystemInit
 80032c0:	f7ff fff6 	bl	80032b0 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80032c4:	480c      	ldr	r0, [pc, #48]	@ (80032f8 <LoopForever+0x6>)
  ldr r1, =_edata
 80032c6:	490d      	ldr	r1, [pc, #52]	@ (80032fc <LoopForever+0xa>)
  ldr r2, =_sidata
 80032c8:	4a0d      	ldr	r2, [pc, #52]	@ (8003300 <LoopForever+0xe>)
  movs r3, #0
 80032ca:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80032cc:	e002      	b.n	80032d4 <LoopCopyDataInit>

080032ce <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80032ce:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80032d0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80032d2:	3304      	adds	r3, #4

080032d4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80032d4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80032d6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80032d8:	d3f9      	bcc.n	80032ce <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80032da:	4a0a      	ldr	r2, [pc, #40]	@ (8003304 <LoopForever+0x12>)
  ldr r4, =_ebss
 80032dc:	4c0a      	ldr	r4, [pc, #40]	@ (8003308 <LoopForever+0x16>)
  movs r3, #0
 80032de:	2300      	movs	r3, #0
  b LoopFillZerobss
 80032e0:	e001      	b.n	80032e6 <LoopFillZerobss>

080032e2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80032e2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80032e4:	3204      	adds	r2, #4

080032e6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80032e6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80032e8:	d3fb      	bcc.n	80032e2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80032ea:	f003 faa9 	bl	8006840 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80032ee:	f7ff fc6d 	bl	8002bcc <main>

080032f2 <LoopForever>:

LoopForever:
    b LoopForever
 80032f2:	e7fe      	b.n	80032f2 <LoopForever>
  ldr   r0, =_estack
 80032f4:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 80032f8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80032fc:	200001d4 	.word	0x200001d4
  ldr r2, =_sidata
 8003300:	0800a46c 	.word	0x0800a46c
  ldr r2, =_sbss
 8003304:	200001d4 	.word	0x200001d4
  ldr r4, =_ebss
 8003308:	20000420 	.word	0x20000420

0800330c <ADC1_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800330c:	e7fe      	b.n	800330c <ADC1_IRQHandler>
	...

08003310 <HAL_Init>:
  *       In the default implementation,Systick is used as source of time base.
  *       The tick variable is incremented each 1ms in its ISR.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003310:	b580      	push	{r7, lr}
 8003312:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch */ 
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003314:	4b07      	ldr	r3, [pc, #28]	@ (8003334 <HAL_Init+0x24>)
 8003316:	681a      	ldr	r2, [r3, #0]
 8003318:	4b06      	ldr	r3, [pc, #24]	@ (8003334 <HAL_Init+0x24>)
 800331a:	2110      	movs	r1, #16
 800331c:	430a      	orrs	r2, r1
 800331e:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */

  HAL_InitTick(TICK_INT_PRIORITY);
 8003320:	2000      	movs	r0, #0
 8003322:	f000 f809 	bl	8003338 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8003326:	f7ff fe2d 	bl	8002f84 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 800332a:	2300      	movs	r3, #0
}
 800332c:	0018      	movs	r0, r3
 800332e:	46bd      	mov	sp, r7
 8003330:	bd80      	pop	{r7, pc}
 8003332:	46c0      	nop			@ (mov r8, r8)
 8003334:	40022000 	.word	0x40022000

08003338 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8003338:	b590      	push	{r4, r7, lr}
 800333a:	b083      	sub	sp, #12
 800333c:	af00      	add	r7, sp, #0
 800333e:	6078      	str	r0, [r7, #4]
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8003340:	4b14      	ldr	r3, [pc, #80]	@ (8003394 <HAL_InitTick+0x5c>)
 8003342:	681c      	ldr	r4, [r3, #0]
 8003344:	4b14      	ldr	r3, [pc, #80]	@ (8003398 <HAL_InitTick+0x60>)
 8003346:	781b      	ldrb	r3, [r3, #0]
 8003348:	0019      	movs	r1, r3
 800334a:	23fa      	movs	r3, #250	@ 0xfa
 800334c:	0098      	lsls	r0, r3, #2
 800334e:	f7fc fef7 	bl	8000140 <__udivsi3>
 8003352:	0003      	movs	r3, r0
 8003354:	0019      	movs	r1, r3
 8003356:	0020      	movs	r0, r4
 8003358:	f7fc fef2 	bl	8000140 <__udivsi3>
 800335c:	0003      	movs	r3, r0
 800335e:	0018      	movs	r0, r3
 8003360:	f000 f905 	bl	800356e <HAL_SYSTICK_Config>
 8003364:	1e03      	subs	r3, r0, #0
 8003366:	d001      	beq.n	800336c <HAL_InitTick+0x34>
  {
    return HAL_ERROR;
 8003368:	2301      	movs	r3, #1
 800336a:	e00f      	b.n	800338c <HAL_InitTick+0x54>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800336c:	687b      	ldr	r3, [r7, #4]
 800336e:	2b03      	cmp	r3, #3
 8003370:	d80b      	bhi.n	800338a <HAL_InitTick+0x52>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8003372:	6879      	ldr	r1, [r7, #4]
 8003374:	2301      	movs	r3, #1
 8003376:	425b      	negs	r3, r3
 8003378:	2200      	movs	r2, #0
 800337a:	0018      	movs	r0, r3
 800337c:	f000 f8e2 	bl	8003544 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8003380:	4b06      	ldr	r3, [pc, #24]	@ (800339c <HAL_InitTick+0x64>)
 8003382:	687a      	ldr	r2, [r7, #4]
 8003384:	601a      	str	r2, [r3, #0]
  {
    return HAL_ERROR;
  }

   /* Return function status */
  return HAL_OK;
 8003386:	2300      	movs	r3, #0
 8003388:	e000      	b.n	800338c <HAL_InitTick+0x54>
    return HAL_ERROR;
 800338a:	2301      	movs	r3, #1
}
 800338c:	0018      	movs	r0, r3
 800338e:	46bd      	mov	sp, r7
 8003390:	b003      	add	sp, #12
 8003392:	bd90      	pop	{r4, r7, pc}
 8003394:	20000000 	.word	0x20000000
 8003398:	20000008 	.word	0x20000008
 800339c:	20000004 	.word	0x20000004

080033a0 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80033a0:	b580      	push	{r7, lr}
 80033a2:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80033a4:	4b05      	ldr	r3, [pc, #20]	@ (80033bc <HAL_IncTick+0x1c>)
 80033a6:	781b      	ldrb	r3, [r3, #0]
 80033a8:	001a      	movs	r2, r3
 80033aa:	4b05      	ldr	r3, [pc, #20]	@ (80033c0 <HAL_IncTick+0x20>)
 80033ac:	681b      	ldr	r3, [r3, #0]
 80033ae:	18d2      	adds	r2, r2, r3
 80033b0:	4b03      	ldr	r3, [pc, #12]	@ (80033c0 <HAL_IncTick+0x20>)
 80033b2:	601a      	str	r2, [r3, #0]
}
 80033b4:	46c0      	nop			@ (mov r8, r8)
 80033b6:	46bd      	mov	sp, r7
 80033b8:	bd80      	pop	{r7, pc}
 80033ba:	46c0      	nop			@ (mov r8, r8)
 80033bc:	20000008 	.word	0x20000008
 80033c0:	200002d0 	.word	0x200002d0

080033c4 <HAL_GetTick>:
  * @note   This function is declared as __weak  to be overwritten  in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80033c4:	b580      	push	{r7, lr}
 80033c6:	af00      	add	r7, sp, #0
  return uwTick;
 80033c8:	4b02      	ldr	r3, [pc, #8]	@ (80033d4 <HAL_GetTick+0x10>)
 80033ca:	681b      	ldr	r3, [r3, #0]
}
 80033cc:	0018      	movs	r0, r3
 80033ce:	46bd      	mov	sp, r7
 80033d0:	bd80      	pop	{r7, pc}
 80033d2:	46c0      	nop			@ (mov r8, r8)
 80033d4:	200002d0 	.word	0x200002d0

080033d8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80033d8:	b580      	push	{r7, lr}
 80033da:	b084      	sub	sp, #16
 80033dc:	af00      	add	r7, sp, #0
 80033de:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 80033e0:	f7ff fff0 	bl	80033c4 <HAL_GetTick>
 80033e4:	0003      	movs	r3, r0
 80033e6:	60bb      	str	r3, [r7, #8]
  uint32_t wait = Delay;
 80033e8:	687b      	ldr	r3, [r7, #4]
 80033ea:	60fb      	str	r3, [r7, #12]
  
  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80033ec:	68fb      	ldr	r3, [r7, #12]
 80033ee:	3301      	adds	r3, #1
 80033f0:	d005      	beq.n	80033fe <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 80033f2:	4b0a      	ldr	r3, [pc, #40]	@ (800341c <HAL_Delay+0x44>)
 80033f4:	781b      	ldrb	r3, [r3, #0]
 80033f6:	001a      	movs	r2, r3
 80033f8:	68fb      	ldr	r3, [r7, #12]
 80033fa:	189b      	adds	r3, r3, r2
 80033fc:	60fb      	str	r3, [r7, #12]
  }
  
  while((HAL_GetTick() - tickstart) < wait)
 80033fe:	46c0      	nop			@ (mov r8, r8)
 8003400:	f7ff ffe0 	bl	80033c4 <HAL_GetTick>
 8003404:	0002      	movs	r2, r0
 8003406:	68bb      	ldr	r3, [r7, #8]
 8003408:	1ad3      	subs	r3, r2, r3
 800340a:	68fa      	ldr	r2, [r7, #12]
 800340c:	429a      	cmp	r2, r3
 800340e:	d8f7      	bhi.n	8003400 <HAL_Delay+0x28>
  {
  }
}
 8003410:	46c0      	nop			@ (mov r8, r8)
 8003412:	46c0      	nop			@ (mov r8, r8)
 8003414:	46bd      	mov	sp, r7
 8003416:	b004      	add	sp, #16
 8003418:	bd80      	pop	{r7, pc}
 800341a:	46c0      	nop			@ (mov r8, r8)
 800341c:	20000008 	.word	0x20000008

08003420 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8003420:	b590      	push	{r4, r7, lr}
 8003422:	b083      	sub	sp, #12
 8003424:	af00      	add	r7, sp, #0
 8003426:	0002      	movs	r2, r0
 8003428:	6039      	str	r1, [r7, #0]
 800342a:	1dfb      	adds	r3, r7, #7
 800342c:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 800342e:	1dfb      	adds	r3, r7, #7
 8003430:	781b      	ldrb	r3, [r3, #0]
 8003432:	2b7f      	cmp	r3, #127	@ 0x7f
 8003434:	d828      	bhi.n	8003488 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003436:	4a2f      	ldr	r2, [pc, #188]	@ (80034f4 <__NVIC_SetPriority+0xd4>)
 8003438:	1dfb      	adds	r3, r7, #7
 800343a:	781b      	ldrb	r3, [r3, #0]
 800343c:	b25b      	sxtb	r3, r3
 800343e:	089b      	lsrs	r3, r3, #2
 8003440:	33c0      	adds	r3, #192	@ 0xc0
 8003442:	009b      	lsls	r3, r3, #2
 8003444:	589b      	ldr	r3, [r3, r2]
 8003446:	1dfa      	adds	r2, r7, #7
 8003448:	7812      	ldrb	r2, [r2, #0]
 800344a:	0011      	movs	r1, r2
 800344c:	2203      	movs	r2, #3
 800344e:	400a      	ands	r2, r1
 8003450:	00d2      	lsls	r2, r2, #3
 8003452:	21ff      	movs	r1, #255	@ 0xff
 8003454:	4091      	lsls	r1, r2
 8003456:	000a      	movs	r2, r1
 8003458:	43d2      	mvns	r2, r2
 800345a:	401a      	ands	r2, r3
 800345c:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 800345e:	683b      	ldr	r3, [r7, #0]
 8003460:	019b      	lsls	r3, r3, #6
 8003462:	22ff      	movs	r2, #255	@ 0xff
 8003464:	401a      	ands	r2, r3
 8003466:	1dfb      	adds	r3, r7, #7
 8003468:	781b      	ldrb	r3, [r3, #0]
 800346a:	0018      	movs	r0, r3
 800346c:	2303      	movs	r3, #3
 800346e:	4003      	ands	r3, r0
 8003470:	00db      	lsls	r3, r3, #3
 8003472:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003474:	481f      	ldr	r0, [pc, #124]	@ (80034f4 <__NVIC_SetPriority+0xd4>)
 8003476:	1dfb      	adds	r3, r7, #7
 8003478:	781b      	ldrb	r3, [r3, #0]
 800347a:	b25b      	sxtb	r3, r3
 800347c:	089b      	lsrs	r3, r3, #2
 800347e:	430a      	orrs	r2, r1
 8003480:	33c0      	adds	r3, #192	@ 0xc0
 8003482:	009b      	lsls	r3, r3, #2
 8003484:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 8003486:	e031      	b.n	80034ec <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003488:	4a1b      	ldr	r2, [pc, #108]	@ (80034f8 <__NVIC_SetPriority+0xd8>)
 800348a:	1dfb      	adds	r3, r7, #7
 800348c:	781b      	ldrb	r3, [r3, #0]
 800348e:	0019      	movs	r1, r3
 8003490:	230f      	movs	r3, #15
 8003492:	400b      	ands	r3, r1
 8003494:	3b08      	subs	r3, #8
 8003496:	089b      	lsrs	r3, r3, #2
 8003498:	3306      	adds	r3, #6
 800349a:	009b      	lsls	r3, r3, #2
 800349c:	18d3      	adds	r3, r2, r3
 800349e:	3304      	adds	r3, #4
 80034a0:	681b      	ldr	r3, [r3, #0]
 80034a2:	1dfa      	adds	r2, r7, #7
 80034a4:	7812      	ldrb	r2, [r2, #0]
 80034a6:	0011      	movs	r1, r2
 80034a8:	2203      	movs	r2, #3
 80034aa:	400a      	ands	r2, r1
 80034ac:	00d2      	lsls	r2, r2, #3
 80034ae:	21ff      	movs	r1, #255	@ 0xff
 80034b0:	4091      	lsls	r1, r2
 80034b2:	000a      	movs	r2, r1
 80034b4:	43d2      	mvns	r2, r2
 80034b6:	401a      	ands	r2, r3
 80034b8:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80034ba:	683b      	ldr	r3, [r7, #0]
 80034bc:	019b      	lsls	r3, r3, #6
 80034be:	22ff      	movs	r2, #255	@ 0xff
 80034c0:	401a      	ands	r2, r3
 80034c2:	1dfb      	adds	r3, r7, #7
 80034c4:	781b      	ldrb	r3, [r3, #0]
 80034c6:	0018      	movs	r0, r3
 80034c8:	2303      	movs	r3, #3
 80034ca:	4003      	ands	r3, r0
 80034cc:	00db      	lsls	r3, r3, #3
 80034ce:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80034d0:	4809      	ldr	r0, [pc, #36]	@ (80034f8 <__NVIC_SetPriority+0xd8>)
 80034d2:	1dfb      	adds	r3, r7, #7
 80034d4:	781b      	ldrb	r3, [r3, #0]
 80034d6:	001c      	movs	r4, r3
 80034d8:	230f      	movs	r3, #15
 80034da:	4023      	ands	r3, r4
 80034dc:	3b08      	subs	r3, #8
 80034de:	089b      	lsrs	r3, r3, #2
 80034e0:	430a      	orrs	r2, r1
 80034e2:	3306      	adds	r3, #6
 80034e4:	009b      	lsls	r3, r3, #2
 80034e6:	18c3      	adds	r3, r0, r3
 80034e8:	3304      	adds	r3, #4
 80034ea:	601a      	str	r2, [r3, #0]
}
 80034ec:	46c0      	nop			@ (mov r8, r8)
 80034ee:	46bd      	mov	sp, r7
 80034f0:	b003      	add	sp, #12
 80034f2:	bd90      	pop	{r4, r7, pc}
 80034f4:	e000e100 	.word	0xe000e100
 80034f8:	e000ed00 	.word	0xe000ed00

080034fc <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80034fc:	b580      	push	{r7, lr}
 80034fe:	b082      	sub	sp, #8
 8003500:	af00      	add	r7, sp, #0
 8003502:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8003504:	687b      	ldr	r3, [r7, #4]
 8003506:	1e5a      	subs	r2, r3, #1
 8003508:	2380      	movs	r3, #128	@ 0x80
 800350a:	045b      	lsls	r3, r3, #17
 800350c:	429a      	cmp	r2, r3
 800350e:	d301      	bcc.n	8003514 <SysTick_Config+0x18>
  {
    return (1UL);                                                   /* Reload value impossible */
 8003510:	2301      	movs	r3, #1
 8003512:	e010      	b.n	8003536 <SysTick_Config+0x3a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8003514:	4b0a      	ldr	r3, [pc, #40]	@ (8003540 <SysTick_Config+0x44>)
 8003516:	687a      	ldr	r2, [r7, #4]
 8003518:	3a01      	subs	r2, #1
 800351a:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800351c:	2301      	movs	r3, #1
 800351e:	425b      	negs	r3, r3
 8003520:	2103      	movs	r1, #3
 8003522:	0018      	movs	r0, r3
 8003524:	f7ff ff7c 	bl	8003420 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8003528:	4b05      	ldr	r3, [pc, #20]	@ (8003540 <SysTick_Config+0x44>)
 800352a:	2200      	movs	r2, #0
 800352c:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800352e:	4b04      	ldr	r3, [pc, #16]	@ (8003540 <SysTick_Config+0x44>)
 8003530:	2207      	movs	r2, #7
 8003532:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8003534:	2300      	movs	r3, #0
}
 8003536:	0018      	movs	r0, r3
 8003538:	46bd      	mov	sp, r7
 800353a:	b002      	add	sp, #8
 800353c:	bd80      	pop	{r7, pc}
 800353e:	46c0      	nop			@ (mov r8, r8)
 8003540:	e000e010 	.word	0xe000e010

08003544 <HAL_NVIC_SetPriority>:
  *         with stm32f0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0 based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8003544:	b580      	push	{r7, lr}
 8003546:	b084      	sub	sp, #16
 8003548:	af00      	add	r7, sp, #0
 800354a:	60b9      	str	r1, [r7, #8]
 800354c:	607a      	str	r2, [r7, #4]
 800354e:	210f      	movs	r1, #15
 8003550:	187b      	adds	r3, r7, r1
 8003552:	1c02      	adds	r2, r0, #0
 8003554:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
 8003556:	68ba      	ldr	r2, [r7, #8]
 8003558:	187b      	adds	r3, r7, r1
 800355a:	781b      	ldrb	r3, [r3, #0]
 800355c:	b25b      	sxtb	r3, r3
 800355e:	0011      	movs	r1, r2
 8003560:	0018      	movs	r0, r3
 8003562:	f7ff ff5d 	bl	8003420 <__NVIC_SetPriority>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(SubPriority);
}
 8003566:	46c0      	nop			@ (mov r8, r8)
 8003568:	46bd      	mov	sp, r7
 800356a:	b004      	add	sp, #16
 800356c:	bd80      	pop	{r7, pc}

0800356e <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800356e:	b580      	push	{r7, lr}
 8003570:	b082      	sub	sp, #8
 8003572:	af00      	add	r7, sp, #0
 8003574:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8003576:	687b      	ldr	r3, [r7, #4]
 8003578:	0018      	movs	r0, r3
 800357a:	f7ff ffbf 	bl	80034fc <SysTick_Config>
 800357e:	0003      	movs	r3, r0
}
 8003580:	0018      	movs	r0, r3
 8003582:	46bd      	mov	sp, r7
 8003584:	b002      	add	sp, #8
 8003586:	bd80      	pop	{r7, pc}

08003588 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003588:	b580      	push	{r7, lr}
 800358a:	b086      	sub	sp, #24
 800358c:	af00      	add	r7, sp, #0
 800358e:	6078      	str	r0, [r7, #4]
 8003590:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 8003592:	2300      	movs	r3, #0
 8003594:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8003596:	e14f      	b.n	8003838 <HAL_GPIO_Init+0x2b0>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8003598:	683b      	ldr	r3, [r7, #0]
 800359a:	681b      	ldr	r3, [r3, #0]
 800359c:	2101      	movs	r1, #1
 800359e:	697a      	ldr	r2, [r7, #20]
 80035a0:	4091      	lsls	r1, r2
 80035a2:	000a      	movs	r2, r1
 80035a4:	4013      	ands	r3, r2
 80035a6:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0x00u)
 80035a8:	68fb      	ldr	r3, [r7, #12]
 80035aa:	2b00      	cmp	r3, #0
 80035ac:	d100      	bne.n	80035b0 <HAL_GPIO_Init+0x28>
 80035ae:	e140      	b.n	8003832 <HAL_GPIO_Init+0x2aa>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 80035b0:	683b      	ldr	r3, [r7, #0]
 80035b2:	685b      	ldr	r3, [r3, #4]
 80035b4:	2203      	movs	r2, #3
 80035b6:	4013      	ands	r3, r2
 80035b8:	2b01      	cmp	r3, #1
 80035ba:	d005      	beq.n	80035c8 <HAL_GPIO_Init+0x40>
         ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80035bc:	683b      	ldr	r3, [r7, #0]
 80035be:	685b      	ldr	r3, [r3, #4]
 80035c0:	2203      	movs	r2, #3
 80035c2:	4013      	ands	r3, r2
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 80035c4:	2b02      	cmp	r3, #2
 80035c6:	d130      	bne.n	800362a <HAL_GPIO_Init+0xa2>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 80035c8:	687b      	ldr	r3, [r7, #4]
 80035ca:	689b      	ldr	r3, [r3, #8]
 80035cc:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 80035ce:	697b      	ldr	r3, [r7, #20]
 80035d0:	005b      	lsls	r3, r3, #1
 80035d2:	2203      	movs	r2, #3
 80035d4:	409a      	lsls	r2, r3
 80035d6:	0013      	movs	r3, r2
 80035d8:	43da      	mvns	r2, r3
 80035da:	693b      	ldr	r3, [r7, #16]
 80035dc:	4013      	ands	r3, r2
 80035de:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2u));
 80035e0:	683b      	ldr	r3, [r7, #0]
 80035e2:	68da      	ldr	r2, [r3, #12]
 80035e4:	697b      	ldr	r3, [r7, #20]
 80035e6:	005b      	lsls	r3, r3, #1
 80035e8:	409a      	lsls	r2, r3
 80035ea:	0013      	movs	r3, r2
 80035ec:	693a      	ldr	r2, [r7, #16]
 80035ee:	4313      	orrs	r3, r2
 80035f0:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 80035f2:	687b      	ldr	r3, [r7, #4]
 80035f4:	693a      	ldr	r2, [r7, #16]
 80035f6:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 80035f8:	687b      	ldr	r3, [r7, #4]
 80035fa:	685b      	ldr	r3, [r3, #4]
 80035fc:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80035fe:	2201      	movs	r2, #1
 8003600:	697b      	ldr	r3, [r7, #20]
 8003602:	409a      	lsls	r2, r3
 8003604:	0013      	movs	r3, r2
 8003606:	43da      	mvns	r2, r3
 8003608:	693b      	ldr	r3, [r7, #16]
 800360a:	4013      	ands	r3, r2
 800360c:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800360e:	683b      	ldr	r3, [r7, #0]
 8003610:	685b      	ldr	r3, [r3, #4]
 8003612:	091b      	lsrs	r3, r3, #4
 8003614:	2201      	movs	r2, #1
 8003616:	401a      	ands	r2, r3
 8003618:	697b      	ldr	r3, [r7, #20]
 800361a:	409a      	lsls	r2, r3
 800361c:	0013      	movs	r3, r2
 800361e:	693a      	ldr	r2, [r7, #16]
 8003620:	4313      	orrs	r3, r2
 8003622:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 8003624:	687b      	ldr	r3, [r7, #4]
 8003626:	693a      	ldr	r2, [r7, #16]
 8003628:	605a      	str	r2, [r3, #4]
      }
      
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800362a:	683b      	ldr	r3, [r7, #0]
 800362c:	685b      	ldr	r3, [r3, #4]
 800362e:	2203      	movs	r2, #3
 8003630:	4013      	ands	r3, r2
 8003632:	2b03      	cmp	r3, #3
 8003634:	d017      	beq.n	8003666 <HAL_GPIO_Init+0xde>
      {
        /* Check the Pull parameter */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8003636:	687b      	ldr	r3, [r7, #4]
 8003638:	68db      	ldr	r3, [r3, #12]
 800363a:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2u));
 800363c:	697b      	ldr	r3, [r7, #20]
 800363e:	005b      	lsls	r3, r3, #1
 8003640:	2203      	movs	r2, #3
 8003642:	409a      	lsls	r2, r3
 8003644:	0013      	movs	r3, r2
 8003646:	43da      	mvns	r2, r3
 8003648:	693b      	ldr	r3, [r7, #16]
 800364a:	4013      	ands	r3, r2
 800364c:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Pull) << (position * 2u));
 800364e:	683b      	ldr	r3, [r7, #0]
 8003650:	689a      	ldr	r2, [r3, #8]
 8003652:	697b      	ldr	r3, [r7, #20]
 8003654:	005b      	lsls	r3, r3, #1
 8003656:	409a      	lsls	r2, r3
 8003658:	0013      	movs	r3, r2
 800365a:	693a      	ldr	r2, [r7, #16]
 800365c:	4313      	orrs	r3, r2
 800365e:	613b      	str	r3, [r7, #16]
        GPIOx->PUPDR = temp;
 8003660:	687b      	ldr	r3, [r7, #4]
 8003662:	693a      	ldr	r2, [r7, #16]
 8003664:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003666:	683b      	ldr	r3, [r7, #0]
 8003668:	685b      	ldr	r3, [r3, #4]
 800366a:	2203      	movs	r2, #3
 800366c:	4013      	ands	r3, r2
 800366e:	2b02      	cmp	r3, #2
 8003670:	d123      	bne.n	80036ba <HAL_GPIO_Init+0x132>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3u];
 8003672:	697b      	ldr	r3, [r7, #20]
 8003674:	08da      	lsrs	r2, r3, #3
 8003676:	687b      	ldr	r3, [r7, #4]
 8003678:	3208      	adds	r2, #8
 800367a:	0092      	lsls	r2, r2, #2
 800367c:	58d3      	ldr	r3, [r2, r3]
 800367e:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8003680:	697b      	ldr	r3, [r7, #20]
 8003682:	2207      	movs	r2, #7
 8003684:	4013      	ands	r3, r2
 8003686:	009b      	lsls	r3, r3, #2
 8003688:	220f      	movs	r2, #15
 800368a:	409a      	lsls	r2, r3
 800368c:	0013      	movs	r3, r2
 800368e:	43da      	mvns	r2, r3
 8003690:	693b      	ldr	r3, [r7, #16]
 8003692:	4013      	ands	r3, r2
 8003694:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 8003696:	683b      	ldr	r3, [r7, #0]
 8003698:	691a      	ldr	r2, [r3, #16]
 800369a:	697b      	ldr	r3, [r7, #20]
 800369c:	2107      	movs	r1, #7
 800369e:	400b      	ands	r3, r1
 80036a0:	009b      	lsls	r3, r3, #2
 80036a2:	409a      	lsls	r2, r3
 80036a4:	0013      	movs	r3, r2
 80036a6:	693a      	ldr	r2, [r7, #16]
 80036a8:	4313      	orrs	r3, r2
 80036aa:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3u] = temp;
 80036ac:	697b      	ldr	r3, [r7, #20]
 80036ae:	08da      	lsrs	r2, r3, #3
 80036b0:	687b      	ldr	r3, [r7, #4]
 80036b2:	3208      	adds	r2, #8
 80036b4:	0092      	lsls	r2, r2, #2
 80036b6:	6939      	ldr	r1, [r7, #16]
 80036b8:	50d1      	str	r1, [r2, r3]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	681b      	ldr	r3, [r3, #0]
 80036be:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2u));
 80036c0:	697b      	ldr	r3, [r7, #20]
 80036c2:	005b      	lsls	r3, r3, #1
 80036c4:	2203      	movs	r2, #3
 80036c6:	409a      	lsls	r2, r3
 80036c8:	0013      	movs	r3, r2
 80036ca:	43da      	mvns	r2, r3
 80036cc:	693b      	ldr	r3, [r7, #16]
 80036ce:	4013      	ands	r3, r2
 80036d0:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 80036d2:	683b      	ldr	r3, [r7, #0]
 80036d4:	685b      	ldr	r3, [r3, #4]
 80036d6:	2203      	movs	r2, #3
 80036d8:	401a      	ands	r2, r3
 80036da:	697b      	ldr	r3, [r7, #20]
 80036dc:	005b      	lsls	r3, r3, #1
 80036de:	409a      	lsls	r2, r3
 80036e0:	0013      	movs	r3, r2
 80036e2:	693a      	ldr	r2, [r7, #16]
 80036e4:	4313      	orrs	r3, r2
 80036e6:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 80036e8:	687b      	ldr	r3, [r7, #4]
 80036ea:	693a      	ldr	r2, [r7, #16]
 80036ec:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 80036ee:	683b      	ldr	r3, [r7, #0]
 80036f0:	685a      	ldr	r2, [r3, #4]
 80036f2:	23c0      	movs	r3, #192	@ 0xc0
 80036f4:	029b      	lsls	r3, r3, #10
 80036f6:	4013      	ands	r3, r2
 80036f8:	d100      	bne.n	80036fc <HAL_GPIO_Init+0x174>
 80036fa:	e09a      	b.n	8003832 <HAL_GPIO_Init+0x2aa>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80036fc:	4b54      	ldr	r3, [pc, #336]	@ (8003850 <HAL_GPIO_Init+0x2c8>)
 80036fe:	699a      	ldr	r2, [r3, #24]
 8003700:	4b53      	ldr	r3, [pc, #332]	@ (8003850 <HAL_GPIO_Init+0x2c8>)
 8003702:	2101      	movs	r1, #1
 8003704:	430a      	orrs	r2, r1
 8003706:	619a      	str	r2, [r3, #24]
 8003708:	4b51      	ldr	r3, [pc, #324]	@ (8003850 <HAL_GPIO_Init+0x2c8>)
 800370a:	699b      	ldr	r3, [r3, #24]
 800370c:	2201      	movs	r2, #1
 800370e:	4013      	ands	r3, r2
 8003710:	60bb      	str	r3, [r7, #8]
 8003712:	68bb      	ldr	r3, [r7, #8]

        temp = SYSCFG->EXTICR[position >> 2u];
 8003714:	4a4f      	ldr	r2, [pc, #316]	@ (8003854 <HAL_GPIO_Init+0x2cc>)
 8003716:	697b      	ldr	r3, [r7, #20]
 8003718:	089b      	lsrs	r3, r3, #2
 800371a:	3302      	adds	r3, #2
 800371c:	009b      	lsls	r3, r3, #2
 800371e:	589b      	ldr	r3, [r3, r2]
 8003720:	613b      	str	r3, [r7, #16]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 8003722:	697b      	ldr	r3, [r7, #20]
 8003724:	2203      	movs	r2, #3
 8003726:	4013      	ands	r3, r2
 8003728:	009b      	lsls	r3, r3, #2
 800372a:	220f      	movs	r2, #15
 800372c:	409a      	lsls	r2, r3
 800372e:	0013      	movs	r3, r2
 8003730:	43da      	mvns	r2, r3
 8003732:	693b      	ldr	r3, [r7, #16]
 8003734:	4013      	ands	r3, r2
 8003736:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8003738:	687a      	ldr	r2, [r7, #4]
 800373a:	2390      	movs	r3, #144	@ 0x90
 800373c:	05db      	lsls	r3, r3, #23
 800373e:	429a      	cmp	r2, r3
 8003740:	d013      	beq.n	800376a <HAL_GPIO_Init+0x1e2>
 8003742:	687b      	ldr	r3, [r7, #4]
 8003744:	4a44      	ldr	r2, [pc, #272]	@ (8003858 <HAL_GPIO_Init+0x2d0>)
 8003746:	4293      	cmp	r3, r2
 8003748:	d00d      	beq.n	8003766 <HAL_GPIO_Init+0x1de>
 800374a:	687b      	ldr	r3, [r7, #4]
 800374c:	4a43      	ldr	r2, [pc, #268]	@ (800385c <HAL_GPIO_Init+0x2d4>)
 800374e:	4293      	cmp	r3, r2
 8003750:	d007      	beq.n	8003762 <HAL_GPIO_Init+0x1da>
 8003752:	687b      	ldr	r3, [r7, #4]
 8003754:	4a42      	ldr	r2, [pc, #264]	@ (8003860 <HAL_GPIO_Init+0x2d8>)
 8003756:	4293      	cmp	r3, r2
 8003758:	d101      	bne.n	800375e <HAL_GPIO_Init+0x1d6>
 800375a:	2303      	movs	r3, #3
 800375c:	e006      	b.n	800376c <HAL_GPIO_Init+0x1e4>
 800375e:	2305      	movs	r3, #5
 8003760:	e004      	b.n	800376c <HAL_GPIO_Init+0x1e4>
 8003762:	2302      	movs	r3, #2
 8003764:	e002      	b.n	800376c <HAL_GPIO_Init+0x1e4>
 8003766:	2301      	movs	r3, #1
 8003768:	e000      	b.n	800376c <HAL_GPIO_Init+0x1e4>
 800376a:	2300      	movs	r3, #0
 800376c:	697a      	ldr	r2, [r7, #20]
 800376e:	2103      	movs	r1, #3
 8003770:	400a      	ands	r2, r1
 8003772:	0092      	lsls	r2, r2, #2
 8003774:	4093      	lsls	r3, r2
 8003776:	693a      	ldr	r2, [r7, #16]
 8003778:	4313      	orrs	r3, r2
 800377a:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2u] = temp;
 800377c:	4935      	ldr	r1, [pc, #212]	@ (8003854 <HAL_GPIO_Init+0x2cc>)
 800377e:	697b      	ldr	r3, [r7, #20]
 8003780:	089b      	lsrs	r3, r3, #2
 8003782:	3302      	adds	r3, #2
 8003784:	009b      	lsls	r3, r3, #2
 8003786:	693a      	ldr	r2, [r7, #16]
 8003788:	505a      	str	r2, [r3, r1]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800378a:	4b36      	ldr	r3, [pc, #216]	@ (8003864 <HAL_GPIO_Init+0x2dc>)
 800378c:	689b      	ldr	r3, [r3, #8]
 800378e:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8003790:	68fb      	ldr	r3, [r7, #12]
 8003792:	43da      	mvns	r2, r3
 8003794:	693b      	ldr	r3, [r7, #16]
 8003796:	4013      	ands	r3, r2
 8003798:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 800379a:	683b      	ldr	r3, [r7, #0]
 800379c:	685a      	ldr	r2, [r3, #4]
 800379e:	2380      	movs	r3, #128	@ 0x80
 80037a0:	035b      	lsls	r3, r3, #13
 80037a2:	4013      	ands	r3, r2
 80037a4:	d003      	beq.n	80037ae <HAL_GPIO_Init+0x226>
        {
          temp |= iocurrent;
 80037a6:	693a      	ldr	r2, [r7, #16]
 80037a8:	68fb      	ldr	r3, [r7, #12]
 80037aa:	4313      	orrs	r3, r2
 80037ac:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR = temp;
 80037ae:	4b2d      	ldr	r3, [pc, #180]	@ (8003864 <HAL_GPIO_Init+0x2dc>)
 80037b0:	693a      	ldr	r2, [r7, #16]
 80037b2:	609a      	str	r2, [r3, #8]

        temp = EXTI->FTSR;
 80037b4:	4b2b      	ldr	r3, [pc, #172]	@ (8003864 <HAL_GPIO_Init+0x2dc>)
 80037b6:	68db      	ldr	r3, [r3, #12]
 80037b8:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 80037ba:	68fb      	ldr	r3, [r7, #12]
 80037bc:	43da      	mvns	r2, r3
 80037be:	693b      	ldr	r3, [r7, #16]
 80037c0:	4013      	ands	r3, r2
 80037c2:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 80037c4:	683b      	ldr	r3, [r7, #0]
 80037c6:	685a      	ldr	r2, [r3, #4]
 80037c8:	2380      	movs	r3, #128	@ 0x80
 80037ca:	039b      	lsls	r3, r3, #14
 80037cc:	4013      	ands	r3, r2
 80037ce:	d003      	beq.n	80037d8 <HAL_GPIO_Init+0x250>
        {
          temp |= iocurrent;
 80037d0:	693a      	ldr	r2, [r7, #16]
 80037d2:	68fb      	ldr	r3, [r7, #12]
 80037d4:	4313      	orrs	r3, r2
 80037d6:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR = temp;
 80037d8:	4b22      	ldr	r3, [pc, #136]	@ (8003864 <HAL_GPIO_Init+0x2dc>)
 80037da:	693a      	ldr	r2, [r7, #16]
 80037dc:	60da      	str	r2, [r3, #12]

        /* Clear EXTI line configuration */
        temp = EXTI->EMR;
 80037de:	4b21      	ldr	r3, [pc, #132]	@ (8003864 <HAL_GPIO_Init+0x2dc>)
 80037e0:	685b      	ldr	r3, [r3, #4]
 80037e2:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 80037e4:	68fb      	ldr	r3, [r7, #12]
 80037e6:	43da      	mvns	r2, r3
 80037e8:	693b      	ldr	r3, [r7, #16]
 80037ea:	4013      	ands	r3, r2
 80037ec:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 80037ee:	683b      	ldr	r3, [r7, #0]
 80037f0:	685a      	ldr	r2, [r3, #4]
 80037f2:	2380      	movs	r3, #128	@ 0x80
 80037f4:	029b      	lsls	r3, r3, #10
 80037f6:	4013      	ands	r3, r2
 80037f8:	d003      	beq.n	8003802 <HAL_GPIO_Init+0x27a>
        {
          temp |= iocurrent;
 80037fa:	693a      	ldr	r2, [r7, #16]
 80037fc:	68fb      	ldr	r3, [r7, #12]
 80037fe:	4313      	orrs	r3, r2
 8003800:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR = temp;
 8003802:	4b18      	ldr	r3, [pc, #96]	@ (8003864 <HAL_GPIO_Init+0x2dc>)
 8003804:	693a      	ldr	r2, [r7, #16]
 8003806:	605a      	str	r2, [r3, #4]

        temp = EXTI->IMR;
 8003808:	4b16      	ldr	r3, [pc, #88]	@ (8003864 <HAL_GPIO_Init+0x2dc>)
 800380a:	681b      	ldr	r3, [r3, #0]
 800380c:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 800380e:	68fb      	ldr	r3, [r7, #12]
 8003810:	43da      	mvns	r2, r3
 8003812:	693b      	ldr	r3, [r7, #16]
 8003814:	4013      	ands	r3, r2
 8003816:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8003818:	683b      	ldr	r3, [r7, #0]
 800381a:	685a      	ldr	r2, [r3, #4]
 800381c:	2380      	movs	r3, #128	@ 0x80
 800381e:	025b      	lsls	r3, r3, #9
 8003820:	4013      	ands	r3, r2
 8003822:	d003      	beq.n	800382c <HAL_GPIO_Init+0x2a4>
        {
          temp |= iocurrent;
 8003824:	693a      	ldr	r2, [r7, #16]
 8003826:	68fb      	ldr	r3, [r7, #12]
 8003828:	4313      	orrs	r3, r2
 800382a:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR = temp;
 800382c:	4b0d      	ldr	r3, [pc, #52]	@ (8003864 <HAL_GPIO_Init+0x2dc>)
 800382e:	693a      	ldr	r2, [r7, #16]
 8003830:	601a      	str	r2, [r3, #0]
      }
    }

    position++;
 8003832:	697b      	ldr	r3, [r7, #20]
 8003834:	3301      	adds	r3, #1
 8003836:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8003838:	683b      	ldr	r3, [r7, #0]
 800383a:	681a      	ldr	r2, [r3, #0]
 800383c:	697b      	ldr	r3, [r7, #20]
 800383e:	40da      	lsrs	r2, r3
 8003840:	1e13      	subs	r3, r2, #0
 8003842:	d000      	beq.n	8003846 <HAL_GPIO_Init+0x2be>
 8003844:	e6a8      	b.n	8003598 <HAL_GPIO_Init+0x10>
  } 
}
 8003846:	46c0      	nop			@ (mov r8, r8)
 8003848:	46c0      	nop			@ (mov r8, r8)
 800384a:	46bd      	mov	sp, r7
 800384c:	b006      	add	sp, #24
 800384e:	bd80      	pop	{r7, pc}
 8003850:	40021000 	.word	0x40021000
 8003854:	40010000 	.word	0x40010000
 8003858:	48000400 	.word	0x48000400
 800385c:	48000800 	.word	0x48000800
 8003860:	48000c00 	.word	0x48000c00
 8003864:	40010400 	.word	0x40010400

08003868 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8003868:	b580      	push	{r7, lr}
 800386a:	b082      	sub	sp, #8
 800386c:	af00      	add	r7, sp, #0
 800386e:	6078      	str	r0, [r7, #4]
 8003870:	0008      	movs	r0, r1
 8003872:	0011      	movs	r1, r2
 8003874:	1cbb      	adds	r3, r7, #2
 8003876:	1c02      	adds	r2, r0, #0
 8003878:	801a      	strh	r2, [r3, #0]
 800387a:	1c7b      	adds	r3, r7, #1
 800387c:	1c0a      	adds	r2, r1, #0
 800387e:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8003880:	1c7b      	adds	r3, r7, #1
 8003882:	781b      	ldrb	r3, [r3, #0]
 8003884:	2b00      	cmp	r3, #0
 8003886:	d004      	beq.n	8003892 <HAL_GPIO_WritePin+0x2a>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 8003888:	1cbb      	adds	r3, r7, #2
 800388a:	881a      	ldrh	r2, [r3, #0]
 800388c:	687b      	ldr	r3, [r7, #4]
 800388e:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 8003890:	e003      	b.n	800389a <HAL_GPIO_WritePin+0x32>
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 8003892:	1cbb      	adds	r3, r7, #2
 8003894:	881a      	ldrh	r2, [r3, #0]
 8003896:	687b      	ldr	r3, [r7, #4]
 8003898:	629a      	str	r2, [r3, #40]	@ 0x28
}
 800389a:	46c0      	nop			@ (mov r8, r8)
 800389c:	46bd      	mov	sp, r7
 800389e:	b002      	add	sp, #8
 80038a0:	bd80      	pop	{r7, pc}
	...

080038a4 <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 80038a4:	b580      	push	{r7, lr}
 80038a6:	b082      	sub	sp, #8
 80038a8:	af00      	add	r7, sp, #0
 80038aa:	6078      	str	r0, [r7, #4]
  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 80038ac:	687b      	ldr	r3, [r7, #4]
 80038ae:	2b00      	cmp	r3, #0
 80038b0:	d101      	bne.n	80038b6 <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 80038b2:	2301      	movs	r3, #1
 80038b4:	e08f      	b.n	80039d6 <HAL_I2C_Init+0x132>
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 80038b6:	687b      	ldr	r3, [r7, #4]
 80038b8:	2241      	movs	r2, #65	@ 0x41
 80038ba:	5c9b      	ldrb	r3, [r3, r2]
 80038bc:	b2db      	uxtb	r3, r3
 80038be:	2b00      	cmp	r3, #0
 80038c0:	d107      	bne.n	80038d2 <HAL_I2C_Init+0x2e>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 80038c2:	687b      	ldr	r3, [r7, #4]
 80038c4:	2240      	movs	r2, #64	@ 0x40
 80038c6:	2100      	movs	r1, #0
 80038c8:	5499      	strb	r1, [r3, r2]

    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    HAL_I2C_MspInit(hi2c);
 80038ca:	687b      	ldr	r3, [r7, #4]
 80038cc:	0018      	movs	r0, r3
 80038ce:	f7ff fb7d 	bl	8002fcc <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 80038d2:	687b      	ldr	r3, [r7, #4]
 80038d4:	2241      	movs	r2, #65	@ 0x41
 80038d6:	2124      	movs	r1, #36	@ 0x24
 80038d8:	5499      	strb	r1, [r3, r2]

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 80038da:	687b      	ldr	r3, [r7, #4]
 80038dc:	681b      	ldr	r3, [r3, #0]
 80038de:	681a      	ldr	r2, [r3, #0]
 80038e0:	687b      	ldr	r3, [r7, #4]
 80038e2:	681b      	ldr	r3, [r3, #0]
 80038e4:	2101      	movs	r1, #1
 80038e6:	438a      	bics	r2, r1
 80038e8:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx TIMINGR Configuration ------------------*/
  /* Configure I2Cx: Frequency range */
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 80038ea:	687b      	ldr	r3, [r7, #4]
 80038ec:	685a      	ldr	r2, [r3, #4]
 80038ee:	687b      	ldr	r3, [r7, #4]
 80038f0:	681b      	ldr	r3, [r3, #0]
 80038f2:	493b      	ldr	r1, [pc, #236]	@ (80039e0 <HAL_I2C_Init+0x13c>)
 80038f4:	400a      	ands	r2, r1
 80038f6:	611a      	str	r2, [r3, #16]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Disable Own Address1 before set the Own Address1 configuration */
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 80038f8:	687b      	ldr	r3, [r7, #4]
 80038fa:	681b      	ldr	r3, [r3, #0]
 80038fc:	689a      	ldr	r2, [r3, #8]
 80038fe:	687b      	ldr	r3, [r7, #4]
 8003900:	681b      	ldr	r3, [r3, #0]
 8003902:	4938      	ldr	r1, [pc, #224]	@ (80039e4 <HAL_I2C_Init+0x140>)
 8003904:	400a      	ands	r2, r1
 8003906:	609a      	str	r2, [r3, #8]

  /* Configure I2Cx: Own Address1 and ack own address1 mode */
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8003908:	687b      	ldr	r3, [r7, #4]
 800390a:	68db      	ldr	r3, [r3, #12]
 800390c:	2b01      	cmp	r3, #1
 800390e:	d108      	bne.n	8003922 <HAL_I2C_Init+0x7e>
  {
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8003910:	687b      	ldr	r3, [r7, #4]
 8003912:	689a      	ldr	r2, [r3, #8]
 8003914:	687b      	ldr	r3, [r7, #4]
 8003916:	681b      	ldr	r3, [r3, #0]
 8003918:	2180      	movs	r1, #128	@ 0x80
 800391a:	0209      	lsls	r1, r1, #8
 800391c:	430a      	orrs	r2, r1
 800391e:	609a      	str	r2, [r3, #8]
 8003920:	e007      	b.n	8003932 <HAL_I2C_Init+0x8e>
  }
  else /* I2C_ADDRESSINGMODE_10BIT */
  {
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8003922:	687b      	ldr	r3, [r7, #4]
 8003924:	689a      	ldr	r2, [r3, #8]
 8003926:	687b      	ldr	r3, [r7, #4]
 8003928:	681b      	ldr	r3, [r3, #0]
 800392a:	2184      	movs	r1, #132	@ 0x84
 800392c:	0209      	lsls	r1, r1, #8
 800392e:	430a      	orrs	r2, r1
 8003930:	609a      	str	r2, [r3, #8]
  }

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Addressing Master mode */
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8003932:	687b      	ldr	r3, [r7, #4]
 8003934:	68db      	ldr	r3, [r3, #12]
 8003936:	2b02      	cmp	r3, #2
 8003938:	d109      	bne.n	800394e <HAL_I2C_Init+0xaa>
  {
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 800393a:	687b      	ldr	r3, [r7, #4]
 800393c:	681b      	ldr	r3, [r3, #0]
 800393e:	685a      	ldr	r2, [r3, #4]
 8003940:	687b      	ldr	r3, [r7, #4]
 8003942:	681b      	ldr	r3, [r3, #0]
 8003944:	2180      	movs	r1, #128	@ 0x80
 8003946:	0109      	lsls	r1, r1, #4
 8003948:	430a      	orrs	r2, r1
 800394a:	605a      	str	r2, [r3, #4]
 800394c:	e007      	b.n	800395e <HAL_I2C_Init+0xba>
  }
  else
  {
    /* Clear the I2C ADD10 bit */
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 800394e:	687b      	ldr	r3, [r7, #4]
 8003950:	681b      	ldr	r3, [r3, #0]
 8003952:	685a      	ldr	r2, [r3, #4]
 8003954:	687b      	ldr	r3, [r7, #4]
 8003956:	681b      	ldr	r3, [r3, #0]
 8003958:	4923      	ldr	r1, [pc, #140]	@ (80039e8 <HAL_I2C_Init+0x144>)
 800395a:	400a      	ands	r2, r1
 800395c:	605a      	str	r2, [r3, #4]
  }
  /* Enable the AUTOEND by default, and enable NACK (should be disable only during Slave process */
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 800395e:	687b      	ldr	r3, [r7, #4]
 8003960:	681b      	ldr	r3, [r3, #0]
 8003962:	685a      	ldr	r2, [r3, #4]
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	681b      	ldr	r3, [r3, #0]
 8003968:	4920      	ldr	r1, [pc, #128]	@ (80039ec <HAL_I2C_Init+0x148>)
 800396a:	430a      	orrs	r2, r1
 800396c:	605a      	str	r2, [r3, #4]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Disable Own Address2 before set the Own Address2 configuration */
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 800396e:	687b      	ldr	r3, [r7, #4]
 8003970:	681b      	ldr	r3, [r3, #0]
 8003972:	68da      	ldr	r2, [r3, #12]
 8003974:	687b      	ldr	r3, [r7, #4]
 8003976:	681b      	ldr	r3, [r3, #0]
 8003978:	491a      	ldr	r1, [pc, #104]	@ (80039e4 <HAL_I2C_Init+0x140>)
 800397a:	400a      	ands	r2, r1
 800397c:	60da      	str	r2, [r3, #12]

  /* Configure I2Cx: Dual mode and Own Address2 */
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 800397e:	687b      	ldr	r3, [r7, #4]
 8003980:	691a      	ldr	r2, [r3, #16]
 8003982:	687b      	ldr	r3, [r7, #4]
 8003984:	695b      	ldr	r3, [r3, #20]
 8003986:	431a      	orrs	r2, r3
 8003988:	0011      	movs	r1, r2
                          (hi2c->Init.OwnAddress2Masks << 8));
 800398a:	687b      	ldr	r3, [r7, #4]
 800398c:	699b      	ldr	r3, [r3, #24]
 800398e:	021a      	lsls	r2, r3, #8
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8003990:	687b      	ldr	r3, [r7, #4]
 8003992:	681b      	ldr	r3, [r3, #0]
 8003994:	430a      	orrs	r2, r1
 8003996:	60da      	str	r2, [r3, #12]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8003998:	687b      	ldr	r3, [r7, #4]
 800399a:	69d9      	ldr	r1, [r3, #28]
 800399c:	687b      	ldr	r3, [r7, #4]
 800399e:	6a1a      	ldr	r2, [r3, #32]
 80039a0:	687b      	ldr	r3, [r7, #4]
 80039a2:	681b      	ldr	r3, [r3, #0]
 80039a4:	430a      	orrs	r2, r1
 80039a6:	601a      	str	r2, [r3, #0]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 80039a8:	687b      	ldr	r3, [r7, #4]
 80039aa:	681b      	ldr	r3, [r3, #0]
 80039ac:	681a      	ldr	r2, [r3, #0]
 80039ae:	687b      	ldr	r3, [r7, #4]
 80039b0:	681b      	ldr	r3, [r3, #0]
 80039b2:	2101      	movs	r1, #1
 80039b4:	430a      	orrs	r2, r1
 80039b6:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80039b8:	687b      	ldr	r3, [r7, #4]
 80039ba:	2200      	movs	r2, #0
 80039bc:	645a      	str	r2, [r3, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 80039be:	687b      	ldr	r3, [r7, #4]
 80039c0:	2241      	movs	r2, #65	@ 0x41
 80039c2:	2120      	movs	r1, #32
 80039c4:	5499      	strb	r1, [r3, r2]
  hi2c->PreviousState = I2C_STATE_NONE;
 80039c6:	687b      	ldr	r3, [r7, #4]
 80039c8:	2200      	movs	r2, #0
 80039ca:	631a      	str	r2, [r3, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80039cc:	687b      	ldr	r3, [r7, #4]
 80039ce:	2242      	movs	r2, #66	@ 0x42
 80039d0:	2100      	movs	r1, #0
 80039d2:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 80039d4:	2300      	movs	r3, #0
}
 80039d6:	0018      	movs	r0, r3
 80039d8:	46bd      	mov	sp, r7
 80039da:	b002      	add	sp, #8
 80039dc:	bd80      	pop	{r7, pc}
 80039de:	46c0      	nop			@ (mov r8, r8)
 80039e0:	f0ffffff 	.word	0xf0ffffff
 80039e4:	ffff7fff 	.word	0xffff7fff
 80039e8:	fffff7ff 	.word	0xfffff7ff
 80039ec:	02008000 	.word	0x02008000

080039f0 <HAL_I2C_Mem_Read>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress,
                                   uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80039f0:	b590      	push	{r4, r7, lr}
 80039f2:	b089      	sub	sp, #36	@ 0x24
 80039f4:	af02      	add	r7, sp, #8
 80039f6:	60f8      	str	r0, [r7, #12]
 80039f8:	000c      	movs	r4, r1
 80039fa:	0010      	movs	r0, r2
 80039fc:	0019      	movs	r1, r3
 80039fe:	230a      	movs	r3, #10
 8003a00:	18fb      	adds	r3, r7, r3
 8003a02:	1c22      	adds	r2, r4, #0
 8003a04:	801a      	strh	r2, [r3, #0]
 8003a06:	2308      	movs	r3, #8
 8003a08:	18fb      	adds	r3, r7, r3
 8003a0a:	1c02      	adds	r2, r0, #0
 8003a0c:	801a      	strh	r2, [r3, #0]
 8003a0e:	1dbb      	adds	r3, r7, #6
 8003a10:	1c0a      	adds	r2, r1, #0
 8003a12:	801a      	strh	r2, [r3, #0]
  uint32_t tickstart;

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8003a14:	68fb      	ldr	r3, [r7, #12]
 8003a16:	2241      	movs	r2, #65	@ 0x41
 8003a18:	5c9b      	ldrb	r3, [r3, r2]
 8003a1a:	b2db      	uxtb	r3, r3
 8003a1c:	2b20      	cmp	r3, #32
 8003a1e:	d000      	beq.n	8003a22 <HAL_I2C_Mem_Read+0x32>
 8003a20:	e110      	b.n	8003c44 <HAL_I2C_Mem_Read+0x254>
  {
    if ((pData == NULL) || (Size == 0U))
 8003a22:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003a24:	2b00      	cmp	r3, #0
 8003a26:	d004      	beq.n	8003a32 <HAL_I2C_Mem_Read+0x42>
 8003a28:	232c      	movs	r3, #44	@ 0x2c
 8003a2a:	18fb      	adds	r3, r7, r3
 8003a2c:	881b      	ldrh	r3, [r3, #0]
 8003a2e:	2b00      	cmp	r3, #0
 8003a30:	d105      	bne.n	8003a3e <HAL_I2C_Mem_Read+0x4e>
    {
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8003a32:	68fb      	ldr	r3, [r7, #12]
 8003a34:	2280      	movs	r2, #128	@ 0x80
 8003a36:	0092      	lsls	r2, r2, #2
 8003a38:	645a      	str	r2, [r3, #68]	@ 0x44
      return  HAL_ERROR;
 8003a3a:	2301      	movs	r3, #1
 8003a3c:	e103      	b.n	8003c46 <HAL_I2C_Mem_Read+0x256>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8003a3e:	68fb      	ldr	r3, [r7, #12]
 8003a40:	2240      	movs	r2, #64	@ 0x40
 8003a42:	5c9b      	ldrb	r3, [r3, r2]
 8003a44:	2b01      	cmp	r3, #1
 8003a46:	d101      	bne.n	8003a4c <HAL_I2C_Mem_Read+0x5c>
 8003a48:	2302      	movs	r3, #2
 8003a4a:	e0fc      	b.n	8003c46 <HAL_I2C_Mem_Read+0x256>
 8003a4c:	68fb      	ldr	r3, [r7, #12]
 8003a4e:	2240      	movs	r2, #64	@ 0x40
 8003a50:	2101      	movs	r1, #1
 8003a52:	5499      	strb	r1, [r3, r2]

    /* Init tickstart for timeout management*/
    tickstart = HAL_GetTick();
 8003a54:	f7ff fcb6 	bl	80033c4 <HAL_GetTick>
 8003a58:	0003      	movs	r3, r0
 8003a5a:	617b      	str	r3, [r7, #20]

    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8003a5c:	2380      	movs	r3, #128	@ 0x80
 8003a5e:	0219      	lsls	r1, r3, #8
 8003a60:	68f8      	ldr	r0, [r7, #12]
 8003a62:	697b      	ldr	r3, [r7, #20]
 8003a64:	9300      	str	r3, [sp, #0]
 8003a66:	2319      	movs	r3, #25
 8003a68:	2201      	movs	r2, #1
 8003a6a:	f000 f979 	bl	8003d60 <I2C_WaitOnFlagUntilTimeout>
 8003a6e:	1e03      	subs	r3, r0, #0
 8003a70:	d001      	beq.n	8003a76 <HAL_I2C_Mem_Read+0x86>
    {
      return HAL_ERROR;
 8003a72:	2301      	movs	r3, #1
 8003a74:	e0e7      	b.n	8003c46 <HAL_I2C_Mem_Read+0x256>
    }

    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8003a76:	68fb      	ldr	r3, [r7, #12]
 8003a78:	2241      	movs	r2, #65	@ 0x41
 8003a7a:	2122      	movs	r1, #34	@ 0x22
 8003a7c:	5499      	strb	r1, [r3, r2]
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8003a7e:	68fb      	ldr	r3, [r7, #12]
 8003a80:	2242      	movs	r2, #66	@ 0x42
 8003a82:	2140      	movs	r1, #64	@ 0x40
 8003a84:	5499      	strb	r1, [r3, r2]
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003a86:	68fb      	ldr	r3, [r7, #12]
 8003a88:	2200      	movs	r2, #0
 8003a8a:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Prepare transfer parameters */
    hi2c->pBuffPtr  = pData;
 8003a8c:	68fb      	ldr	r3, [r7, #12]
 8003a8e:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8003a90:	625a      	str	r2, [r3, #36]	@ 0x24
    hi2c->XferCount = Size;
 8003a92:	68fb      	ldr	r3, [r7, #12]
 8003a94:	222c      	movs	r2, #44	@ 0x2c
 8003a96:	18ba      	adds	r2, r7, r2
 8003a98:	8812      	ldrh	r2, [r2, #0]
 8003a9a:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2c->XferISR   = NULL;
 8003a9c:	68fb      	ldr	r3, [r7, #12]
 8003a9e:	2200      	movs	r2, #0
 8003aa0:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8003aa2:	1dbb      	adds	r3, r7, #6
 8003aa4:	881c      	ldrh	r4, [r3, #0]
 8003aa6:	2308      	movs	r3, #8
 8003aa8:	18fb      	adds	r3, r7, r3
 8003aaa:	881a      	ldrh	r2, [r3, #0]
 8003aac:	230a      	movs	r3, #10
 8003aae:	18fb      	adds	r3, r7, r3
 8003ab0:	8819      	ldrh	r1, [r3, #0]
 8003ab2:	68f8      	ldr	r0, [r7, #12]
 8003ab4:	697b      	ldr	r3, [r7, #20]
 8003ab6:	9301      	str	r3, [sp, #4]
 8003ab8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003aba:	9300      	str	r3, [sp, #0]
 8003abc:	0023      	movs	r3, r4
 8003abe:	f000 f8cb 	bl	8003c58 <I2C_RequestMemoryRead>
 8003ac2:	1e03      	subs	r3, r0, #0
 8003ac4:	d005      	beq.n	8003ad2 <HAL_I2C_Mem_Read+0xe2>
    {
      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8003ac6:	68fb      	ldr	r3, [r7, #12]
 8003ac8:	2240      	movs	r2, #64	@ 0x40
 8003aca:	2100      	movs	r1, #0
 8003acc:	5499      	strb	r1, [r3, r2]
      return HAL_ERROR;
 8003ace:	2301      	movs	r3, #1
 8003ad0:	e0b9      	b.n	8003c46 <HAL_I2C_Mem_Read+0x256>
    }

    /* Send Slave Address */
    /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8003ad2:	68fb      	ldr	r3, [r7, #12]
 8003ad4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003ad6:	b29b      	uxth	r3, r3
 8003ad8:	2bff      	cmp	r3, #255	@ 0xff
 8003ada:	d911      	bls.n	8003b00 <HAL_I2C_Mem_Read+0x110>
    {
      hi2c->XferSize = 1U;
 8003adc:	68fb      	ldr	r3, [r7, #12]
 8003ade:	2201      	movs	r2, #1
 8003ae0:	851a      	strh	r2, [r3, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8003ae2:	68fb      	ldr	r3, [r7, #12]
 8003ae4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003ae6:	b2da      	uxtb	r2, r3
 8003ae8:	2380      	movs	r3, #128	@ 0x80
 8003aea:	045c      	lsls	r4, r3, #17
 8003aec:	230a      	movs	r3, #10
 8003aee:	18fb      	adds	r3, r7, r3
 8003af0:	8819      	ldrh	r1, [r3, #0]
 8003af2:	68f8      	ldr	r0, [r7, #12]
 8003af4:	4b56      	ldr	r3, [pc, #344]	@ (8003c50 <HAL_I2C_Mem_Read+0x260>)
 8003af6:	9300      	str	r3, [sp, #0]
 8003af8:	0023      	movs	r3, r4
 8003afa:	f000 fb0b 	bl	8004114 <I2C_TransferConfig>
 8003afe:	e012      	b.n	8003b26 <HAL_I2C_Mem_Read+0x136>
                         I2C_GENERATE_START_READ);
    }
    else
    {
      hi2c->XferSize = hi2c->XferCount;
 8003b00:	68fb      	ldr	r3, [r7, #12]
 8003b02:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003b04:	b29a      	uxth	r2, r3
 8003b06:	68fb      	ldr	r3, [r7, #12]
 8003b08:	851a      	strh	r2, [r3, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8003b0a:	68fb      	ldr	r3, [r7, #12]
 8003b0c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003b0e:	b2da      	uxtb	r2, r3
 8003b10:	2380      	movs	r3, #128	@ 0x80
 8003b12:	049c      	lsls	r4, r3, #18
 8003b14:	230a      	movs	r3, #10
 8003b16:	18fb      	adds	r3, r7, r3
 8003b18:	8819      	ldrh	r1, [r3, #0]
 8003b1a:	68f8      	ldr	r0, [r7, #12]
 8003b1c:	4b4c      	ldr	r3, [pc, #304]	@ (8003c50 <HAL_I2C_Mem_Read+0x260>)
 8003b1e:	9300      	str	r3, [sp, #0]
 8003b20:	0023      	movs	r3, r4
 8003b22:	f000 faf7 	bl	8004114 <I2C_TransferConfig>
    }

    do
    {
      /* Wait until RXNE flag is set */
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 8003b26:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8003b28:	68f8      	ldr	r0, [r7, #12]
 8003b2a:	697b      	ldr	r3, [r7, #20]
 8003b2c:	9300      	str	r3, [sp, #0]
 8003b2e:	0013      	movs	r3, r2
 8003b30:	2200      	movs	r2, #0
 8003b32:	2104      	movs	r1, #4
 8003b34:	f000 f914 	bl	8003d60 <I2C_WaitOnFlagUntilTimeout>
 8003b38:	1e03      	subs	r3, r0, #0
 8003b3a:	d001      	beq.n	8003b40 <HAL_I2C_Mem_Read+0x150>
      {
        return HAL_ERROR;
 8003b3c:	2301      	movs	r3, #1
 8003b3e:	e082      	b.n	8003c46 <HAL_I2C_Mem_Read+0x256>
      }

      /* Read data from RXDR */
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 8003b40:	68fb      	ldr	r3, [r7, #12]
 8003b42:	681b      	ldr	r3, [r3, #0]
 8003b44:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8003b46:	68fb      	ldr	r3, [r7, #12]
 8003b48:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003b4a:	b2d2      	uxtb	r2, r2
 8003b4c:	701a      	strb	r2, [r3, #0]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8003b4e:	68fb      	ldr	r3, [r7, #12]
 8003b50:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003b52:	1c5a      	adds	r2, r3, #1
 8003b54:	68fb      	ldr	r3, [r7, #12]
 8003b56:	625a      	str	r2, [r3, #36]	@ 0x24

      hi2c->XferSize--;
 8003b58:	68fb      	ldr	r3, [r7, #12]
 8003b5a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003b5c:	3b01      	subs	r3, #1
 8003b5e:	b29a      	uxth	r2, r3
 8003b60:	68fb      	ldr	r3, [r7, #12]
 8003b62:	851a      	strh	r2, [r3, #40]	@ 0x28
      hi2c->XferCount--;
 8003b64:	68fb      	ldr	r3, [r7, #12]
 8003b66:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003b68:	b29b      	uxth	r3, r3
 8003b6a:	3b01      	subs	r3, #1
 8003b6c:	b29a      	uxth	r2, r3
 8003b6e:	68fb      	ldr	r3, [r7, #12]
 8003b70:	855a      	strh	r2, [r3, #42]	@ 0x2a

      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8003b72:	68fb      	ldr	r3, [r7, #12]
 8003b74:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003b76:	b29b      	uxth	r3, r3
 8003b78:	2b00      	cmp	r3, #0
 8003b7a:	d03a      	beq.n	8003bf2 <HAL_I2C_Mem_Read+0x202>
 8003b7c:	68fb      	ldr	r3, [r7, #12]
 8003b7e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003b80:	2b00      	cmp	r3, #0
 8003b82:	d136      	bne.n	8003bf2 <HAL_I2C_Mem_Read+0x202>
      {
        /* Wait until TCR flag is set */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8003b84:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8003b86:	68f8      	ldr	r0, [r7, #12]
 8003b88:	697b      	ldr	r3, [r7, #20]
 8003b8a:	9300      	str	r3, [sp, #0]
 8003b8c:	0013      	movs	r3, r2
 8003b8e:	2200      	movs	r2, #0
 8003b90:	2180      	movs	r1, #128	@ 0x80
 8003b92:	f000 f8e5 	bl	8003d60 <I2C_WaitOnFlagUntilTimeout>
 8003b96:	1e03      	subs	r3, r0, #0
 8003b98:	d001      	beq.n	8003b9e <HAL_I2C_Mem_Read+0x1ae>
        {
          return HAL_ERROR;
 8003b9a:	2301      	movs	r3, #1
 8003b9c:	e053      	b.n	8003c46 <HAL_I2C_Mem_Read+0x256>
        }

        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8003b9e:	68fb      	ldr	r3, [r7, #12]
 8003ba0:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003ba2:	b29b      	uxth	r3, r3
 8003ba4:	2bff      	cmp	r3, #255	@ 0xff
 8003ba6:	d911      	bls.n	8003bcc <HAL_I2C_Mem_Read+0x1dc>
        {
          hi2c->XferSize = 1U;
 8003ba8:	68fb      	ldr	r3, [r7, #12]
 8003baa:	2201      	movs	r2, #1
 8003bac:	851a      	strh	r2, [r3, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8003bae:	68fb      	ldr	r3, [r7, #12]
 8003bb0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003bb2:	b2da      	uxtb	r2, r3
 8003bb4:	2380      	movs	r3, #128	@ 0x80
 8003bb6:	045c      	lsls	r4, r3, #17
 8003bb8:	230a      	movs	r3, #10
 8003bba:	18fb      	adds	r3, r7, r3
 8003bbc:	8819      	ldrh	r1, [r3, #0]
 8003bbe:	68f8      	ldr	r0, [r7, #12]
 8003bc0:	2300      	movs	r3, #0
 8003bc2:	9300      	str	r3, [sp, #0]
 8003bc4:	0023      	movs	r3, r4
 8003bc6:	f000 faa5 	bl	8004114 <I2C_TransferConfig>
 8003bca:	e012      	b.n	8003bf2 <HAL_I2C_Mem_Read+0x202>
                             I2C_NO_STARTSTOP);
        }
        else
        {
          hi2c->XferSize = hi2c->XferCount;
 8003bcc:	68fb      	ldr	r3, [r7, #12]
 8003bce:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003bd0:	b29a      	uxth	r2, r3
 8003bd2:	68fb      	ldr	r3, [r7, #12]
 8003bd4:	851a      	strh	r2, [r3, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8003bd6:	68fb      	ldr	r3, [r7, #12]
 8003bd8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003bda:	b2da      	uxtb	r2, r3
 8003bdc:	2380      	movs	r3, #128	@ 0x80
 8003bde:	049c      	lsls	r4, r3, #18
 8003be0:	230a      	movs	r3, #10
 8003be2:	18fb      	adds	r3, r7, r3
 8003be4:	8819      	ldrh	r1, [r3, #0]
 8003be6:	68f8      	ldr	r0, [r7, #12]
 8003be8:	2300      	movs	r3, #0
 8003bea:	9300      	str	r3, [sp, #0]
 8003bec:	0023      	movs	r3, r4
 8003bee:	f000 fa91 	bl	8004114 <I2C_TransferConfig>
                             I2C_NO_STARTSTOP);
        }
      }
    } while (hi2c->XferCount > 0U);
 8003bf2:	68fb      	ldr	r3, [r7, #12]
 8003bf4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003bf6:	b29b      	uxth	r3, r3
 8003bf8:	2b00      	cmp	r3, #0
 8003bfa:	d194      	bne.n	8003b26 <HAL_I2C_Mem_Read+0x136>

    /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
    /* Wait until STOPF flag is reset */
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003bfc:	697a      	ldr	r2, [r7, #20]
 8003bfe:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8003c00:	68fb      	ldr	r3, [r7, #12]
 8003c02:	0018      	movs	r0, r3
 8003c04:	f000 f94a 	bl	8003e9c <I2C_WaitOnSTOPFlagUntilTimeout>
 8003c08:	1e03      	subs	r3, r0, #0
 8003c0a:	d001      	beq.n	8003c10 <HAL_I2C_Mem_Read+0x220>
    {
      return HAL_ERROR;
 8003c0c:	2301      	movs	r3, #1
 8003c0e:	e01a      	b.n	8003c46 <HAL_I2C_Mem_Read+0x256>
    }

    /* Clear STOP Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8003c10:	68fb      	ldr	r3, [r7, #12]
 8003c12:	681b      	ldr	r3, [r3, #0]
 8003c14:	2220      	movs	r2, #32
 8003c16:	61da      	str	r2, [r3, #28]

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 8003c18:	68fb      	ldr	r3, [r7, #12]
 8003c1a:	681b      	ldr	r3, [r3, #0]
 8003c1c:	685a      	ldr	r2, [r3, #4]
 8003c1e:	68fb      	ldr	r3, [r7, #12]
 8003c20:	681b      	ldr	r3, [r3, #0]
 8003c22:	490c      	ldr	r1, [pc, #48]	@ (8003c54 <HAL_I2C_Mem_Read+0x264>)
 8003c24:	400a      	ands	r2, r1
 8003c26:	605a      	str	r2, [r3, #4]

    hi2c->State = HAL_I2C_STATE_READY;
 8003c28:	68fb      	ldr	r3, [r7, #12]
 8003c2a:	2241      	movs	r2, #65	@ 0x41
 8003c2c:	2120      	movs	r1, #32
 8003c2e:	5499      	strb	r1, [r3, r2]
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8003c30:	68fb      	ldr	r3, [r7, #12]
 8003c32:	2242      	movs	r2, #66	@ 0x42
 8003c34:	2100      	movs	r1, #0
 8003c36:	5499      	strb	r1, [r3, r2]

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003c38:	68fb      	ldr	r3, [r7, #12]
 8003c3a:	2240      	movs	r2, #64	@ 0x40
 8003c3c:	2100      	movs	r1, #0
 8003c3e:	5499      	strb	r1, [r3, r2]

    return HAL_OK;
 8003c40:	2300      	movs	r3, #0
 8003c42:	e000      	b.n	8003c46 <HAL_I2C_Mem_Read+0x256>
  }
  else
  {
    return HAL_BUSY;
 8003c44:	2302      	movs	r3, #2
  }
}
 8003c46:	0018      	movs	r0, r3
 8003c48:	46bd      	mov	sp, r7
 8003c4a:	b007      	add	sp, #28
 8003c4c:	bd90      	pop	{r4, r7, pc}
 8003c4e:	46c0      	nop			@ (mov r8, r8)
 8003c50:	80002400 	.word	0x80002400
 8003c54:	fe00e800 	.word	0xfe00e800

08003c58 <I2C_RequestMemoryRead>:
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress,
                                               uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout,
                                               uint32_t Tickstart)
{
 8003c58:	b5b0      	push	{r4, r5, r7, lr}
 8003c5a:	b086      	sub	sp, #24
 8003c5c:	af02      	add	r7, sp, #8
 8003c5e:	60f8      	str	r0, [r7, #12]
 8003c60:	000c      	movs	r4, r1
 8003c62:	0010      	movs	r0, r2
 8003c64:	0019      	movs	r1, r3
 8003c66:	250a      	movs	r5, #10
 8003c68:	197b      	adds	r3, r7, r5
 8003c6a:	1c22      	adds	r2, r4, #0
 8003c6c:	801a      	strh	r2, [r3, #0]
 8003c6e:	2308      	movs	r3, #8
 8003c70:	18fb      	adds	r3, r7, r3
 8003c72:	1c02      	adds	r2, r0, #0
 8003c74:	801a      	strh	r2, [r3, #0]
 8003c76:	1dbb      	adds	r3, r7, #6
 8003c78:	1c0a      	adds	r2, r1, #0
 8003c7a:	801a      	strh	r2, [r3, #0]
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8003c7c:	1dbb      	adds	r3, r7, #6
 8003c7e:	881b      	ldrh	r3, [r3, #0]
 8003c80:	b2da      	uxtb	r2, r3
 8003c82:	197b      	adds	r3, r7, r5
 8003c84:	8819      	ldrh	r1, [r3, #0]
 8003c86:	68f8      	ldr	r0, [r7, #12]
 8003c88:	4b23      	ldr	r3, [pc, #140]	@ (8003d18 <I2C_RequestMemoryRead+0xc0>)
 8003c8a:	9300      	str	r3, [sp, #0]
 8003c8c:	2300      	movs	r3, #0
 8003c8e:	f000 fa41 	bl	8004114 <I2C_TransferConfig>

  /* Wait until TXIS flag is set */
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003c92:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003c94:	6a39      	ldr	r1, [r7, #32]
 8003c96:	68fb      	ldr	r3, [r7, #12]
 8003c98:	0018      	movs	r0, r3
 8003c9a:	f000 f8b9 	bl	8003e10 <I2C_WaitOnTXISFlagUntilTimeout>
 8003c9e:	1e03      	subs	r3, r0, #0
 8003ca0:	d001      	beq.n	8003ca6 <I2C_RequestMemoryRead+0x4e>
  {
    return HAL_ERROR;
 8003ca2:	2301      	movs	r3, #1
 8003ca4:	e033      	b.n	8003d0e <I2C_RequestMemoryRead+0xb6>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8003ca6:	1dbb      	adds	r3, r7, #6
 8003ca8:	881b      	ldrh	r3, [r3, #0]
 8003caa:	2b01      	cmp	r3, #1
 8003cac:	d107      	bne.n	8003cbe <I2C_RequestMemoryRead+0x66>
  {
    /* Send Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8003cae:	2308      	movs	r3, #8
 8003cb0:	18fb      	adds	r3, r7, r3
 8003cb2:	881b      	ldrh	r3, [r3, #0]
 8003cb4:	b2da      	uxtb	r2, r3
 8003cb6:	68fb      	ldr	r3, [r7, #12]
 8003cb8:	681b      	ldr	r3, [r3, #0]
 8003cba:	629a      	str	r2, [r3, #40]	@ 0x28
 8003cbc:	e019      	b.n	8003cf2 <I2C_RequestMemoryRead+0x9a>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8003cbe:	2308      	movs	r3, #8
 8003cc0:	18fb      	adds	r3, r7, r3
 8003cc2:	881b      	ldrh	r3, [r3, #0]
 8003cc4:	0a1b      	lsrs	r3, r3, #8
 8003cc6:	b29b      	uxth	r3, r3
 8003cc8:	b2da      	uxtb	r2, r3
 8003cca:	68fb      	ldr	r3, [r7, #12]
 8003ccc:	681b      	ldr	r3, [r3, #0]
 8003cce:	629a      	str	r2, [r3, #40]	@ 0x28

    /* Wait until TXIS flag is set */
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003cd0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003cd2:	6a39      	ldr	r1, [r7, #32]
 8003cd4:	68fb      	ldr	r3, [r7, #12]
 8003cd6:	0018      	movs	r0, r3
 8003cd8:	f000 f89a 	bl	8003e10 <I2C_WaitOnTXISFlagUntilTimeout>
 8003cdc:	1e03      	subs	r3, r0, #0
 8003cde:	d001      	beq.n	8003ce4 <I2C_RequestMemoryRead+0x8c>
    {
      return HAL_ERROR;
 8003ce0:	2301      	movs	r3, #1
 8003ce2:	e014      	b.n	8003d0e <I2C_RequestMemoryRead+0xb6>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8003ce4:	2308      	movs	r3, #8
 8003ce6:	18fb      	adds	r3, r7, r3
 8003ce8:	881b      	ldrh	r3, [r3, #0]
 8003cea:	b2da      	uxtb	r2, r3
 8003cec:	68fb      	ldr	r3, [r7, #12]
 8003cee:	681b      	ldr	r3, [r3, #0]
 8003cf0:	629a      	str	r2, [r3, #40]	@ 0x28
  }

  /* Wait until TC flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8003cf2:	6a3a      	ldr	r2, [r7, #32]
 8003cf4:	68f8      	ldr	r0, [r7, #12]
 8003cf6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003cf8:	9300      	str	r3, [sp, #0]
 8003cfa:	0013      	movs	r3, r2
 8003cfc:	2200      	movs	r2, #0
 8003cfe:	2140      	movs	r1, #64	@ 0x40
 8003d00:	f000 f82e 	bl	8003d60 <I2C_WaitOnFlagUntilTimeout>
 8003d04:	1e03      	subs	r3, r0, #0
 8003d06:	d001      	beq.n	8003d0c <I2C_RequestMemoryRead+0xb4>
  {
    return HAL_ERROR;
 8003d08:	2301      	movs	r3, #1
 8003d0a:	e000      	b.n	8003d0e <I2C_RequestMemoryRead+0xb6>
  }

  return HAL_OK;
 8003d0c:	2300      	movs	r3, #0
}
 8003d0e:	0018      	movs	r0, r3
 8003d10:	46bd      	mov	sp, r7
 8003d12:	b004      	add	sp, #16
 8003d14:	bdb0      	pop	{r4, r5, r7, pc}
 8003d16:	46c0      	nop			@ (mov r8, r8)
 8003d18:	80002000 	.word	0x80002000

08003d1c <I2C_Flush_TXDR>:
  * @brief  I2C Tx data register flush process.
  * @param  hi2c I2C handle.
  * @retval None
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
 8003d1c:	b580      	push	{r7, lr}
 8003d1e:	b082      	sub	sp, #8
 8003d20:	af00      	add	r7, sp, #0
 8003d22:	6078      	str	r0, [r7, #4]
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8003d24:	687b      	ldr	r3, [r7, #4]
 8003d26:	681b      	ldr	r3, [r3, #0]
 8003d28:	699b      	ldr	r3, [r3, #24]
 8003d2a:	2202      	movs	r2, #2
 8003d2c:	4013      	ands	r3, r2
 8003d2e:	2b02      	cmp	r3, #2
 8003d30:	d103      	bne.n	8003d3a <I2C_Flush_TXDR+0x1e>
  {
    hi2c->Instance->TXDR = 0x00U;
 8003d32:	687b      	ldr	r3, [r7, #4]
 8003d34:	681b      	ldr	r3, [r3, #0]
 8003d36:	2200      	movs	r2, #0
 8003d38:	629a      	str	r2, [r3, #40]	@ 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8003d3a:	687b      	ldr	r3, [r7, #4]
 8003d3c:	681b      	ldr	r3, [r3, #0]
 8003d3e:	699b      	ldr	r3, [r3, #24]
 8003d40:	2201      	movs	r2, #1
 8003d42:	4013      	ands	r3, r2
 8003d44:	2b01      	cmp	r3, #1
 8003d46:	d007      	beq.n	8003d58 <I2C_Flush_TXDR+0x3c>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8003d48:	687b      	ldr	r3, [r7, #4]
 8003d4a:	681b      	ldr	r3, [r3, #0]
 8003d4c:	699a      	ldr	r2, [r3, #24]
 8003d4e:	687b      	ldr	r3, [r7, #4]
 8003d50:	681b      	ldr	r3, [r3, #0]
 8003d52:	2101      	movs	r1, #1
 8003d54:	430a      	orrs	r2, r1
 8003d56:	619a      	str	r2, [r3, #24]
  }
}
 8003d58:	46c0      	nop			@ (mov r8, r8)
 8003d5a:	46bd      	mov	sp, r7
 8003d5c:	b002      	add	sp, #8
 8003d5e:	bd80      	pop	{r7, pc}

08003d60 <I2C_WaitOnFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
                                                    uint32_t Timeout, uint32_t Tickstart)
{
 8003d60:	b580      	push	{r7, lr}
 8003d62:	b084      	sub	sp, #16
 8003d64:	af00      	add	r7, sp, #0
 8003d66:	60f8      	str	r0, [r7, #12]
 8003d68:	60b9      	str	r1, [r7, #8]
 8003d6a:	603b      	str	r3, [r7, #0]
 8003d6c:	1dfb      	adds	r3, r7, #7
 8003d6e:	701a      	strb	r2, [r3, #0]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8003d70:	e03a      	b.n	8003de8 <I2C_WaitOnFlagUntilTimeout+0x88>
  {
    /* Check if an error is detected */
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8003d72:	69ba      	ldr	r2, [r7, #24]
 8003d74:	6839      	ldr	r1, [r7, #0]
 8003d76:	68fb      	ldr	r3, [r7, #12]
 8003d78:	0018      	movs	r0, r3
 8003d7a:	f000 f8d3 	bl	8003f24 <I2C_IsErrorOccurred>
 8003d7e:	1e03      	subs	r3, r0, #0
 8003d80:	d001      	beq.n	8003d86 <I2C_WaitOnFlagUntilTimeout+0x26>
    {
      return HAL_ERROR;
 8003d82:	2301      	movs	r3, #1
 8003d84:	e040      	b.n	8003e08 <I2C_WaitOnFlagUntilTimeout+0xa8>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8003d86:	683b      	ldr	r3, [r7, #0]
 8003d88:	3301      	adds	r3, #1
 8003d8a:	d02d      	beq.n	8003de8 <I2C_WaitOnFlagUntilTimeout+0x88>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003d8c:	f7ff fb1a 	bl	80033c4 <HAL_GetTick>
 8003d90:	0002      	movs	r2, r0
 8003d92:	69bb      	ldr	r3, [r7, #24]
 8003d94:	1ad3      	subs	r3, r2, r3
 8003d96:	683a      	ldr	r2, [r7, #0]
 8003d98:	429a      	cmp	r2, r3
 8003d9a:	d302      	bcc.n	8003da2 <I2C_WaitOnFlagUntilTimeout+0x42>
 8003d9c:	683b      	ldr	r3, [r7, #0]
 8003d9e:	2b00      	cmp	r3, #0
 8003da0:	d122      	bne.n	8003de8 <I2C_WaitOnFlagUntilTimeout+0x88>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8003da2:	68fb      	ldr	r3, [r7, #12]
 8003da4:	681b      	ldr	r3, [r3, #0]
 8003da6:	699b      	ldr	r3, [r3, #24]
 8003da8:	68ba      	ldr	r2, [r7, #8]
 8003daa:	4013      	ands	r3, r2
 8003dac:	68ba      	ldr	r2, [r7, #8]
 8003dae:	1ad3      	subs	r3, r2, r3
 8003db0:	425a      	negs	r2, r3
 8003db2:	4153      	adcs	r3, r2
 8003db4:	b2db      	uxtb	r3, r3
 8003db6:	001a      	movs	r2, r3
 8003db8:	1dfb      	adds	r3, r7, #7
 8003dba:	781b      	ldrb	r3, [r3, #0]
 8003dbc:	429a      	cmp	r2, r3
 8003dbe:	d113      	bne.n	8003de8 <I2C_WaitOnFlagUntilTimeout+0x88>
        {
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8003dc0:	68fb      	ldr	r3, [r7, #12]
 8003dc2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003dc4:	2220      	movs	r2, #32
 8003dc6:	431a      	orrs	r2, r3
 8003dc8:	68fb      	ldr	r3, [r7, #12]
 8003dca:	645a      	str	r2, [r3, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8003dcc:	68fb      	ldr	r3, [r7, #12]
 8003dce:	2241      	movs	r2, #65	@ 0x41
 8003dd0:	2120      	movs	r1, #32
 8003dd2:	5499      	strb	r1, [r3, r2]
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8003dd4:	68fb      	ldr	r3, [r7, #12]
 8003dd6:	2242      	movs	r2, #66	@ 0x42
 8003dd8:	2100      	movs	r1, #0
 8003dda:	5499      	strb	r1, [r3, r2]

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8003ddc:	68fb      	ldr	r3, [r7, #12]
 8003dde:	2240      	movs	r2, #64	@ 0x40
 8003de0:	2100      	movs	r1, #0
 8003de2:	5499      	strb	r1, [r3, r2]
          return HAL_ERROR;
 8003de4:	2301      	movs	r3, #1
 8003de6:	e00f      	b.n	8003e08 <I2C_WaitOnFlagUntilTimeout+0xa8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8003de8:	68fb      	ldr	r3, [r7, #12]
 8003dea:	681b      	ldr	r3, [r3, #0]
 8003dec:	699b      	ldr	r3, [r3, #24]
 8003dee:	68ba      	ldr	r2, [r7, #8]
 8003df0:	4013      	ands	r3, r2
 8003df2:	68ba      	ldr	r2, [r7, #8]
 8003df4:	1ad3      	subs	r3, r2, r3
 8003df6:	425a      	negs	r2, r3
 8003df8:	4153      	adcs	r3, r2
 8003dfa:	b2db      	uxtb	r3, r3
 8003dfc:	001a      	movs	r2, r3
 8003dfe:	1dfb      	adds	r3, r7, #7
 8003e00:	781b      	ldrb	r3, [r3, #0]
 8003e02:	429a      	cmp	r2, r3
 8003e04:	d0b5      	beq.n	8003d72 <I2C_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 8003e06:	2300      	movs	r3, #0
}
 8003e08:	0018      	movs	r0, r3
 8003e0a:	46bd      	mov	sp, r7
 8003e0c:	b004      	add	sp, #16
 8003e0e:	bd80      	pop	{r7, pc}

08003e10 <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
 8003e10:	b580      	push	{r7, lr}
 8003e12:	b084      	sub	sp, #16
 8003e14:	af00      	add	r7, sp, #0
 8003e16:	60f8      	str	r0, [r7, #12]
 8003e18:	60b9      	str	r1, [r7, #8]
 8003e1a:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8003e1c:	e032      	b.n	8003e84 <I2C_WaitOnTXISFlagUntilTimeout+0x74>
  {
    /* Check if an error is detected */
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8003e1e:	687a      	ldr	r2, [r7, #4]
 8003e20:	68b9      	ldr	r1, [r7, #8]
 8003e22:	68fb      	ldr	r3, [r7, #12]
 8003e24:	0018      	movs	r0, r3
 8003e26:	f000 f87d 	bl	8003f24 <I2C_IsErrorOccurred>
 8003e2a:	1e03      	subs	r3, r0, #0
 8003e2c:	d001      	beq.n	8003e32 <I2C_WaitOnTXISFlagUntilTimeout+0x22>
    {
      return HAL_ERROR;
 8003e2e:	2301      	movs	r3, #1
 8003e30:	e030      	b.n	8003e94 <I2C_WaitOnTXISFlagUntilTimeout+0x84>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8003e32:	68bb      	ldr	r3, [r7, #8]
 8003e34:	3301      	adds	r3, #1
 8003e36:	d025      	beq.n	8003e84 <I2C_WaitOnTXISFlagUntilTimeout+0x74>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003e38:	f7ff fac4 	bl	80033c4 <HAL_GetTick>
 8003e3c:	0002      	movs	r2, r0
 8003e3e:	687b      	ldr	r3, [r7, #4]
 8003e40:	1ad3      	subs	r3, r2, r3
 8003e42:	68ba      	ldr	r2, [r7, #8]
 8003e44:	429a      	cmp	r2, r3
 8003e46:	d302      	bcc.n	8003e4e <I2C_WaitOnTXISFlagUntilTimeout+0x3e>
 8003e48:	68bb      	ldr	r3, [r7, #8]
 8003e4a:	2b00      	cmp	r3, #0
 8003e4c:	d11a      	bne.n	8003e84 <I2C_WaitOnTXISFlagUntilTimeout+0x74>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
 8003e4e:	68fb      	ldr	r3, [r7, #12]
 8003e50:	681b      	ldr	r3, [r3, #0]
 8003e52:	699b      	ldr	r3, [r3, #24]
 8003e54:	2202      	movs	r2, #2
 8003e56:	4013      	ands	r3, r2
 8003e58:	2b02      	cmp	r3, #2
 8003e5a:	d013      	beq.n	8003e84 <I2C_WaitOnTXISFlagUntilTimeout+0x74>
        {
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8003e5c:	68fb      	ldr	r3, [r7, #12]
 8003e5e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003e60:	2220      	movs	r2, #32
 8003e62:	431a      	orrs	r2, r3
 8003e64:	68fb      	ldr	r3, [r7, #12]
 8003e66:	645a      	str	r2, [r3, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8003e68:	68fb      	ldr	r3, [r7, #12]
 8003e6a:	2241      	movs	r2, #65	@ 0x41
 8003e6c:	2120      	movs	r1, #32
 8003e6e:	5499      	strb	r1, [r3, r2]
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8003e70:	68fb      	ldr	r3, [r7, #12]
 8003e72:	2242      	movs	r2, #66	@ 0x42
 8003e74:	2100      	movs	r1, #0
 8003e76:	5499      	strb	r1, [r3, r2]

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8003e78:	68fb      	ldr	r3, [r7, #12]
 8003e7a:	2240      	movs	r2, #64	@ 0x40
 8003e7c:	2100      	movs	r1, #0
 8003e7e:	5499      	strb	r1, [r3, r2]

          return HAL_ERROR;
 8003e80:	2301      	movs	r3, #1
 8003e82:	e007      	b.n	8003e94 <I2C_WaitOnTXISFlagUntilTimeout+0x84>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8003e84:	68fb      	ldr	r3, [r7, #12]
 8003e86:	681b      	ldr	r3, [r3, #0]
 8003e88:	699b      	ldr	r3, [r3, #24]
 8003e8a:	2202      	movs	r2, #2
 8003e8c:	4013      	ands	r3, r2
 8003e8e:	2b02      	cmp	r3, #2
 8003e90:	d1c5      	bne.n	8003e1e <I2C_WaitOnTXISFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 8003e92:	2300      	movs	r3, #0
}
 8003e94:	0018      	movs	r0, r3
 8003e96:	46bd      	mov	sp, r7
 8003e98:	b004      	add	sp, #16
 8003e9a:	bd80      	pop	{r7, pc}

08003e9c <I2C_WaitOnSTOPFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
 8003e9c:	b580      	push	{r7, lr}
 8003e9e:	b084      	sub	sp, #16
 8003ea0:	af00      	add	r7, sp, #0
 8003ea2:	60f8      	str	r0, [r7, #12]
 8003ea4:	60b9      	str	r1, [r7, #8]
 8003ea6:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8003ea8:	e02f      	b.n	8003f0a <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
  {
    /* Check if an error is detected */
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8003eaa:	687a      	ldr	r2, [r7, #4]
 8003eac:	68b9      	ldr	r1, [r7, #8]
 8003eae:	68fb      	ldr	r3, [r7, #12]
 8003eb0:	0018      	movs	r0, r3
 8003eb2:	f000 f837 	bl	8003f24 <I2C_IsErrorOccurred>
 8003eb6:	1e03      	subs	r3, r0, #0
 8003eb8:	d001      	beq.n	8003ebe <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
    {
      return HAL_ERROR;
 8003eba:	2301      	movs	r3, #1
 8003ebc:	e02d      	b.n	8003f1a <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003ebe:	f7ff fa81 	bl	80033c4 <HAL_GetTick>
 8003ec2:	0002      	movs	r2, r0
 8003ec4:	687b      	ldr	r3, [r7, #4]
 8003ec6:	1ad3      	subs	r3, r2, r3
 8003ec8:	68ba      	ldr	r2, [r7, #8]
 8003eca:	429a      	cmp	r2, r3
 8003ecc:	d302      	bcc.n	8003ed4 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 8003ece:	68bb      	ldr	r3, [r7, #8]
 8003ed0:	2b00      	cmp	r3, #0
 8003ed2:	d11a      	bne.n	8003f0a <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
    {
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
 8003ed4:	68fb      	ldr	r3, [r7, #12]
 8003ed6:	681b      	ldr	r3, [r3, #0]
 8003ed8:	699b      	ldr	r3, [r3, #24]
 8003eda:	2220      	movs	r2, #32
 8003edc:	4013      	ands	r3, r2
 8003ede:	2b20      	cmp	r3, #32
 8003ee0:	d013      	beq.n	8003f0a <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
      {
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8003ee2:	68fb      	ldr	r3, [r7, #12]
 8003ee4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003ee6:	2220      	movs	r2, #32
 8003ee8:	431a      	orrs	r2, r3
 8003eea:	68fb      	ldr	r3, [r7, #12]
 8003eec:	645a      	str	r2, [r3, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8003eee:	68fb      	ldr	r3, [r7, #12]
 8003ef0:	2241      	movs	r2, #65	@ 0x41
 8003ef2:	2120      	movs	r1, #32
 8003ef4:	5499      	strb	r1, [r3, r2]
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8003ef6:	68fb      	ldr	r3, [r7, #12]
 8003ef8:	2242      	movs	r2, #66	@ 0x42
 8003efa:	2100      	movs	r1, #0
 8003efc:	5499      	strb	r1, [r3, r2]

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8003efe:	68fb      	ldr	r3, [r7, #12]
 8003f00:	2240      	movs	r2, #64	@ 0x40
 8003f02:	2100      	movs	r1, #0
 8003f04:	5499      	strb	r1, [r3, r2]

        return HAL_ERROR;
 8003f06:	2301      	movs	r3, #1
 8003f08:	e007      	b.n	8003f1a <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8003f0a:	68fb      	ldr	r3, [r7, #12]
 8003f0c:	681b      	ldr	r3, [r3, #0]
 8003f0e:	699b      	ldr	r3, [r3, #24]
 8003f10:	2220      	movs	r2, #32
 8003f12:	4013      	ands	r3, r2
 8003f14:	2b20      	cmp	r3, #32
 8003f16:	d1c8      	bne.n	8003eaa <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 8003f18:	2300      	movs	r3, #0
}
 8003f1a:	0018      	movs	r0, r3
 8003f1c:	46bd      	mov	sp, r7
 8003f1e:	b004      	add	sp, #16
 8003f20:	bd80      	pop	{r7, pc}
	...

08003f24 <I2C_IsErrorOccurred>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsErrorOccurred(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8003f24:	b580      	push	{r7, lr}
 8003f26:	b08a      	sub	sp, #40	@ 0x28
 8003f28:	af00      	add	r7, sp, #0
 8003f2a:	60f8      	str	r0, [r7, #12]
 8003f2c:	60b9      	str	r1, [r7, #8]
 8003f2e:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8003f30:	2327      	movs	r3, #39	@ 0x27
 8003f32:	18fb      	adds	r3, r7, r3
 8003f34:	2200      	movs	r2, #0
 8003f36:	701a      	strb	r2, [r3, #0]
  uint32_t itflag   = hi2c->Instance->ISR;
 8003f38:	68fb      	ldr	r3, [r7, #12]
 8003f3a:	681b      	ldr	r3, [r3, #0]
 8003f3c:	699b      	ldr	r3, [r3, #24]
 8003f3e:	61bb      	str	r3, [r7, #24]
  uint32_t error_code = 0;
 8003f40:	2300      	movs	r3, #0
 8003f42:	623b      	str	r3, [r7, #32]
  uint32_t tickstart = Tickstart;
 8003f44:	687b      	ldr	r3, [r7, #4]
 8003f46:	61fb      	str	r3, [r7, #28]
  uint32_t tmp1;
  HAL_I2C_ModeTypeDef tmp2;

  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8003f48:	69bb      	ldr	r3, [r7, #24]
 8003f4a:	2210      	movs	r2, #16
 8003f4c:	4013      	ands	r3, r2
 8003f4e:	d100      	bne.n	8003f52 <I2C_IsErrorOccurred+0x2e>
 8003f50:	e079      	b.n	8004046 <I2C_IsErrorOccurred+0x122>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8003f52:	68fb      	ldr	r3, [r7, #12]
 8003f54:	681b      	ldr	r3, [r3, #0]
 8003f56:	2210      	movs	r2, #16
 8003f58:	61da      	str	r2, [r3, #28]

    /* Wait until STOP Flag is set or timeout occurred */
    /* AutoEnd should be initiate after AF */
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8003f5a:	e057      	b.n	800400c <I2C_IsErrorOccurred+0xe8>
 8003f5c:	2227      	movs	r2, #39	@ 0x27
 8003f5e:	18bb      	adds	r3, r7, r2
 8003f60:	18ba      	adds	r2, r7, r2
 8003f62:	7812      	ldrb	r2, [r2, #0]
 8003f64:	701a      	strb	r2, [r3, #0]
    {
      /* Check for the Timeout */
      if (Timeout != HAL_MAX_DELAY)
 8003f66:	68bb      	ldr	r3, [r7, #8]
 8003f68:	3301      	adds	r3, #1
 8003f6a:	d04f      	beq.n	800400c <I2C_IsErrorOccurred+0xe8>
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8003f6c:	f7ff fa2a 	bl	80033c4 <HAL_GetTick>
 8003f70:	0002      	movs	r2, r0
 8003f72:	69fb      	ldr	r3, [r7, #28]
 8003f74:	1ad3      	subs	r3, r2, r3
 8003f76:	68ba      	ldr	r2, [r7, #8]
 8003f78:	429a      	cmp	r2, r3
 8003f7a:	d302      	bcc.n	8003f82 <I2C_IsErrorOccurred+0x5e>
 8003f7c:	68bb      	ldr	r3, [r7, #8]
 8003f7e:	2b00      	cmp	r3, #0
 8003f80:	d144      	bne.n	800400c <I2C_IsErrorOccurred+0xe8>
        {
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 8003f82:	68fb      	ldr	r3, [r7, #12]
 8003f84:	681b      	ldr	r3, [r3, #0]
 8003f86:	685a      	ldr	r2, [r3, #4]
 8003f88:	2380      	movs	r3, #128	@ 0x80
 8003f8a:	01db      	lsls	r3, r3, #7
 8003f8c:	4013      	ands	r3, r2
 8003f8e:	617b      	str	r3, [r7, #20]
          tmp2 = hi2c->Mode;
 8003f90:	2013      	movs	r0, #19
 8003f92:	183b      	adds	r3, r7, r0
 8003f94:	68fa      	ldr	r2, [r7, #12]
 8003f96:	2142      	movs	r1, #66	@ 0x42
 8003f98:	5c52      	ldrb	r2, [r2, r1]
 8003f9a:	701a      	strb	r2, [r3, #0]

          /* In case of I2C still busy, try to regenerate a STOP manually */
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8003f9c:	68fb      	ldr	r3, [r7, #12]
 8003f9e:	681b      	ldr	r3, [r3, #0]
 8003fa0:	699a      	ldr	r2, [r3, #24]
 8003fa2:	2380      	movs	r3, #128	@ 0x80
 8003fa4:	021b      	lsls	r3, r3, #8
 8003fa6:	401a      	ands	r2, r3
 8003fa8:	2380      	movs	r3, #128	@ 0x80
 8003faa:	021b      	lsls	r3, r3, #8
 8003fac:	429a      	cmp	r2, r3
 8003fae:	d126      	bne.n	8003ffe <I2C_IsErrorOccurred+0xda>
 8003fb0:	697a      	ldr	r2, [r7, #20]
 8003fb2:	2380      	movs	r3, #128	@ 0x80
 8003fb4:	01db      	lsls	r3, r3, #7
 8003fb6:	429a      	cmp	r2, r3
 8003fb8:	d021      	beq.n	8003ffe <I2C_IsErrorOccurred+0xda>
              (tmp1 != I2C_CR2_STOP) && \
 8003fba:	183b      	adds	r3, r7, r0
 8003fbc:	781b      	ldrb	r3, [r3, #0]
 8003fbe:	2b20      	cmp	r3, #32
 8003fc0:	d01d      	beq.n	8003ffe <I2C_IsErrorOccurred+0xda>
              (tmp2 != HAL_I2C_MODE_SLAVE))
          {
            /* Generate Stop */
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8003fc2:	68fb      	ldr	r3, [r7, #12]
 8003fc4:	681b      	ldr	r3, [r3, #0]
 8003fc6:	685a      	ldr	r2, [r3, #4]
 8003fc8:	68fb      	ldr	r3, [r7, #12]
 8003fca:	681b      	ldr	r3, [r3, #0]
 8003fcc:	2180      	movs	r1, #128	@ 0x80
 8003fce:	01c9      	lsls	r1, r1, #7
 8003fd0:	430a      	orrs	r2, r1
 8003fd2:	605a      	str	r2, [r3, #4]

            /* Update Tick with new reference */
            tickstart = HAL_GetTick();
 8003fd4:	f7ff f9f6 	bl	80033c4 <HAL_GetTick>
 8003fd8:	0003      	movs	r3, r0
 8003fda:	61fb      	str	r3, [r7, #28]
          }

          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8003fdc:	e00f      	b.n	8003ffe <I2C_IsErrorOccurred+0xda>
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 8003fde:	f7ff f9f1 	bl	80033c4 <HAL_GetTick>
 8003fe2:	0002      	movs	r2, r0
 8003fe4:	69fb      	ldr	r3, [r7, #28]
 8003fe6:	1ad3      	subs	r3, r2, r3
 8003fe8:	2b19      	cmp	r3, #25
 8003fea:	d908      	bls.n	8003ffe <I2C_IsErrorOccurred+0xda>
            {
              error_code |= HAL_I2C_ERROR_TIMEOUT;
 8003fec:	6a3b      	ldr	r3, [r7, #32]
 8003fee:	2220      	movs	r2, #32
 8003ff0:	4313      	orrs	r3, r2
 8003ff2:	623b      	str	r3, [r7, #32]

              status = HAL_ERROR;
 8003ff4:	2327      	movs	r3, #39	@ 0x27
 8003ff6:	18fb      	adds	r3, r7, r3
 8003ff8:	2201      	movs	r2, #1
 8003ffa:	701a      	strb	r2, [r3, #0]

              break;
 8003ffc:	e006      	b.n	800400c <I2C_IsErrorOccurred+0xe8>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8003ffe:	68fb      	ldr	r3, [r7, #12]
 8004000:	681b      	ldr	r3, [r3, #0]
 8004002:	699b      	ldr	r3, [r3, #24]
 8004004:	2220      	movs	r2, #32
 8004006:	4013      	ands	r3, r2
 8004008:	2b20      	cmp	r3, #32
 800400a:	d1e8      	bne.n	8003fde <I2C_IsErrorOccurred+0xba>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 800400c:	68fb      	ldr	r3, [r7, #12]
 800400e:	681b      	ldr	r3, [r3, #0]
 8004010:	699b      	ldr	r3, [r3, #24]
 8004012:	2220      	movs	r2, #32
 8004014:	4013      	ands	r3, r2
 8004016:	2b20      	cmp	r3, #32
 8004018:	d004      	beq.n	8004024 <I2C_IsErrorOccurred+0x100>
 800401a:	2327      	movs	r3, #39	@ 0x27
 800401c:	18fb      	adds	r3, r7, r3
 800401e:	781b      	ldrb	r3, [r3, #0]
 8004020:	2b00      	cmp	r3, #0
 8004022:	d09b      	beq.n	8003f5c <I2C_IsErrorOccurred+0x38>
        }
      }
    }

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
 8004024:	2327      	movs	r3, #39	@ 0x27
 8004026:	18fb      	adds	r3, r7, r3
 8004028:	781b      	ldrb	r3, [r3, #0]
 800402a:	2b00      	cmp	r3, #0
 800402c:	d103      	bne.n	8004036 <I2C_IsErrorOccurred+0x112>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800402e:	68fb      	ldr	r3, [r7, #12]
 8004030:	681b      	ldr	r3, [r3, #0]
 8004032:	2220      	movs	r2, #32
 8004034:	61da      	str	r2, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
 8004036:	6a3b      	ldr	r3, [r7, #32]
 8004038:	2204      	movs	r2, #4
 800403a:	4313      	orrs	r3, r2
 800403c:	623b      	str	r3, [r7, #32]

    status = HAL_ERROR;
 800403e:	2327      	movs	r3, #39	@ 0x27
 8004040:	18fb      	adds	r3, r7, r3
 8004042:	2201      	movs	r2, #1
 8004044:	701a      	strb	r2, [r3, #0]
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
 8004046:	68fb      	ldr	r3, [r7, #12]
 8004048:	681b      	ldr	r3, [r3, #0]
 800404a:	699b      	ldr	r3, [r3, #24]
 800404c:	61bb      	str	r3, [r7, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 800404e:	69ba      	ldr	r2, [r7, #24]
 8004050:	2380      	movs	r3, #128	@ 0x80
 8004052:	005b      	lsls	r3, r3, #1
 8004054:	4013      	ands	r3, r2
 8004056:	d00c      	beq.n	8004072 <I2C_IsErrorOccurred+0x14e>
  {
    error_code |= HAL_I2C_ERROR_BERR;
 8004058:	6a3b      	ldr	r3, [r7, #32]
 800405a:	2201      	movs	r2, #1
 800405c:	4313      	orrs	r3, r2
 800405e:	623b      	str	r3, [r7, #32]

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8004060:	68fb      	ldr	r3, [r7, #12]
 8004062:	681b      	ldr	r3, [r3, #0]
 8004064:	2280      	movs	r2, #128	@ 0x80
 8004066:	0052      	lsls	r2, r2, #1
 8004068:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
 800406a:	2327      	movs	r3, #39	@ 0x27
 800406c:	18fb      	adds	r3, r7, r3
 800406e:	2201      	movs	r2, #1
 8004070:	701a      	strb	r2, [r3, #0]
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 8004072:	69ba      	ldr	r2, [r7, #24]
 8004074:	2380      	movs	r3, #128	@ 0x80
 8004076:	00db      	lsls	r3, r3, #3
 8004078:	4013      	ands	r3, r2
 800407a:	d00c      	beq.n	8004096 <I2C_IsErrorOccurred+0x172>
  {
    error_code |= HAL_I2C_ERROR_OVR;
 800407c:	6a3b      	ldr	r3, [r7, #32]
 800407e:	2208      	movs	r2, #8
 8004080:	4313      	orrs	r3, r2
 8004082:	623b      	str	r3, [r7, #32]

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8004084:	68fb      	ldr	r3, [r7, #12]
 8004086:	681b      	ldr	r3, [r3, #0]
 8004088:	2280      	movs	r2, #128	@ 0x80
 800408a:	00d2      	lsls	r2, r2, #3
 800408c:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
 800408e:	2327      	movs	r3, #39	@ 0x27
 8004090:	18fb      	adds	r3, r7, r3
 8004092:	2201      	movs	r2, #1
 8004094:	701a      	strb	r2, [r3, #0]
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 8004096:	69ba      	ldr	r2, [r7, #24]
 8004098:	2380      	movs	r3, #128	@ 0x80
 800409a:	009b      	lsls	r3, r3, #2
 800409c:	4013      	ands	r3, r2
 800409e:	d00c      	beq.n	80040ba <I2C_IsErrorOccurred+0x196>
  {
    error_code |= HAL_I2C_ERROR_ARLO;
 80040a0:	6a3b      	ldr	r3, [r7, #32]
 80040a2:	2202      	movs	r2, #2
 80040a4:	4313      	orrs	r3, r2
 80040a6:	623b      	str	r3, [r7, #32]

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 80040a8:	68fb      	ldr	r3, [r7, #12]
 80040aa:	681b      	ldr	r3, [r3, #0]
 80040ac:	2280      	movs	r2, #128	@ 0x80
 80040ae:	0092      	lsls	r2, r2, #2
 80040b0:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
 80040b2:	2327      	movs	r3, #39	@ 0x27
 80040b4:	18fb      	adds	r3, r7, r3
 80040b6:	2201      	movs	r2, #1
 80040b8:	701a      	strb	r2, [r3, #0]
  }

  if (status != HAL_OK)
 80040ba:	2327      	movs	r3, #39	@ 0x27
 80040bc:	18fb      	adds	r3, r7, r3
 80040be:	781b      	ldrb	r3, [r3, #0]
 80040c0:	2b00      	cmp	r3, #0
 80040c2:	d01d      	beq.n	8004100 <I2C_IsErrorOccurred+0x1dc>
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);
 80040c4:	68fb      	ldr	r3, [r7, #12]
 80040c6:	0018      	movs	r0, r3
 80040c8:	f7ff fe28 	bl	8003d1c <I2C_Flush_TXDR>

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 80040cc:	68fb      	ldr	r3, [r7, #12]
 80040ce:	681b      	ldr	r3, [r3, #0]
 80040d0:	685a      	ldr	r2, [r3, #4]
 80040d2:	68fb      	ldr	r3, [r7, #12]
 80040d4:	681b      	ldr	r3, [r3, #0]
 80040d6:	490e      	ldr	r1, [pc, #56]	@ (8004110 <I2C_IsErrorOccurred+0x1ec>)
 80040d8:	400a      	ands	r2, r1
 80040da:	605a      	str	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
 80040dc:	68fb      	ldr	r3, [r7, #12]
 80040de:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80040e0:	6a3b      	ldr	r3, [r7, #32]
 80040e2:	431a      	orrs	r2, r3
 80040e4:	68fb      	ldr	r3, [r7, #12]
 80040e6:	645a      	str	r2, [r3, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 80040e8:	68fb      	ldr	r3, [r7, #12]
 80040ea:	2241      	movs	r2, #65	@ 0x41
 80040ec:	2120      	movs	r1, #32
 80040ee:	5499      	strb	r1, [r3, r2]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80040f0:	68fb      	ldr	r3, [r7, #12]
 80040f2:	2242      	movs	r2, #66	@ 0x42
 80040f4:	2100      	movs	r1, #0
 80040f6:	5499      	strb	r1, [r3, r2]

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80040f8:	68fb      	ldr	r3, [r7, #12]
 80040fa:	2240      	movs	r2, #64	@ 0x40
 80040fc:	2100      	movs	r1, #0
 80040fe:	5499      	strb	r1, [r3, r2]
  }

  return status;
 8004100:	2327      	movs	r3, #39	@ 0x27
 8004102:	18fb      	adds	r3, r7, r3
 8004104:	781b      	ldrb	r3, [r3, #0]
}
 8004106:	0018      	movs	r0, r3
 8004108:	46bd      	mov	sp, r7
 800410a:	b00a      	add	sp, #40	@ 0x28
 800410c:	bd80      	pop	{r7, pc}
 800410e:	46c0      	nop			@ (mov r8, r8)
 8004110:	fe00e800 	.word	0xfe00e800

08004114 <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 8004114:	b590      	push	{r4, r7, lr}
 8004116:	b087      	sub	sp, #28
 8004118:	af00      	add	r7, sp, #0
 800411a:	60f8      	str	r0, [r7, #12]
 800411c:	0008      	movs	r0, r1
 800411e:	0011      	movs	r1, r2
 8004120:	607b      	str	r3, [r7, #4]
 8004122:	240a      	movs	r4, #10
 8004124:	193b      	adds	r3, r7, r4
 8004126:	1c02      	adds	r2, r0, #0
 8004128:	801a      	strh	r2, [r3, #0]
 800412a:	2009      	movs	r0, #9
 800412c:	183b      	adds	r3, r7, r0
 800412e:	1c0a      	adds	r2, r1, #0
 8004130:	701a      	strb	r2, [r3, #0]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004132:	193b      	adds	r3, r7, r4
 8004134:	881b      	ldrh	r3, [r3, #0]
 8004136:	059b      	lsls	r3, r3, #22
 8004138:	0d9a      	lsrs	r2, r3, #22
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
 800413a:	183b      	adds	r3, r7, r0
 800413c:	781b      	ldrb	r3, [r3, #0]
 800413e:	0419      	lsls	r1, r3, #16
 8004140:	23ff      	movs	r3, #255	@ 0xff
 8004142:	041b      	lsls	r3, r3, #16
 8004144:	400b      	ands	r3, r1
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004146:	431a      	orrs	r2, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
 8004148:	687b      	ldr	r3, [r7, #4]
 800414a:	431a      	orrs	r2, r3
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 800414c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800414e:	4313      	orrs	r3, r2
 8004150:	005b      	lsls	r3, r3, #1
 8004152:	085b      	lsrs	r3, r3, #1
 8004154:	617b      	str	r3, [r7, #20]
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 8004156:	68fb      	ldr	r3, [r7, #12]
 8004158:	681b      	ldr	r3, [r3, #0]
 800415a:	685b      	ldr	r3, [r3, #4]
 800415c:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800415e:	0d51      	lsrs	r1, r2, #21
 8004160:	2280      	movs	r2, #128	@ 0x80
 8004162:	00d2      	lsls	r2, r2, #3
 8004164:	400a      	ands	r2, r1
 8004166:	4907      	ldr	r1, [pc, #28]	@ (8004184 <I2C_TransferConfig+0x70>)
 8004168:	430a      	orrs	r2, r1
 800416a:	43d2      	mvns	r2, r2
 800416c:	401a      	ands	r2, r3
 800416e:	0011      	movs	r1, r2
 8004170:	68fb      	ldr	r3, [r7, #12]
 8004172:	681b      	ldr	r3, [r3, #0]
 8004174:	697a      	ldr	r2, [r7, #20]
 8004176:	430a      	orrs	r2, r1
 8004178:	605a      	str	r2, [r3, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 800417a:	46c0      	nop			@ (mov r8, r8)
 800417c:	46bd      	mov	sp, r7
 800417e:	b007      	add	sp, #28
 8004180:	bd90      	pop	{r4, r7, pc}
 8004182:	46c0      	nop			@ (mov r8, r8)
 8004184:	03ff63ff 	.word	0x03ff63ff

08004188 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8004188:	b580      	push	{r7, lr}
 800418a:	b082      	sub	sp, #8
 800418c:	af00      	add	r7, sp, #0
 800418e:	6078      	str	r0, [r7, #4]
 8004190:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004192:	687b      	ldr	r3, [r7, #4]
 8004194:	2241      	movs	r2, #65	@ 0x41
 8004196:	5c9b      	ldrb	r3, [r3, r2]
 8004198:	b2db      	uxtb	r3, r3
 800419a:	2b20      	cmp	r3, #32
 800419c:	d138      	bne.n	8004210 <HAL_I2CEx_ConfigAnalogFilter+0x88>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 800419e:	687b      	ldr	r3, [r7, #4]
 80041a0:	2240      	movs	r2, #64	@ 0x40
 80041a2:	5c9b      	ldrb	r3, [r3, r2]
 80041a4:	2b01      	cmp	r3, #1
 80041a6:	d101      	bne.n	80041ac <HAL_I2CEx_ConfigAnalogFilter+0x24>
 80041a8:	2302      	movs	r3, #2
 80041aa:	e032      	b.n	8004212 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 80041ac:	687b      	ldr	r3, [r7, #4]
 80041ae:	2240      	movs	r2, #64	@ 0x40
 80041b0:	2101      	movs	r1, #1
 80041b2:	5499      	strb	r1, [r3, r2]

    hi2c->State = HAL_I2C_STATE_BUSY;
 80041b4:	687b      	ldr	r3, [r7, #4]
 80041b6:	2241      	movs	r2, #65	@ 0x41
 80041b8:	2124      	movs	r1, #36	@ 0x24
 80041ba:	5499      	strb	r1, [r3, r2]

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80041bc:	687b      	ldr	r3, [r7, #4]
 80041be:	681b      	ldr	r3, [r3, #0]
 80041c0:	681a      	ldr	r2, [r3, #0]
 80041c2:	687b      	ldr	r3, [r7, #4]
 80041c4:	681b      	ldr	r3, [r3, #0]
 80041c6:	2101      	movs	r1, #1
 80041c8:	438a      	bics	r2, r1
 80041ca:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 80041cc:	687b      	ldr	r3, [r7, #4]
 80041ce:	681b      	ldr	r3, [r3, #0]
 80041d0:	681a      	ldr	r2, [r3, #0]
 80041d2:	687b      	ldr	r3, [r7, #4]
 80041d4:	681b      	ldr	r3, [r3, #0]
 80041d6:	4911      	ldr	r1, [pc, #68]	@ (800421c <HAL_I2CEx_ConfigAnalogFilter+0x94>)
 80041d8:	400a      	ands	r2, r1
 80041da:	601a      	str	r2, [r3, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 80041dc:	687b      	ldr	r3, [r7, #4]
 80041de:	681b      	ldr	r3, [r3, #0]
 80041e0:	6819      	ldr	r1, [r3, #0]
 80041e2:	687b      	ldr	r3, [r7, #4]
 80041e4:	681b      	ldr	r3, [r3, #0]
 80041e6:	683a      	ldr	r2, [r7, #0]
 80041e8:	430a      	orrs	r2, r1
 80041ea:	601a      	str	r2, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 80041ec:	687b      	ldr	r3, [r7, #4]
 80041ee:	681b      	ldr	r3, [r3, #0]
 80041f0:	681a      	ldr	r2, [r3, #0]
 80041f2:	687b      	ldr	r3, [r7, #4]
 80041f4:	681b      	ldr	r3, [r3, #0]
 80041f6:	2101      	movs	r1, #1
 80041f8:	430a      	orrs	r2, r1
 80041fa:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80041fc:	687b      	ldr	r3, [r7, #4]
 80041fe:	2241      	movs	r2, #65	@ 0x41
 8004200:	2120      	movs	r1, #32
 8004202:	5499      	strb	r1, [r3, r2]

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004204:	687b      	ldr	r3, [r7, #4]
 8004206:	2240      	movs	r2, #64	@ 0x40
 8004208:	2100      	movs	r1, #0
 800420a:	5499      	strb	r1, [r3, r2]

    return HAL_OK;
 800420c:	2300      	movs	r3, #0
 800420e:	e000      	b.n	8004212 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
  }
  else
  {
    return HAL_BUSY;
 8004210:	2302      	movs	r3, #2
  }
}
 8004212:	0018      	movs	r0, r3
 8004214:	46bd      	mov	sp, r7
 8004216:	b002      	add	sp, #8
 8004218:	bd80      	pop	{r7, pc}
 800421a:	46c0      	nop			@ (mov r8, r8)
 800421c:	ffffefff 	.word	0xffffefff

08004220 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8004220:	b580      	push	{r7, lr}
 8004222:	b084      	sub	sp, #16
 8004224:	af00      	add	r7, sp, #0
 8004226:	6078      	str	r0, [r7, #4]
 8004228:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800422a:	687b      	ldr	r3, [r7, #4]
 800422c:	2241      	movs	r2, #65	@ 0x41
 800422e:	5c9b      	ldrb	r3, [r3, r2]
 8004230:	b2db      	uxtb	r3, r3
 8004232:	2b20      	cmp	r3, #32
 8004234:	d139      	bne.n	80042aa <HAL_I2CEx_ConfigDigitalFilter+0x8a>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8004236:	687b      	ldr	r3, [r7, #4]
 8004238:	2240      	movs	r2, #64	@ 0x40
 800423a:	5c9b      	ldrb	r3, [r3, r2]
 800423c:	2b01      	cmp	r3, #1
 800423e:	d101      	bne.n	8004244 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8004240:	2302      	movs	r3, #2
 8004242:	e033      	b.n	80042ac <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8004244:	687b      	ldr	r3, [r7, #4]
 8004246:	2240      	movs	r2, #64	@ 0x40
 8004248:	2101      	movs	r1, #1
 800424a:	5499      	strb	r1, [r3, r2]

    hi2c->State = HAL_I2C_STATE_BUSY;
 800424c:	687b      	ldr	r3, [r7, #4]
 800424e:	2241      	movs	r2, #65	@ 0x41
 8004250:	2124      	movs	r1, #36	@ 0x24
 8004252:	5499      	strb	r1, [r3, r2]

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004254:	687b      	ldr	r3, [r7, #4]
 8004256:	681b      	ldr	r3, [r3, #0]
 8004258:	681a      	ldr	r2, [r3, #0]
 800425a:	687b      	ldr	r3, [r7, #4]
 800425c:	681b      	ldr	r3, [r3, #0]
 800425e:	2101      	movs	r1, #1
 8004260:	438a      	bics	r2, r1
 8004262:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 8004264:	687b      	ldr	r3, [r7, #4]
 8004266:	681b      	ldr	r3, [r3, #0]
 8004268:	681b      	ldr	r3, [r3, #0]
 800426a:	60fb      	str	r3, [r7, #12]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 800426c:	68fb      	ldr	r3, [r7, #12]
 800426e:	4a11      	ldr	r2, [pc, #68]	@ (80042b4 <HAL_I2CEx_ConfigDigitalFilter+0x94>)
 8004270:	4013      	ands	r3, r2
 8004272:	60fb      	str	r3, [r7, #12]

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 8004274:	683b      	ldr	r3, [r7, #0]
 8004276:	021b      	lsls	r3, r3, #8
 8004278:	68fa      	ldr	r2, [r7, #12]
 800427a:	4313      	orrs	r3, r2
 800427c:	60fb      	str	r3, [r7, #12]

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;
 800427e:	687b      	ldr	r3, [r7, #4]
 8004280:	681b      	ldr	r3, [r3, #0]
 8004282:	68fa      	ldr	r2, [r7, #12]
 8004284:	601a      	str	r2, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 8004286:	687b      	ldr	r3, [r7, #4]
 8004288:	681b      	ldr	r3, [r3, #0]
 800428a:	681a      	ldr	r2, [r3, #0]
 800428c:	687b      	ldr	r3, [r7, #4]
 800428e:	681b      	ldr	r3, [r3, #0]
 8004290:	2101      	movs	r1, #1
 8004292:	430a      	orrs	r2, r1
 8004294:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004296:	687b      	ldr	r3, [r7, #4]
 8004298:	2241      	movs	r2, #65	@ 0x41
 800429a:	2120      	movs	r1, #32
 800429c:	5499      	strb	r1, [r3, r2]

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800429e:	687b      	ldr	r3, [r7, #4]
 80042a0:	2240      	movs	r2, #64	@ 0x40
 80042a2:	2100      	movs	r1, #0
 80042a4:	5499      	strb	r1, [r3, r2]

    return HAL_OK;
 80042a6:	2300      	movs	r3, #0
 80042a8:	e000      	b.n	80042ac <HAL_I2CEx_ConfigDigitalFilter+0x8c>
  }
  else
  {
    return HAL_BUSY;
 80042aa:	2302      	movs	r3, #2
  }
}
 80042ac:	0018      	movs	r0, r3
 80042ae:	46bd      	mov	sp, r7
 80042b0:	b004      	add	sp, #16
 80042b2:	bd80      	pop	{r7, pc}
 80042b4:	fffff0ff 	.word	0xfffff0ff

080042b8 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80042b8:	b580      	push	{r7, lr}
 80042ba:	b088      	sub	sp, #32
 80042bc:	af00      	add	r7, sp, #0
 80042be:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  uint32_t pll_config2;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80042c0:	687b      	ldr	r3, [r7, #4]
 80042c2:	2b00      	cmp	r3, #0
 80042c4:	d101      	bne.n	80042ca <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 80042c6:	2301      	movs	r3, #1
 80042c8:	e301      	b.n	80048ce <HAL_RCC_OscConfig+0x616>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80042ca:	687b      	ldr	r3, [r7, #4]
 80042cc:	681b      	ldr	r3, [r3, #0]
 80042ce:	2201      	movs	r2, #1
 80042d0:	4013      	ands	r3, r2
 80042d2:	d100      	bne.n	80042d6 <HAL_RCC_OscConfig+0x1e>
 80042d4:	e08d      	b.n	80043f2 <HAL_RCC_OscConfig+0x13a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 80042d6:	4bc3      	ldr	r3, [pc, #780]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 80042d8:	685b      	ldr	r3, [r3, #4]
 80042da:	220c      	movs	r2, #12
 80042dc:	4013      	ands	r3, r2
 80042de:	2b04      	cmp	r3, #4
 80042e0:	d00e      	beq.n	8004300 <HAL_RCC_OscConfig+0x48>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 80042e2:	4bc0      	ldr	r3, [pc, #768]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 80042e4:	685b      	ldr	r3, [r3, #4]
 80042e6:	220c      	movs	r2, #12
 80042e8:	4013      	ands	r3, r2
 80042ea:	2b08      	cmp	r3, #8
 80042ec:	d116      	bne.n	800431c <HAL_RCC_OscConfig+0x64>
 80042ee:	4bbd      	ldr	r3, [pc, #756]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 80042f0:	685a      	ldr	r2, [r3, #4]
 80042f2:	2380      	movs	r3, #128	@ 0x80
 80042f4:	025b      	lsls	r3, r3, #9
 80042f6:	401a      	ands	r2, r3
 80042f8:	2380      	movs	r3, #128	@ 0x80
 80042fa:	025b      	lsls	r3, r3, #9
 80042fc:	429a      	cmp	r2, r3
 80042fe:	d10d      	bne.n	800431c <HAL_RCC_OscConfig+0x64>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8004300:	4bb8      	ldr	r3, [pc, #736]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 8004302:	681a      	ldr	r2, [r3, #0]
 8004304:	2380      	movs	r3, #128	@ 0x80
 8004306:	029b      	lsls	r3, r3, #10
 8004308:	4013      	ands	r3, r2
 800430a:	d100      	bne.n	800430e <HAL_RCC_OscConfig+0x56>
 800430c:	e070      	b.n	80043f0 <HAL_RCC_OscConfig+0x138>
 800430e:	687b      	ldr	r3, [r7, #4]
 8004310:	685b      	ldr	r3, [r3, #4]
 8004312:	2b00      	cmp	r3, #0
 8004314:	d000      	beq.n	8004318 <HAL_RCC_OscConfig+0x60>
 8004316:	e06b      	b.n	80043f0 <HAL_RCC_OscConfig+0x138>
      {
        return HAL_ERROR;
 8004318:	2301      	movs	r3, #1
 800431a:	e2d8      	b.n	80048ce <HAL_RCC_OscConfig+0x616>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800431c:	687b      	ldr	r3, [r7, #4]
 800431e:	685b      	ldr	r3, [r3, #4]
 8004320:	2b01      	cmp	r3, #1
 8004322:	d107      	bne.n	8004334 <HAL_RCC_OscConfig+0x7c>
 8004324:	4baf      	ldr	r3, [pc, #700]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 8004326:	681a      	ldr	r2, [r3, #0]
 8004328:	4bae      	ldr	r3, [pc, #696]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 800432a:	2180      	movs	r1, #128	@ 0x80
 800432c:	0249      	lsls	r1, r1, #9
 800432e:	430a      	orrs	r2, r1
 8004330:	601a      	str	r2, [r3, #0]
 8004332:	e02f      	b.n	8004394 <HAL_RCC_OscConfig+0xdc>
 8004334:	687b      	ldr	r3, [r7, #4]
 8004336:	685b      	ldr	r3, [r3, #4]
 8004338:	2b00      	cmp	r3, #0
 800433a:	d10c      	bne.n	8004356 <HAL_RCC_OscConfig+0x9e>
 800433c:	4ba9      	ldr	r3, [pc, #676]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 800433e:	681a      	ldr	r2, [r3, #0]
 8004340:	4ba8      	ldr	r3, [pc, #672]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 8004342:	49a9      	ldr	r1, [pc, #676]	@ (80045e8 <HAL_RCC_OscConfig+0x330>)
 8004344:	400a      	ands	r2, r1
 8004346:	601a      	str	r2, [r3, #0]
 8004348:	4ba6      	ldr	r3, [pc, #664]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 800434a:	681a      	ldr	r2, [r3, #0]
 800434c:	4ba5      	ldr	r3, [pc, #660]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 800434e:	49a7      	ldr	r1, [pc, #668]	@ (80045ec <HAL_RCC_OscConfig+0x334>)
 8004350:	400a      	ands	r2, r1
 8004352:	601a      	str	r2, [r3, #0]
 8004354:	e01e      	b.n	8004394 <HAL_RCC_OscConfig+0xdc>
 8004356:	687b      	ldr	r3, [r7, #4]
 8004358:	685b      	ldr	r3, [r3, #4]
 800435a:	2b05      	cmp	r3, #5
 800435c:	d10e      	bne.n	800437c <HAL_RCC_OscConfig+0xc4>
 800435e:	4ba1      	ldr	r3, [pc, #644]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 8004360:	681a      	ldr	r2, [r3, #0]
 8004362:	4ba0      	ldr	r3, [pc, #640]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 8004364:	2180      	movs	r1, #128	@ 0x80
 8004366:	02c9      	lsls	r1, r1, #11
 8004368:	430a      	orrs	r2, r1
 800436a:	601a      	str	r2, [r3, #0]
 800436c:	4b9d      	ldr	r3, [pc, #628]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 800436e:	681a      	ldr	r2, [r3, #0]
 8004370:	4b9c      	ldr	r3, [pc, #624]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 8004372:	2180      	movs	r1, #128	@ 0x80
 8004374:	0249      	lsls	r1, r1, #9
 8004376:	430a      	orrs	r2, r1
 8004378:	601a      	str	r2, [r3, #0]
 800437a:	e00b      	b.n	8004394 <HAL_RCC_OscConfig+0xdc>
 800437c:	4b99      	ldr	r3, [pc, #612]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 800437e:	681a      	ldr	r2, [r3, #0]
 8004380:	4b98      	ldr	r3, [pc, #608]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 8004382:	4999      	ldr	r1, [pc, #612]	@ (80045e8 <HAL_RCC_OscConfig+0x330>)
 8004384:	400a      	ands	r2, r1
 8004386:	601a      	str	r2, [r3, #0]
 8004388:	4b96      	ldr	r3, [pc, #600]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 800438a:	681a      	ldr	r2, [r3, #0]
 800438c:	4b95      	ldr	r3, [pc, #596]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 800438e:	4997      	ldr	r1, [pc, #604]	@ (80045ec <HAL_RCC_OscConfig+0x334>)
 8004390:	400a      	ands	r2, r1
 8004392:	601a      	str	r2, [r3, #0]
      

       /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8004394:	687b      	ldr	r3, [r7, #4]
 8004396:	685b      	ldr	r3, [r3, #4]
 8004398:	2b00      	cmp	r3, #0
 800439a:	d014      	beq.n	80043c6 <HAL_RCC_OscConfig+0x10e>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800439c:	f7ff f812 	bl	80033c4 <HAL_GetTick>
 80043a0:	0003      	movs	r3, r0
 80043a2:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80043a4:	e008      	b.n	80043b8 <HAL_RCC_OscConfig+0x100>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80043a6:	f7ff f80d 	bl	80033c4 <HAL_GetTick>
 80043aa:	0002      	movs	r2, r0
 80043ac:	69bb      	ldr	r3, [r7, #24]
 80043ae:	1ad3      	subs	r3, r2, r3
 80043b0:	2b64      	cmp	r3, #100	@ 0x64
 80043b2:	d901      	bls.n	80043b8 <HAL_RCC_OscConfig+0x100>
          {
            return HAL_TIMEOUT;
 80043b4:	2303      	movs	r3, #3
 80043b6:	e28a      	b.n	80048ce <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80043b8:	4b8a      	ldr	r3, [pc, #552]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 80043ba:	681a      	ldr	r2, [r3, #0]
 80043bc:	2380      	movs	r3, #128	@ 0x80
 80043be:	029b      	lsls	r3, r3, #10
 80043c0:	4013      	ands	r3, r2
 80043c2:	d0f0      	beq.n	80043a6 <HAL_RCC_OscConfig+0xee>
 80043c4:	e015      	b.n	80043f2 <HAL_RCC_OscConfig+0x13a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80043c6:	f7fe fffd 	bl	80033c4 <HAL_GetTick>
 80043ca:	0003      	movs	r3, r0
 80043cc:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80043ce:	e008      	b.n	80043e2 <HAL_RCC_OscConfig+0x12a>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80043d0:	f7fe fff8 	bl	80033c4 <HAL_GetTick>
 80043d4:	0002      	movs	r2, r0
 80043d6:	69bb      	ldr	r3, [r7, #24]
 80043d8:	1ad3      	subs	r3, r2, r3
 80043da:	2b64      	cmp	r3, #100	@ 0x64
 80043dc:	d901      	bls.n	80043e2 <HAL_RCC_OscConfig+0x12a>
          {
            return HAL_TIMEOUT;
 80043de:	2303      	movs	r3, #3
 80043e0:	e275      	b.n	80048ce <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80043e2:	4b80      	ldr	r3, [pc, #512]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 80043e4:	681a      	ldr	r2, [r3, #0]
 80043e6:	2380      	movs	r3, #128	@ 0x80
 80043e8:	029b      	lsls	r3, r3, #10
 80043ea:	4013      	ands	r3, r2
 80043ec:	d1f0      	bne.n	80043d0 <HAL_RCC_OscConfig+0x118>
 80043ee:	e000      	b.n	80043f2 <HAL_RCC_OscConfig+0x13a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80043f0:	46c0      	nop			@ (mov r8, r8)
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80043f2:	687b      	ldr	r3, [r7, #4]
 80043f4:	681b      	ldr	r3, [r3, #0]
 80043f6:	2202      	movs	r2, #2
 80043f8:	4013      	ands	r3, r2
 80043fa:	d100      	bne.n	80043fe <HAL_RCC_OscConfig+0x146>
 80043fc:	e069      	b.n	80044d2 <HAL_RCC_OscConfig+0x21a>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
    
    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */ 
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 80043fe:	4b79      	ldr	r3, [pc, #484]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 8004400:	685b      	ldr	r3, [r3, #4]
 8004402:	220c      	movs	r2, #12
 8004404:	4013      	ands	r3, r2
 8004406:	d00b      	beq.n	8004420 <HAL_RCC_OscConfig+0x168>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 8004408:	4b76      	ldr	r3, [pc, #472]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 800440a:	685b      	ldr	r3, [r3, #4]
 800440c:	220c      	movs	r2, #12
 800440e:	4013      	ands	r3, r2
 8004410:	2b08      	cmp	r3, #8
 8004412:	d11c      	bne.n	800444e <HAL_RCC_OscConfig+0x196>
 8004414:	4b73      	ldr	r3, [pc, #460]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 8004416:	685a      	ldr	r2, [r3, #4]
 8004418:	2380      	movs	r3, #128	@ 0x80
 800441a:	025b      	lsls	r3, r3, #9
 800441c:	4013      	ands	r3, r2
 800441e:	d116      	bne.n	800444e <HAL_RCC_OscConfig+0x196>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8004420:	4b70      	ldr	r3, [pc, #448]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 8004422:	681b      	ldr	r3, [r3, #0]
 8004424:	2202      	movs	r2, #2
 8004426:	4013      	ands	r3, r2
 8004428:	d005      	beq.n	8004436 <HAL_RCC_OscConfig+0x17e>
 800442a:	687b      	ldr	r3, [r7, #4]
 800442c:	68db      	ldr	r3, [r3, #12]
 800442e:	2b01      	cmp	r3, #1
 8004430:	d001      	beq.n	8004436 <HAL_RCC_OscConfig+0x17e>
      {
        return HAL_ERROR;
 8004432:	2301      	movs	r3, #1
 8004434:	e24b      	b.n	80048ce <HAL_RCC_OscConfig+0x616>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004436:	4b6b      	ldr	r3, [pc, #428]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 8004438:	681b      	ldr	r3, [r3, #0]
 800443a:	22f8      	movs	r2, #248	@ 0xf8
 800443c:	4393      	bics	r3, r2
 800443e:	0019      	movs	r1, r3
 8004440:	687b      	ldr	r3, [r7, #4]
 8004442:	691b      	ldr	r3, [r3, #16]
 8004444:	00da      	lsls	r2, r3, #3
 8004446:	4b67      	ldr	r3, [pc, #412]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 8004448:	430a      	orrs	r2, r1
 800444a:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800444c:	e041      	b.n	80044d2 <HAL_RCC_OscConfig+0x21a>
      }
    }
    else
    {
      /* Check the HSI State */
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 800444e:	687b      	ldr	r3, [r7, #4]
 8004450:	68db      	ldr	r3, [r3, #12]
 8004452:	2b00      	cmp	r3, #0
 8004454:	d024      	beq.n	80044a0 <HAL_RCC_OscConfig+0x1e8>
      {
       /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8004456:	4b63      	ldr	r3, [pc, #396]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 8004458:	681a      	ldr	r2, [r3, #0]
 800445a:	4b62      	ldr	r3, [pc, #392]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 800445c:	2101      	movs	r1, #1
 800445e:	430a      	orrs	r2, r1
 8004460:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004462:	f7fe ffaf 	bl	80033c4 <HAL_GetTick>
 8004466:	0003      	movs	r3, r0
 8004468:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800446a:	e008      	b.n	800447e <HAL_RCC_OscConfig+0x1c6>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800446c:	f7fe ffaa 	bl	80033c4 <HAL_GetTick>
 8004470:	0002      	movs	r2, r0
 8004472:	69bb      	ldr	r3, [r7, #24]
 8004474:	1ad3      	subs	r3, r2, r3
 8004476:	2b02      	cmp	r3, #2
 8004478:	d901      	bls.n	800447e <HAL_RCC_OscConfig+0x1c6>
          {
            return HAL_TIMEOUT;
 800447a:	2303      	movs	r3, #3
 800447c:	e227      	b.n	80048ce <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800447e:	4b59      	ldr	r3, [pc, #356]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 8004480:	681b      	ldr	r3, [r3, #0]
 8004482:	2202      	movs	r2, #2
 8004484:	4013      	ands	r3, r2
 8004486:	d0f1      	beq.n	800446c <HAL_RCC_OscConfig+0x1b4>
          }
        }
                
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004488:	4b56      	ldr	r3, [pc, #344]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 800448a:	681b      	ldr	r3, [r3, #0]
 800448c:	22f8      	movs	r2, #248	@ 0xf8
 800448e:	4393      	bics	r3, r2
 8004490:	0019      	movs	r1, r3
 8004492:	687b      	ldr	r3, [r7, #4]
 8004494:	691b      	ldr	r3, [r3, #16]
 8004496:	00da      	lsls	r2, r3, #3
 8004498:	4b52      	ldr	r3, [pc, #328]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 800449a:	430a      	orrs	r2, r1
 800449c:	601a      	str	r2, [r3, #0]
 800449e:	e018      	b.n	80044d2 <HAL_RCC_OscConfig+0x21a>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 80044a0:	4b50      	ldr	r3, [pc, #320]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 80044a2:	681a      	ldr	r2, [r3, #0]
 80044a4:	4b4f      	ldr	r3, [pc, #316]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 80044a6:	2101      	movs	r1, #1
 80044a8:	438a      	bics	r2, r1
 80044aa:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80044ac:	f7fe ff8a 	bl	80033c4 <HAL_GetTick>
 80044b0:	0003      	movs	r3, r0
 80044b2:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80044b4:	e008      	b.n	80044c8 <HAL_RCC_OscConfig+0x210>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80044b6:	f7fe ff85 	bl	80033c4 <HAL_GetTick>
 80044ba:	0002      	movs	r2, r0
 80044bc:	69bb      	ldr	r3, [r7, #24]
 80044be:	1ad3      	subs	r3, r2, r3
 80044c0:	2b02      	cmp	r3, #2
 80044c2:	d901      	bls.n	80044c8 <HAL_RCC_OscConfig+0x210>
          {
            return HAL_TIMEOUT;
 80044c4:	2303      	movs	r3, #3
 80044c6:	e202      	b.n	80048ce <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80044c8:	4b46      	ldr	r3, [pc, #280]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 80044ca:	681b      	ldr	r3, [r3, #0]
 80044cc:	2202      	movs	r2, #2
 80044ce:	4013      	ands	r3, r2
 80044d0:	d1f1      	bne.n	80044b6 <HAL_RCC_OscConfig+0x1fe>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80044d2:	687b      	ldr	r3, [r7, #4]
 80044d4:	681b      	ldr	r3, [r3, #0]
 80044d6:	2208      	movs	r2, #8
 80044d8:	4013      	ands	r3, r2
 80044da:	d036      	beq.n	800454a <HAL_RCC_OscConfig+0x292>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
    
    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 80044dc:	687b      	ldr	r3, [r7, #4]
 80044de:	69db      	ldr	r3, [r3, #28]
 80044e0:	2b00      	cmp	r3, #0
 80044e2:	d019      	beq.n	8004518 <HAL_RCC_OscConfig+0x260>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80044e4:	4b3f      	ldr	r3, [pc, #252]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 80044e6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80044e8:	4b3e      	ldr	r3, [pc, #248]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 80044ea:	2101      	movs	r1, #1
 80044ec:	430a      	orrs	r2, r1
 80044ee:	625a      	str	r2, [r3, #36]	@ 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80044f0:	f7fe ff68 	bl	80033c4 <HAL_GetTick>
 80044f4:	0003      	movs	r3, r0
 80044f6:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80044f8:	e008      	b.n	800450c <HAL_RCC_OscConfig+0x254>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80044fa:	f7fe ff63 	bl	80033c4 <HAL_GetTick>
 80044fe:	0002      	movs	r2, r0
 8004500:	69bb      	ldr	r3, [r7, #24]
 8004502:	1ad3      	subs	r3, r2, r3
 8004504:	2b02      	cmp	r3, #2
 8004506:	d901      	bls.n	800450c <HAL_RCC_OscConfig+0x254>
        {
          return HAL_TIMEOUT;
 8004508:	2303      	movs	r3, #3
 800450a:	e1e0      	b.n	80048ce <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800450c:	4b35      	ldr	r3, [pc, #212]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 800450e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004510:	2202      	movs	r2, #2
 8004512:	4013      	ands	r3, r2
 8004514:	d0f1      	beq.n	80044fa <HAL_RCC_OscConfig+0x242>
 8004516:	e018      	b.n	800454a <HAL_RCC_OscConfig+0x292>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8004518:	4b32      	ldr	r3, [pc, #200]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 800451a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800451c:	4b31      	ldr	r3, [pc, #196]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 800451e:	2101      	movs	r1, #1
 8004520:	438a      	bics	r2, r1
 8004522:	625a      	str	r2, [r3, #36]	@ 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004524:	f7fe ff4e 	bl	80033c4 <HAL_GetTick>
 8004528:	0003      	movs	r3, r0
 800452a:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800452c:	e008      	b.n	8004540 <HAL_RCC_OscConfig+0x288>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800452e:	f7fe ff49 	bl	80033c4 <HAL_GetTick>
 8004532:	0002      	movs	r2, r0
 8004534:	69bb      	ldr	r3, [r7, #24]
 8004536:	1ad3      	subs	r3, r2, r3
 8004538:	2b02      	cmp	r3, #2
 800453a:	d901      	bls.n	8004540 <HAL_RCC_OscConfig+0x288>
        {
          return HAL_TIMEOUT;
 800453c:	2303      	movs	r3, #3
 800453e:	e1c6      	b.n	80048ce <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004540:	4b28      	ldr	r3, [pc, #160]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 8004542:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004544:	2202      	movs	r2, #2
 8004546:	4013      	ands	r3, r2
 8004548:	d1f1      	bne.n	800452e <HAL_RCC_OscConfig+0x276>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800454a:	687b      	ldr	r3, [r7, #4]
 800454c:	681b      	ldr	r3, [r3, #0]
 800454e:	2204      	movs	r2, #4
 8004550:	4013      	ands	r3, r2
 8004552:	d100      	bne.n	8004556 <HAL_RCC_OscConfig+0x29e>
 8004554:	e0b4      	b.n	80046c0 <HAL_RCC_OscConfig+0x408>
  {
    FlagStatus       pwrclkchanged = RESET;
 8004556:	201f      	movs	r0, #31
 8004558:	183b      	adds	r3, r7, r0
 800455a:	2200      	movs	r2, #0
 800455c:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800455e:	4b21      	ldr	r3, [pc, #132]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 8004560:	69da      	ldr	r2, [r3, #28]
 8004562:	2380      	movs	r3, #128	@ 0x80
 8004564:	055b      	lsls	r3, r3, #21
 8004566:	4013      	ands	r3, r2
 8004568:	d110      	bne.n	800458c <HAL_RCC_OscConfig+0x2d4>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 800456a:	4b1e      	ldr	r3, [pc, #120]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 800456c:	69da      	ldr	r2, [r3, #28]
 800456e:	4b1d      	ldr	r3, [pc, #116]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 8004570:	2180      	movs	r1, #128	@ 0x80
 8004572:	0549      	lsls	r1, r1, #21
 8004574:	430a      	orrs	r2, r1
 8004576:	61da      	str	r2, [r3, #28]
 8004578:	4b1a      	ldr	r3, [pc, #104]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 800457a:	69da      	ldr	r2, [r3, #28]
 800457c:	2380      	movs	r3, #128	@ 0x80
 800457e:	055b      	lsls	r3, r3, #21
 8004580:	4013      	ands	r3, r2
 8004582:	60fb      	str	r3, [r7, #12]
 8004584:	68fb      	ldr	r3, [r7, #12]
      pwrclkchanged = SET;
 8004586:	183b      	adds	r3, r7, r0
 8004588:	2201      	movs	r2, #1
 800458a:	701a      	strb	r2, [r3, #0]
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800458c:	4b18      	ldr	r3, [pc, #96]	@ (80045f0 <HAL_RCC_OscConfig+0x338>)
 800458e:	681a      	ldr	r2, [r3, #0]
 8004590:	2380      	movs	r3, #128	@ 0x80
 8004592:	005b      	lsls	r3, r3, #1
 8004594:	4013      	ands	r3, r2
 8004596:	d11a      	bne.n	80045ce <HAL_RCC_OscConfig+0x316>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8004598:	4b15      	ldr	r3, [pc, #84]	@ (80045f0 <HAL_RCC_OscConfig+0x338>)
 800459a:	681a      	ldr	r2, [r3, #0]
 800459c:	4b14      	ldr	r3, [pc, #80]	@ (80045f0 <HAL_RCC_OscConfig+0x338>)
 800459e:	2180      	movs	r1, #128	@ 0x80
 80045a0:	0049      	lsls	r1, r1, #1
 80045a2:	430a      	orrs	r2, r1
 80045a4:	601a      	str	r2, [r3, #0]
      
      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 80045a6:	f7fe ff0d 	bl	80033c4 <HAL_GetTick>
 80045aa:	0003      	movs	r3, r0
 80045ac:	61bb      	str	r3, [r7, #24]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80045ae:	e008      	b.n	80045c2 <HAL_RCC_OscConfig+0x30a>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80045b0:	f7fe ff08 	bl	80033c4 <HAL_GetTick>
 80045b4:	0002      	movs	r2, r0
 80045b6:	69bb      	ldr	r3, [r7, #24]
 80045b8:	1ad3      	subs	r3, r2, r3
 80045ba:	2b64      	cmp	r3, #100	@ 0x64
 80045bc:	d901      	bls.n	80045c2 <HAL_RCC_OscConfig+0x30a>
        {
          return HAL_TIMEOUT;
 80045be:	2303      	movs	r3, #3
 80045c0:	e185      	b.n	80048ce <HAL_RCC_OscConfig+0x616>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80045c2:	4b0b      	ldr	r3, [pc, #44]	@ (80045f0 <HAL_RCC_OscConfig+0x338>)
 80045c4:	681a      	ldr	r2, [r3, #0]
 80045c6:	2380      	movs	r3, #128	@ 0x80
 80045c8:	005b      	lsls	r3, r3, #1
 80045ca:	4013      	ands	r3, r2
 80045cc:	d0f0      	beq.n	80045b0 <HAL_RCC_OscConfig+0x2f8>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80045ce:	687b      	ldr	r3, [r7, #4]
 80045d0:	689b      	ldr	r3, [r3, #8]
 80045d2:	2b01      	cmp	r3, #1
 80045d4:	d10e      	bne.n	80045f4 <HAL_RCC_OscConfig+0x33c>
 80045d6:	4b03      	ldr	r3, [pc, #12]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 80045d8:	6a1a      	ldr	r2, [r3, #32]
 80045da:	4b02      	ldr	r3, [pc, #8]	@ (80045e4 <HAL_RCC_OscConfig+0x32c>)
 80045dc:	2101      	movs	r1, #1
 80045de:	430a      	orrs	r2, r1
 80045e0:	621a      	str	r2, [r3, #32]
 80045e2:	e035      	b.n	8004650 <HAL_RCC_OscConfig+0x398>
 80045e4:	40021000 	.word	0x40021000
 80045e8:	fffeffff 	.word	0xfffeffff
 80045ec:	fffbffff 	.word	0xfffbffff
 80045f0:	40007000 	.word	0x40007000
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	689b      	ldr	r3, [r3, #8]
 80045f8:	2b00      	cmp	r3, #0
 80045fa:	d10c      	bne.n	8004616 <HAL_RCC_OscConfig+0x35e>
 80045fc:	4bb6      	ldr	r3, [pc, #728]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 80045fe:	6a1a      	ldr	r2, [r3, #32]
 8004600:	4bb5      	ldr	r3, [pc, #724]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 8004602:	2101      	movs	r1, #1
 8004604:	438a      	bics	r2, r1
 8004606:	621a      	str	r2, [r3, #32]
 8004608:	4bb3      	ldr	r3, [pc, #716]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 800460a:	6a1a      	ldr	r2, [r3, #32]
 800460c:	4bb2      	ldr	r3, [pc, #712]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 800460e:	2104      	movs	r1, #4
 8004610:	438a      	bics	r2, r1
 8004612:	621a      	str	r2, [r3, #32]
 8004614:	e01c      	b.n	8004650 <HAL_RCC_OscConfig+0x398>
 8004616:	687b      	ldr	r3, [r7, #4]
 8004618:	689b      	ldr	r3, [r3, #8]
 800461a:	2b05      	cmp	r3, #5
 800461c:	d10c      	bne.n	8004638 <HAL_RCC_OscConfig+0x380>
 800461e:	4bae      	ldr	r3, [pc, #696]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 8004620:	6a1a      	ldr	r2, [r3, #32]
 8004622:	4bad      	ldr	r3, [pc, #692]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 8004624:	2104      	movs	r1, #4
 8004626:	430a      	orrs	r2, r1
 8004628:	621a      	str	r2, [r3, #32]
 800462a:	4bab      	ldr	r3, [pc, #684]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 800462c:	6a1a      	ldr	r2, [r3, #32]
 800462e:	4baa      	ldr	r3, [pc, #680]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 8004630:	2101      	movs	r1, #1
 8004632:	430a      	orrs	r2, r1
 8004634:	621a      	str	r2, [r3, #32]
 8004636:	e00b      	b.n	8004650 <HAL_RCC_OscConfig+0x398>
 8004638:	4ba7      	ldr	r3, [pc, #668]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 800463a:	6a1a      	ldr	r2, [r3, #32]
 800463c:	4ba6      	ldr	r3, [pc, #664]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 800463e:	2101      	movs	r1, #1
 8004640:	438a      	bics	r2, r1
 8004642:	621a      	str	r2, [r3, #32]
 8004644:	4ba4      	ldr	r3, [pc, #656]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 8004646:	6a1a      	ldr	r2, [r3, #32]
 8004648:	4ba3      	ldr	r3, [pc, #652]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 800464a:	2104      	movs	r1, #4
 800464c:	438a      	bics	r2, r1
 800464e:	621a      	str	r2, [r3, #32]
    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8004650:	687b      	ldr	r3, [r7, #4]
 8004652:	689b      	ldr	r3, [r3, #8]
 8004654:	2b00      	cmp	r3, #0
 8004656:	d014      	beq.n	8004682 <HAL_RCC_OscConfig+0x3ca>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004658:	f7fe feb4 	bl	80033c4 <HAL_GetTick>
 800465c:	0003      	movs	r3, r0
 800465e:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004660:	e009      	b.n	8004676 <HAL_RCC_OscConfig+0x3be>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004662:	f7fe feaf 	bl	80033c4 <HAL_GetTick>
 8004666:	0002      	movs	r2, r0
 8004668:	69bb      	ldr	r3, [r7, #24]
 800466a:	1ad3      	subs	r3, r2, r3
 800466c:	4a9b      	ldr	r2, [pc, #620]	@ (80048dc <HAL_RCC_OscConfig+0x624>)
 800466e:	4293      	cmp	r3, r2
 8004670:	d901      	bls.n	8004676 <HAL_RCC_OscConfig+0x3be>
        {
          return HAL_TIMEOUT;
 8004672:	2303      	movs	r3, #3
 8004674:	e12b      	b.n	80048ce <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004676:	4b98      	ldr	r3, [pc, #608]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 8004678:	6a1b      	ldr	r3, [r3, #32]
 800467a:	2202      	movs	r2, #2
 800467c:	4013      	ands	r3, r2
 800467e:	d0f0      	beq.n	8004662 <HAL_RCC_OscConfig+0x3aa>
 8004680:	e013      	b.n	80046aa <HAL_RCC_OscConfig+0x3f2>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004682:	f7fe fe9f 	bl	80033c4 <HAL_GetTick>
 8004686:	0003      	movs	r3, r0
 8004688:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800468a:	e009      	b.n	80046a0 <HAL_RCC_OscConfig+0x3e8>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800468c:	f7fe fe9a 	bl	80033c4 <HAL_GetTick>
 8004690:	0002      	movs	r2, r0
 8004692:	69bb      	ldr	r3, [r7, #24]
 8004694:	1ad3      	subs	r3, r2, r3
 8004696:	4a91      	ldr	r2, [pc, #580]	@ (80048dc <HAL_RCC_OscConfig+0x624>)
 8004698:	4293      	cmp	r3, r2
 800469a:	d901      	bls.n	80046a0 <HAL_RCC_OscConfig+0x3e8>
        {
          return HAL_TIMEOUT;
 800469c:	2303      	movs	r3, #3
 800469e:	e116      	b.n	80048ce <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80046a0:	4b8d      	ldr	r3, [pc, #564]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 80046a2:	6a1b      	ldr	r3, [r3, #32]
 80046a4:	2202      	movs	r2, #2
 80046a6:	4013      	ands	r3, r2
 80046a8:	d1f0      	bne.n	800468c <HAL_RCC_OscConfig+0x3d4>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 80046aa:	231f      	movs	r3, #31
 80046ac:	18fb      	adds	r3, r7, r3
 80046ae:	781b      	ldrb	r3, [r3, #0]
 80046b0:	2b01      	cmp	r3, #1
 80046b2:	d105      	bne.n	80046c0 <HAL_RCC_OscConfig+0x408>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 80046b4:	4b88      	ldr	r3, [pc, #544]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 80046b6:	69da      	ldr	r2, [r3, #28]
 80046b8:	4b87      	ldr	r3, [pc, #540]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 80046ba:	4989      	ldr	r1, [pc, #548]	@ (80048e0 <HAL_RCC_OscConfig+0x628>)
 80046bc:	400a      	ands	r2, r1
 80046be:	61da      	str	r2, [r3, #28]
    }
  }

  /*----------------------------- HSI14 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 80046c0:	687b      	ldr	r3, [r7, #4]
 80046c2:	681b      	ldr	r3, [r3, #0]
 80046c4:	2210      	movs	r2, #16
 80046c6:	4013      	ands	r3, r2
 80046c8:	d063      	beq.n	8004792 <HAL_RCC_OscConfig+0x4da>
    /* Check the parameters */
    assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));

    /* Check the HSI14 State */
    if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 80046ca:	687b      	ldr	r3, [r7, #4]
 80046cc:	695b      	ldr	r3, [r3, #20]
 80046ce:	2b01      	cmp	r3, #1
 80046d0:	d12a      	bne.n	8004728 <HAL_RCC_OscConfig+0x470>
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 80046d2:	4b81      	ldr	r3, [pc, #516]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 80046d4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80046d6:	4b80      	ldr	r3, [pc, #512]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 80046d8:	2104      	movs	r1, #4
 80046da:	430a      	orrs	r2, r1
 80046dc:	635a      	str	r2, [r3, #52]	@ 0x34

      /* Enable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_ENABLE();
 80046de:	4b7e      	ldr	r3, [pc, #504]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 80046e0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80046e2:	4b7d      	ldr	r3, [pc, #500]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 80046e4:	2101      	movs	r1, #1
 80046e6:	430a      	orrs	r2, r1
 80046e8:	635a      	str	r2, [r3, #52]	@ 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80046ea:	f7fe fe6b 	bl	80033c4 <HAL_GetTick>
 80046ee:	0003      	movs	r3, r0
 80046f0:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 80046f2:	e008      	b.n	8004706 <HAL_RCC_OscConfig+0x44e>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 80046f4:	f7fe fe66 	bl	80033c4 <HAL_GetTick>
 80046f8:	0002      	movs	r2, r0
 80046fa:	69bb      	ldr	r3, [r7, #24]
 80046fc:	1ad3      	subs	r3, r2, r3
 80046fe:	2b02      	cmp	r3, #2
 8004700:	d901      	bls.n	8004706 <HAL_RCC_OscConfig+0x44e>
        {
          return HAL_TIMEOUT;
 8004702:	2303      	movs	r3, #3
 8004704:	e0e3      	b.n	80048ce <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 8004706:	4b74      	ldr	r3, [pc, #464]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 8004708:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800470a:	2202      	movs	r2, #2
 800470c:	4013      	ands	r3, r2
 800470e:	d0f1      	beq.n	80046f4 <HAL_RCC_OscConfig+0x43c>
        }      
      } 

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8004710:	4b71      	ldr	r3, [pc, #452]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 8004712:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8004714:	22f8      	movs	r2, #248	@ 0xf8
 8004716:	4393      	bics	r3, r2
 8004718:	0019      	movs	r1, r3
 800471a:	687b      	ldr	r3, [r7, #4]
 800471c:	699b      	ldr	r3, [r3, #24]
 800471e:	00da      	lsls	r2, r3, #3
 8004720:	4b6d      	ldr	r3, [pc, #436]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 8004722:	430a      	orrs	r2, r1
 8004724:	635a      	str	r2, [r3, #52]	@ 0x34
 8004726:	e034      	b.n	8004792 <HAL_RCC_OscConfig+0x4da>
    }
    else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 8004728:	687b      	ldr	r3, [r7, #4]
 800472a:	695b      	ldr	r3, [r3, #20]
 800472c:	3305      	adds	r3, #5
 800472e:	d111      	bne.n	8004754 <HAL_RCC_OscConfig+0x49c>
    {
      /* Enable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_ENABLE();
 8004730:	4b69      	ldr	r3, [pc, #420]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 8004732:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004734:	4b68      	ldr	r3, [pc, #416]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 8004736:	2104      	movs	r1, #4
 8004738:	438a      	bics	r2, r1
 800473a:	635a      	str	r2, [r3, #52]	@ 0x34

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 800473c:	4b66      	ldr	r3, [pc, #408]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 800473e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8004740:	22f8      	movs	r2, #248	@ 0xf8
 8004742:	4393      	bics	r3, r2
 8004744:	0019      	movs	r1, r3
 8004746:	687b      	ldr	r3, [r7, #4]
 8004748:	699b      	ldr	r3, [r3, #24]
 800474a:	00da      	lsls	r2, r3, #3
 800474c:	4b62      	ldr	r3, [pc, #392]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 800474e:	430a      	orrs	r2, r1
 8004750:	635a      	str	r2, [r3, #52]	@ 0x34
 8004752:	e01e      	b.n	8004792 <HAL_RCC_OscConfig+0x4da>
    }
    else
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 8004754:	4b60      	ldr	r3, [pc, #384]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 8004756:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004758:	4b5f      	ldr	r3, [pc, #380]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 800475a:	2104      	movs	r1, #4
 800475c:	430a      	orrs	r2, r1
 800475e:	635a      	str	r2, [r3, #52]	@ 0x34

      /* Disable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_DISABLE();
 8004760:	4b5d      	ldr	r3, [pc, #372]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 8004762:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004764:	4b5c      	ldr	r3, [pc, #368]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 8004766:	2101      	movs	r1, #1
 8004768:	438a      	bics	r2, r1
 800476a:	635a      	str	r2, [r3, #52]	@ 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800476c:	f7fe fe2a 	bl	80033c4 <HAL_GetTick>
 8004770:	0003      	movs	r3, r0
 8004772:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8004774:	e008      	b.n	8004788 <HAL_RCC_OscConfig+0x4d0>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8004776:	f7fe fe25 	bl	80033c4 <HAL_GetTick>
 800477a:	0002      	movs	r2, r0
 800477c:	69bb      	ldr	r3, [r7, #24]
 800477e:	1ad3      	subs	r3, r2, r3
 8004780:	2b02      	cmp	r3, #2
 8004782:	d901      	bls.n	8004788 <HAL_RCC_OscConfig+0x4d0>
        {
          return HAL_TIMEOUT;
 8004784:	2303      	movs	r3, #3
 8004786:	e0a2      	b.n	80048ce <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8004788:	4b53      	ldr	r3, [pc, #332]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 800478a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800478c:	2202      	movs	r2, #2
 800478e:	4013      	ands	r3, r2
 8004790:	d1f1      	bne.n	8004776 <HAL_RCC_OscConfig+0x4be>
#endif /* RCC_HSI48_SUPPORT */
       
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8004792:	687b      	ldr	r3, [r7, #4]
 8004794:	6a1b      	ldr	r3, [r3, #32]
 8004796:	2b00      	cmp	r3, #0
 8004798:	d100      	bne.n	800479c <HAL_RCC_OscConfig+0x4e4>
 800479a:	e097      	b.n	80048cc <HAL_RCC_OscConfig+0x614>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 800479c:	4b4e      	ldr	r3, [pc, #312]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 800479e:	685b      	ldr	r3, [r3, #4]
 80047a0:	220c      	movs	r2, #12
 80047a2:	4013      	ands	r3, r2
 80047a4:	2b08      	cmp	r3, #8
 80047a6:	d100      	bne.n	80047aa <HAL_RCC_OscConfig+0x4f2>
 80047a8:	e06b      	b.n	8004882 <HAL_RCC_OscConfig+0x5ca>
    { 
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80047aa:	687b      	ldr	r3, [r7, #4]
 80047ac:	6a1b      	ldr	r3, [r3, #32]
 80047ae:	2b02      	cmp	r3, #2
 80047b0:	d14c      	bne.n	800484c <HAL_RCC_OscConfig+0x594>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
        assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
  
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80047b2:	4b49      	ldr	r3, [pc, #292]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 80047b4:	681a      	ldr	r2, [r3, #0]
 80047b6:	4b48      	ldr	r3, [pc, #288]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 80047b8:	494a      	ldr	r1, [pc, #296]	@ (80048e4 <HAL_RCC_OscConfig+0x62c>)
 80047ba:	400a      	ands	r2, r1
 80047bc:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80047be:	f7fe fe01 	bl	80033c4 <HAL_GetTick>
 80047c2:	0003      	movs	r3, r0
 80047c4:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 80047c6:	e008      	b.n	80047da <HAL_RCC_OscConfig+0x522>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80047c8:	f7fe fdfc 	bl	80033c4 <HAL_GetTick>
 80047cc:	0002      	movs	r2, r0
 80047ce:	69bb      	ldr	r3, [r7, #24]
 80047d0:	1ad3      	subs	r3, r2, r3
 80047d2:	2b02      	cmp	r3, #2
 80047d4:	d901      	bls.n	80047da <HAL_RCC_OscConfig+0x522>
          {
            return HAL_TIMEOUT;
 80047d6:	2303      	movs	r3, #3
 80047d8:	e079      	b.n	80048ce <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 80047da:	4b3f      	ldr	r3, [pc, #252]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 80047dc:	681a      	ldr	r2, [r3, #0]
 80047de:	2380      	movs	r3, #128	@ 0x80
 80047e0:	049b      	lsls	r3, r3, #18
 80047e2:	4013      	ands	r3, r2
 80047e4:	d1f0      	bne.n	80047c8 <HAL_RCC_OscConfig+0x510>
          }
        }

        /* Configure the main PLL clock source, predivider and multiplication factor. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80047e6:	4b3c      	ldr	r3, [pc, #240]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 80047e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80047ea:	220f      	movs	r2, #15
 80047ec:	4393      	bics	r3, r2
 80047ee:	0019      	movs	r1, r3
 80047f0:	687b      	ldr	r3, [r7, #4]
 80047f2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80047f4:	4b38      	ldr	r3, [pc, #224]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 80047f6:	430a      	orrs	r2, r1
 80047f8:	62da      	str	r2, [r3, #44]	@ 0x2c
 80047fa:	4b37      	ldr	r3, [pc, #220]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 80047fc:	685b      	ldr	r3, [r3, #4]
 80047fe:	4a3a      	ldr	r2, [pc, #232]	@ (80048e8 <HAL_RCC_OscConfig+0x630>)
 8004800:	4013      	ands	r3, r2
 8004802:	0019      	movs	r1, r3
 8004804:	687b      	ldr	r3, [r7, #4]
 8004806:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8004808:	687b      	ldr	r3, [r7, #4]
 800480a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800480c:	431a      	orrs	r2, r3
 800480e:	4b32      	ldr	r3, [pc, #200]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 8004810:	430a      	orrs	r2, r1
 8004812:	605a      	str	r2, [r3, #4]
                             RCC_OscInitStruct->PLL.PREDIV,
                             RCC_OscInitStruct->PLL.PLLMUL);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8004814:	4b30      	ldr	r3, [pc, #192]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 8004816:	681a      	ldr	r2, [r3, #0]
 8004818:	4b2f      	ldr	r3, [pc, #188]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 800481a:	2180      	movs	r1, #128	@ 0x80
 800481c:	0449      	lsls	r1, r1, #17
 800481e:	430a      	orrs	r2, r1
 8004820:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004822:	f7fe fdcf 	bl	80033c4 <HAL_GetTick>
 8004826:	0003      	movs	r3, r0
 8004828:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 800482a:	e008      	b.n	800483e <HAL_RCC_OscConfig+0x586>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800482c:	f7fe fdca 	bl	80033c4 <HAL_GetTick>
 8004830:	0002      	movs	r2, r0
 8004832:	69bb      	ldr	r3, [r7, #24]
 8004834:	1ad3      	subs	r3, r2, r3
 8004836:	2b02      	cmp	r3, #2
 8004838:	d901      	bls.n	800483e <HAL_RCC_OscConfig+0x586>
          {
            return HAL_TIMEOUT;
 800483a:	2303      	movs	r3, #3
 800483c:	e047      	b.n	80048ce <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 800483e:	4b26      	ldr	r3, [pc, #152]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 8004840:	681a      	ldr	r2, [r3, #0]
 8004842:	2380      	movs	r3, #128	@ 0x80
 8004844:	049b      	lsls	r3, r3, #18
 8004846:	4013      	ands	r3, r2
 8004848:	d0f0      	beq.n	800482c <HAL_RCC_OscConfig+0x574>
 800484a:	e03f      	b.n	80048cc <HAL_RCC_OscConfig+0x614>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800484c:	4b22      	ldr	r3, [pc, #136]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 800484e:	681a      	ldr	r2, [r3, #0]
 8004850:	4b21      	ldr	r3, [pc, #132]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 8004852:	4924      	ldr	r1, [pc, #144]	@ (80048e4 <HAL_RCC_OscConfig+0x62c>)
 8004854:	400a      	ands	r2, r1
 8004856:	601a      	str	r2, [r3, #0]
 
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004858:	f7fe fdb4 	bl	80033c4 <HAL_GetTick>
 800485c:	0003      	movs	r3, r0
 800485e:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8004860:	e008      	b.n	8004874 <HAL_RCC_OscConfig+0x5bc>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004862:	f7fe fdaf 	bl	80033c4 <HAL_GetTick>
 8004866:	0002      	movs	r2, r0
 8004868:	69bb      	ldr	r3, [r7, #24]
 800486a:	1ad3      	subs	r3, r2, r3
 800486c:	2b02      	cmp	r3, #2
 800486e:	d901      	bls.n	8004874 <HAL_RCC_OscConfig+0x5bc>
          {
            return HAL_TIMEOUT;
 8004870:	2303      	movs	r3, #3
 8004872:	e02c      	b.n	80048ce <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8004874:	4b18      	ldr	r3, [pc, #96]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 8004876:	681a      	ldr	r2, [r3, #0]
 8004878:	2380      	movs	r3, #128	@ 0x80
 800487a:	049b      	lsls	r3, r3, #18
 800487c:	4013      	ands	r3, r2
 800487e:	d1f0      	bne.n	8004862 <HAL_RCC_OscConfig+0x5aa>
 8004880:	e024      	b.n	80048cc <HAL_RCC_OscConfig+0x614>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8004882:	687b      	ldr	r3, [r7, #4]
 8004884:	6a1b      	ldr	r3, [r3, #32]
 8004886:	2b01      	cmp	r3, #1
 8004888:	d101      	bne.n	800488e <HAL_RCC_OscConfig+0x5d6>
      {
        return HAL_ERROR;
 800488a:	2301      	movs	r3, #1
 800488c:	e01f      	b.n	80048ce <HAL_RCC_OscConfig+0x616>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config  = RCC->CFGR;
 800488e:	4b12      	ldr	r3, [pc, #72]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 8004890:	685b      	ldr	r3, [r3, #4]
 8004892:	617b      	str	r3, [r7, #20]
        pll_config2 = RCC->CFGR2;
 8004894:	4b10      	ldr	r3, [pc, #64]	@ (80048d8 <HAL_RCC_OscConfig+0x620>)
 8004896:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004898:	613b      	str	r3, [r7, #16]
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 800489a:	697a      	ldr	r2, [r7, #20]
 800489c:	2380      	movs	r3, #128	@ 0x80
 800489e:	025b      	lsls	r3, r3, #9
 80048a0:	401a      	ands	r2, r3
 80048a2:	687b      	ldr	r3, [r7, #4]
 80048a4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80048a6:	429a      	cmp	r2, r3
 80048a8:	d10e      	bne.n	80048c8 <HAL_RCC_OscConfig+0x610>
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 80048aa:	693b      	ldr	r3, [r7, #16]
 80048ac:	220f      	movs	r2, #15
 80048ae:	401a      	ands	r2, r3
 80048b0:	687b      	ldr	r3, [r7, #4]
 80048b2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 80048b4:	429a      	cmp	r2, r3
 80048b6:	d107      	bne.n	80048c8 <HAL_RCC_OscConfig+0x610>
           (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 80048b8:	697a      	ldr	r2, [r7, #20]
 80048ba:	23f0      	movs	r3, #240	@ 0xf0
 80048bc:	039b      	lsls	r3, r3, #14
 80048be:	401a      	ands	r2, r3
 80048c0:	687b      	ldr	r3, [r7, #4]
 80048c2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 80048c4:	429a      	cmp	r2, r3
 80048c6:	d001      	beq.n	80048cc <HAL_RCC_OscConfig+0x614>
        {
          return HAL_ERROR;
 80048c8:	2301      	movs	r3, #1
 80048ca:	e000      	b.n	80048ce <HAL_RCC_OscConfig+0x616>
        }
      }
    }
  }

  return HAL_OK;
 80048cc:	2300      	movs	r3, #0
}
 80048ce:	0018      	movs	r0, r3
 80048d0:	46bd      	mov	sp, r7
 80048d2:	b008      	add	sp, #32
 80048d4:	bd80      	pop	{r7, pc}
 80048d6:	46c0      	nop			@ (mov r8, r8)
 80048d8:	40021000 	.word	0x40021000
 80048dc:	00001388 	.word	0x00001388
 80048e0:	efffffff 	.word	0xefffffff
 80048e4:	feffffff 	.word	0xfeffffff
 80048e8:	ffc2ffff 	.word	0xffc2ffff

080048ec <HAL_RCC_ClockConfig>:
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 80048ec:	b580      	push	{r7, lr}
 80048ee:	b084      	sub	sp, #16
 80048f0:	af00      	add	r7, sp, #0
 80048f2:	6078      	str	r0, [r7, #4]
 80048f4:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 80048f6:	687b      	ldr	r3, [r7, #4]
 80048f8:	2b00      	cmp	r3, #0
 80048fa:	d101      	bne.n	8004900 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 80048fc:	2301      	movs	r3, #1
 80048fe:	e0b3      	b.n	8004a68 <HAL_RCC_ClockConfig+0x17c>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
  must be correctly programmed according to the frequency of the CPU clock 
    (HCLK) of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8004900:	4b5b      	ldr	r3, [pc, #364]	@ (8004a70 <HAL_RCC_ClockConfig+0x184>)
 8004902:	681b      	ldr	r3, [r3, #0]
 8004904:	2201      	movs	r2, #1
 8004906:	4013      	ands	r3, r2
 8004908:	683a      	ldr	r2, [r7, #0]
 800490a:	429a      	cmp	r2, r3
 800490c:	d911      	bls.n	8004932 <HAL_RCC_ClockConfig+0x46>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800490e:	4b58      	ldr	r3, [pc, #352]	@ (8004a70 <HAL_RCC_ClockConfig+0x184>)
 8004910:	681b      	ldr	r3, [r3, #0]
 8004912:	2201      	movs	r2, #1
 8004914:	4393      	bics	r3, r2
 8004916:	0019      	movs	r1, r3
 8004918:	4b55      	ldr	r3, [pc, #340]	@ (8004a70 <HAL_RCC_ClockConfig+0x184>)
 800491a:	683a      	ldr	r2, [r7, #0]
 800491c:	430a      	orrs	r2, r1
 800491e:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8004920:	4b53      	ldr	r3, [pc, #332]	@ (8004a70 <HAL_RCC_ClockConfig+0x184>)
 8004922:	681b      	ldr	r3, [r3, #0]
 8004924:	2201      	movs	r2, #1
 8004926:	4013      	ands	r3, r2
 8004928:	683a      	ldr	r2, [r7, #0]
 800492a:	429a      	cmp	r2, r3
 800492c:	d001      	beq.n	8004932 <HAL_RCC_ClockConfig+0x46>
    {
      return HAL_ERROR;
 800492e:	2301      	movs	r3, #1
 8004930:	e09a      	b.n	8004a68 <HAL_RCC_ClockConfig+0x17c>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8004932:	687b      	ldr	r3, [r7, #4]
 8004934:	681b      	ldr	r3, [r3, #0]
 8004936:	2202      	movs	r2, #2
 8004938:	4013      	ands	r3, r2
 800493a:	d015      	beq.n	8004968 <HAL_RCC_ClockConfig+0x7c>
  {
    /* Set the highest APB divider in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800493c:	687b      	ldr	r3, [r7, #4]
 800493e:	681b      	ldr	r3, [r3, #0]
 8004940:	2204      	movs	r2, #4
 8004942:	4013      	ands	r3, r2
 8004944:	d006      	beq.n	8004954 <HAL_RCC_ClockConfig+0x68>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 8004946:	4b4b      	ldr	r3, [pc, #300]	@ (8004a74 <HAL_RCC_ClockConfig+0x188>)
 8004948:	685a      	ldr	r2, [r3, #4]
 800494a:	4b4a      	ldr	r3, [pc, #296]	@ (8004a74 <HAL_RCC_ClockConfig+0x188>)
 800494c:	21e0      	movs	r1, #224	@ 0xe0
 800494e:	00c9      	lsls	r1, r1, #3
 8004950:	430a      	orrs	r2, r1
 8004952:	605a      	str	r2, [r3, #4]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8004954:	4b47      	ldr	r3, [pc, #284]	@ (8004a74 <HAL_RCC_ClockConfig+0x188>)
 8004956:	685b      	ldr	r3, [r3, #4]
 8004958:	22f0      	movs	r2, #240	@ 0xf0
 800495a:	4393      	bics	r3, r2
 800495c:	0019      	movs	r1, r3
 800495e:	687b      	ldr	r3, [r7, #4]
 8004960:	689a      	ldr	r2, [r3, #8]
 8004962:	4b44      	ldr	r3, [pc, #272]	@ (8004a74 <HAL_RCC_ClockConfig+0x188>)
 8004964:	430a      	orrs	r2, r1
 8004966:	605a      	str	r2, [r3, #4]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8004968:	687b      	ldr	r3, [r7, #4]
 800496a:	681b      	ldr	r3, [r3, #0]
 800496c:	2201      	movs	r2, #1
 800496e:	4013      	ands	r3, r2
 8004970:	d040      	beq.n	80049f4 <HAL_RCC_ClockConfig+0x108>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
    
    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8004972:	687b      	ldr	r3, [r7, #4]
 8004974:	685b      	ldr	r3, [r3, #4]
 8004976:	2b01      	cmp	r3, #1
 8004978:	d107      	bne.n	800498a <HAL_RCC_ClockConfig+0x9e>
    {
      /* Check the HSE ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800497a:	4b3e      	ldr	r3, [pc, #248]	@ (8004a74 <HAL_RCC_ClockConfig+0x188>)
 800497c:	681a      	ldr	r2, [r3, #0]
 800497e:	2380      	movs	r3, #128	@ 0x80
 8004980:	029b      	lsls	r3, r3, #10
 8004982:	4013      	ands	r3, r2
 8004984:	d114      	bne.n	80049b0 <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8004986:	2301      	movs	r3, #1
 8004988:	e06e      	b.n	8004a68 <HAL_RCC_ClockConfig+0x17c>
      }
    }
    /* PLL is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800498a:	687b      	ldr	r3, [r7, #4]
 800498c:	685b      	ldr	r3, [r3, #4]
 800498e:	2b02      	cmp	r3, #2
 8004990:	d107      	bne.n	80049a2 <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the PLL ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8004992:	4b38      	ldr	r3, [pc, #224]	@ (8004a74 <HAL_RCC_ClockConfig+0x188>)
 8004994:	681a      	ldr	r2, [r3, #0]
 8004996:	2380      	movs	r3, #128	@ 0x80
 8004998:	049b      	lsls	r3, r3, #18
 800499a:	4013      	ands	r3, r2
 800499c:	d108      	bne.n	80049b0 <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 800499e:	2301      	movs	r3, #1
 80049a0:	e062      	b.n	8004a68 <HAL_RCC_ClockConfig+0x17c>
#endif /* RCC_CFGR_SWS_HSI48 */
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80049a2:	4b34      	ldr	r3, [pc, #208]	@ (8004a74 <HAL_RCC_ClockConfig+0x188>)
 80049a4:	681b      	ldr	r3, [r3, #0]
 80049a6:	2202      	movs	r2, #2
 80049a8:	4013      	ands	r3, r2
 80049aa:	d101      	bne.n	80049b0 <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 80049ac:	2301      	movs	r3, #1
 80049ae:	e05b      	b.n	8004a68 <HAL_RCC_ClockConfig+0x17c>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80049b0:	4b30      	ldr	r3, [pc, #192]	@ (8004a74 <HAL_RCC_ClockConfig+0x188>)
 80049b2:	685b      	ldr	r3, [r3, #4]
 80049b4:	2203      	movs	r2, #3
 80049b6:	4393      	bics	r3, r2
 80049b8:	0019      	movs	r1, r3
 80049ba:	687b      	ldr	r3, [r7, #4]
 80049bc:	685a      	ldr	r2, [r3, #4]
 80049be:	4b2d      	ldr	r3, [pc, #180]	@ (8004a74 <HAL_RCC_ClockConfig+0x188>)
 80049c0:	430a      	orrs	r2, r1
 80049c2:	605a      	str	r2, [r3, #4]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 80049c4:	f7fe fcfe 	bl	80033c4 <HAL_GetTick>
 80049c8:	0003      	movs	r3, r0
 80049ca:	60fb      	str	r3, [r7, #12]
    
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80049cc:	e009      	b.n	80049e2 <HAL_RCC_ClockConfig+0xf6>
    {
      if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 80049ce:	f7fe fcf9 	bl	80033c4 <HAL_GetTick>
 80049d2:	0002      	movs	r2, r0
 80049d4:	68fb      	ldr	r3, [r7, #12]
 80049d6:	1ad3      	subs	r3, r2, r3
 80049d8:	4a27      	ldr	r2, [pc, #156]	@ (8004a78 <HAL_RCC_ClockConfig+0x18c>)
 80049da:	4293      	cmp	r3, r2
 80049dc:	d901      	bls.n	80049e2 <HAL_RCC_ClockConfig+0xf6>
      {
        return HAL_TIMEOUT;
 80049de:	2303      	movs	r3, #3
 80049e0:	e042      	b.n	8004a68 <HAL_RCC_ClockConfig+0x17c>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80049e2:	4b24      	ldr	r3, [pc, #144]	@ (8004a74 <HAL_RCC_ClockConfig+0x188>)
 80049e4:	685b      	ldr	r3, [r3, #4]
 80049e6:	220c      	movs	r2, #12
 80049e8:	401a      	ands	r2, r3
 80049ea:	687b      	ldr	r3, [r7, #4]
 80049ec:	685b      	ldr	r3, [r3, #4]
 80049ee:	009b      	lsls	r3, r3, #2
 80049f0:	429a      	cmp	r2, r3
 80049f2:	d1ec      	bne.n	80049ce <HAL_RCC_ClockConfig+0xe2>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80049f4:	4b1e      	ldr	r3, [pc, #120]	@ (8004a70 <HAL_RCC_ClockConfig+0x184>)
 80049f6:	681b      	ldr	r3, [r3, #0]
 80049f8:	2201      	movs	r2, #1
 80049fa:	4013      	ands	r3, r2
 80049fc:	683a      	ldr	r2, [r7, #0]
 80049fe:	429a      	cmp	r2, r3
 8004a00:	d211      	bcs.n	8004a26 <HAL_RCC_ClockConfig+0x13a>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004a02:	4b1b      	ldr	r3, [pc, #108]	@ (8004a70 <HAL_RCC_ClockConfig+0x184>)
 8004a04:	681b      	ldr	r3, [r3, #0]
 8004a06:	2201      	movs	r2, #1
 8004a08:	4393      	bics	r3, r2
 8004a0a:	0019      	movs	r1, r3
 8004a0c:	4b18      	ldr	r3, [pc, #96]	@ (8004a70 <HAL_RCC_ClockConfig+0x184>)
 8004a0e:	683a      	ldr	r2, [r7, #0]
 8004a10:	430a      	orrs	r2, r1
 8004a12:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8004a14:	4b16      	ldr	r3, [pc, #88]	@ (8004a70 <HAL_RCC_ClockConfig+0x184>)
 8004a16:	681b      	ldr	r3, [r3, #0]
 8004a18:	2201      	movs	r2, #1
 8004a1a:	4013      	ands	r3, r2
 8004a1c:	683a      	ldr	r2, [r7, #0]
 8004a1e:	429a      	cmp	r2, r3
 8004a20:	d001      	beq.n	8004a26 <HAL_RCC_ClockConfig+0x13a>
    {
      return HAL_ERROR;
 8004a22:	2301      	movs	r3, #1
 8004a24:	e020      	b.n	8004a68 <HAL_RCC_ClockConfig+0x17c>
    }
  }    

  /*-------------------------- PCLK1 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8004a26:	687b      	ldr	r3, [r7, #4]
 8004a28:	681b      	ldr	r3, [r3, #0]
 8004a2a:	2204      	movs	r2, #4
 8004a2c:	4013      	ands	r3, r2
 8004a2e:	d009      	beq.n	8004a44 <HAL_RCC_ClockConfig+0x158>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 8004a30:	4b10      	ldr	r3, [pc, #64]	@ (8004a74 <HAL_RCC_ClockConfig+0x188>)
 8004a32:	685b      	ldr	r3, [r3, #4]
 8004a34:	4a11      	ldr	r2, [pc, #68]	@ (8004a7c <HAL_RCC_ClockConfig+0x190>)
 8004a36:	4013      	ands	r3, r2
 8004a38:	0019      	movs	r1, r3
 8004a3a:	687b      	ldr	r3, [r7, #4]
 8004a3c:	68da      	ldr	r2, [r3, #12]
 8004a3e:	4b0d      	ldr	r3, [pc, #52]	@ (8004a74 <HAL_RCC_ClockConfig+0x188>)
 8004a40:	430a      	orrs	r2, r1
 8004a42:	605a      	str	r2, [r3, #4]
  }
  
  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_BITNUMBER];
 8004a44:	f000 f820 	bl	8004a88 <HAL_RCC_GetSysClockFreq>
 8004a48:	0001      	movs	r1, r0
 8004a4a:	4b0a      	ldr	r3, [pc, #40]	@ (8004a74 <HAL_RCC_ClockConfig+0x188>)
 8004a4c:	685b      	ldr	r3, [r3, #4]
 8004a4e:	091b      	lsrs	r3, r3, #4
 8004a50:	220f      	movs	r2, #15
 8004a52:	4013      	ands	r3, r2
 8004a54:	4a0a      	ldr	r2, [pc, #40]	@ (8004a80 <HAL_RCC_ClockConfig+0x194>)
 8004a56:	5cd3      	ldrb	r3, [r2, r3]
 8004a58:	000a      	movs	r2, r1
 8004a5a:	40da      	lsrs	r2, r3
 8004a5c:	4b09      	ldr	r3, [pc, #36]	@ (8004a84 <HAL_RCC_ClockConfig+0x198>)
 8004a5e:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick (TICK_INT_PRIORITY);
 8004a60:	2000      	movs	r0, #0
 8004a62:	f7fe fc69 	bl	8003338 <HAL_InitTick>
  
  return HAL_OK;
 8004a66:	2300      	movs	r3, #0
}
 8004a68:	0018      	movs	r0, r3
 8004a6a:	46bd      	mov	sp, r7
 8004a6c:	b004      	add	sp, #16
 8004a6e:	bd80      	pop	{r7, pc}
 8004a70:	40022000 	.word	0x40022000
 8004a74:	40021000 	.word	0x40021000
 8004a78:	00001388 	.word	0x00001388
 8004a7c:	fffff8ff 	.word	0xfffff8ff
 8004a80:	0800a004 	.word	0x0800a004
 8004a84:	20000000 	.word	0x20000000

08004a88 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *         
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8004a88:	b580      	push	{r7, lr}
 8004a8a:	b086      	sub	sp, #24
 8004a8c:	af00      	add	r7, sp, #0
  static const uint8_t aPLLMULFactorTable[16U] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
                                                   10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
  static const uint8_t aPredivFactorTable[16U] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
                                                   9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};

  uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 8004a8e:	2300      	movs	r3, #0
 8004a90:	60fb      	str	r3, [r7, #12]
 8004a92:	2300      	movs	r3, #0
 8004a94:	60bb      	str	r3, [r7, #8]
 8004a96:	2300      	movs	r3, #0
 8004a98:	617b      	str	r3, [r7, #20]
 8004a9a:	2300      	movs	r3, #0
 8004a9c:	607b      	str	r3, [r7, #4]
  uint32_t sysclockfreq = 0U;
 8004a9e:	2300      	movs	r3, #0
 8004aa0:	613b      	str	r3, [r7, #16]
  
  tmpreg = RCC->CFGR;
 8004aa2:	4b20      	ldr	r3, [pc, #128]	@ (8004b24 <HAL_RCC_GetSysClockFreq+0x9c>)
 8004aa4:	685b      	ldr	r3, [r3, #4]
 8004aa6:	60fb      	str	r3, [r7, #12]
  
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8004aa8:	68fb      	ldr	r3, [r7, #12]
 8004aaa:	220c      	movs	r2, #12
 8004aac:	4013      	ands	r3, r2
 8004aae:	2b04      	cmp	r3, #4
 8004ab0:	d002      	beq.n	8004ab8 <HAL_RCC_GetSysClockFreq+0x30>
 8004ab2:	2b08      	cmp	r3, #8
 8004ab4:	d003      	beq.n	8004abe <HAL_RCC_GetSysClockFreq+0x36>
 8004ab6:	e02c      	b.n	8004b12 <HAL_RCC_GetSysClockFreq+0x8a>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 8004ab8:	4b1b      	ldr	r3, [pc, #108]	@ (8004b28 <HAL_RCC_GetSysClockFreq+0xa0>)
 8004aba:	613b      	str	r3, [r7, #16]
      break;
 8004abc:	e02c      	b.n	8004b18 <HAL_RCC_GetSysClockFreq+0x90>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 8004abe:	68fb      	ldr	r3, [r7, #12]
 8004ac0:	0c9b      	lsrs	r3, r3, #18
 8004ac2:	220f      	movs	r2, #15
 8004ac4:	4013      	ands	r3, r2
 8004ac6:	4a19      	ldr	r2, [pc, #100]	@ (8004b2c <HAL_RCC_GetSysClockFreq+0xa4>)
 8004ac8:	5cd3      	ldrb	r3, [r2, r3]
 8004aca:	607b      	str	r3, [r7, #4]
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 8004acc:	4b15      	ldr	r3, [pc, #84]	@ (8004b24 <HAL_RCC_GetSysClockFreq+0x9c>)
 8004ace:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004ad0:	220f      	movs	r2, #15
 8004ad2:	4013      	ands	r3, r2
 8004ad4:	4a16      	ldr	r2, [pc, #88]	@ (8004b30 <HAL_RCC_GetSysClockFreq+0xa8>)
 8004ad6:	5cd3      	ldrb	r3, [r2, r3]
 8004ad8:	60bb      	str	r3, [r7, #8]
      if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 8004ada:	68fa      	ldr	r2, [r7, #12]
 8004adc:	2380      	movs	r3, #128	@ 0x80
 8004ade:	025b      	lsls	r3, r3, #9
 8004ae0:	4013      	ands	r3, r2
 8004ae2:	d009      	beq.n	8004af8 <HAL_RCC_GetSysClockFreq+0x70>
      {
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8004ae4:	68b9      	ldr	r1, [r7, #8]
 8004ae6:	4810      	ldr	r0, [pc, #64]	@ (8004b28 <HAL_RCC_GetSysClockFreq+0xa0>)
 8004ae8:	f7fb fb2a 	bl	8000140 <__udivsi3>
 8004aec:	0003      	movs	r3, r0
 8004aee:	001a      	movs	r2, r3
 8004af0:	687b      	ldr	r3, [r7, #4]
 8004af2:	4353      	muls	r3, r2
 8004af4:	617b      	str	r3, [r7, #20]
 8004af6:	e009      	b.n	8004b0c <HAL_RCC_GetSysClockFreq+0x84>
#if  (defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F070x6) || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx) || defined(STM32F070xB) || defined(STM32F091xC) || defined(STM32F098xx) || defined(STM32F030xC))
        /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
#else
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
 8004af8:	6879      	ldr	r1, [r7, #4]
 8004afa:	000a      	movs	r2, r1
 8004afc:	0152      	lsls	r2, r2, #5
 8004afe:	1a52      	subs	r2, r2, r1
 8004b00:	0193      	lsls	r3, r2, #6
 8004b02:	1a9b      	subs	r3, r3, r2
 8004b04:	00db      	lsls	r3, r3, #3
 8004b06:	185b      	adds	r3, r3, r1
 8004b08:	021b      	lsls	r3, r3, #8
 8004b0a:	617b      	str	r3, [r7, #20]
#endif
      }
      sysclockfreq = pllclk;
 8004b0c:	697b      	ldr	r3, [r7, #20]
 8004b0e:	613b      	str	r3, [r7, #16]
      break;
 8004b10:	e002      	b.n	8004b18 <HAL_RCC_GetSysClockFreq+0x90>
    }
#endif /* RCC_CFGR_SWS_HSI48 */
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    default: /* HSI used as system clock */
    {
      sysclockfreq = HSI_VALUE;
 8004b12:	4b05      	ldr	r3, [pc, #20]	@ (8004b28 <HAL_RCC_GetSysClockFreq+0xa0>)
 8004b14:	613b      	str	r3, [r7, #16]
      break;
 8004b16:	46c0      	nop			@ (mov r8, r8)
    }
  }
  return sysclockfreq;
 8004b18:	693b      	ldr	r3, [r7, #16]
}
 8004b1a:	0018      	movs	r0, r3
 8004b1c:	46bd      	mov	sp, r7
 8004b1e:	b006      	add	sp, #24
 8004b20:	bd80      	pop	{r7, pc}
 8004b22:	46c0      	nop			@ (mov r8, r8)
 8004b24:	40021000 	.word	0x40021000
 8004b28:	007a1200 	.word	0x007a1200
 8004b2c:	0800a01c 	.word	0x0800a01c
 8004b30:	0800a02c 	.word	0x0800a02c

08004b34 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8004b34:	b580      	push	{r7, lr}
 8004b36:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8004b38:	4b02      	ldr	r3, [pc, #8]	@ (8004b44 <HAL_RCC_GetHCLKFreq+0x10>)
 8004b3a:	681b      	ldr	r3, [r3, #0]
}
 8004b3c:	0018      	movs	r0, r3
 8004b3e:	46bd      	mov	sp, r7
 8004b40:	bd80      	pop	{r7, pc}
 8004b42:	46c0      	nop			@ (mov r8, r8)
 8004b44:	20000000 	.word	0x20000000

08004b48 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8004b48:	b580      	push	{r7, lr}
 8004b4a:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE) >> RCC_CFGR_PPRE_BITNUMBER]);
 8004b4c:	f7ff fff2 	bl	8004b34 <HAL_RCC_GetHCLKFreq>
 8004b50:	0001      	movs	r1, r0
 8004b52:	4b06      	ldr	r3, [pc, #24]	@ (8004b6c <HAL_RCC_GetPCLK1Freq+0x24>)
 8004b54:	685b      	ldr	r3, [r3, #4]
 8004b56:	0a1b      	lsrs	r3, r3, #8
 8004b58:	2207      	movs	r2, #7
 8004b5a:	4013      	ands	r3, r2
 8004b5c:	4a04      	ldr	r2, [pc, #16]	@ (8004b70 <HAL_RCC_GetPCLK1Freq+0x28>)
 8004b5e:	5cd3      	ldrb	r3, [r2, r3]
 8004b60:	40d9      	lsrs	r1, r3
 8004b62:	000b      	movs	r3, r1
}    
 8004b64:	0018      	movs	r0, r3
 8004b66:	46bd      	mov	sp, r7
 8004b68:	bd80      	pop	{r7, pc}
 8004b6a:	46c0      	nop			@ (mov r8, r8)
 8004b6c:	40021000 	.word	0x40021000
 8004b70:	0800a014 	.word	0x0800a014

08004b74 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8004b74:	b580      	push	{r7, lr}
 8004b76:	b086      	sub	sp, #24
 8004b78:	af00      	add	r7, sp, #0
 8004b7a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0U;
 8004b7c:	2300      	movs	r3, #0
 8004b7e:	613b      	str	r3, [r7, #16]
  uint32_t temp_reg = 0U;
 8004b80:	2300      	movs	r3, #0
 8004b82:	60fb      	str	r3, [r7, #12]

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
  
  /*---------------------------- RTC configuration -------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8004b84:	687b      	ldr	r3, [r7, #4]
 8004b86:	681a      	ldr	r2, [r3, #0]
 8004b88:	2380      	movs	r3, #128	@ 0x80
 8004b8a:	025b      	lsls	r3, r3, #9
 8004b8c:	4013      	ands	r3, r2
 8004b8e:	d100      	bne.n	8004b92 <HAL_RCCEx_PeriphCLKConfig+0x1e>
 8004b90:	e08e      	b.n	8004cb0 <HAL_RCCEx_PeriphCLKConfig+0x13c>
  {
    /* check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));
    
    FlagStatus       pwrclkchanged = RESET;
 8004b92:	2017      	movs	r0, #23
 8004b94:	183b      	adds	r3, r7, r0
 8004b96:	2200      	movs	r2, #0
 8004b98:	701a      	strb	r2, [r3, #0]

    /* As soon as function is called to change RTC clock source, activation of the 
       power domain is done. */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8004b9a:	4b57      	ldr	r3, [pc, #348]	@ (8004cf8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004b9c:	69da      	ldr	r2, [r3, #28]
 8004b9e:	2380      	movs	r3, #128	@ 0x80
 8004ba0:	055b      	lsls	r3, r3, #21
 8004ba2:	4013      	ands	r3, r2
 8004ba4:	d110      	bne.n	8004bc8 <HAL_RCCEx_PeriphCLKConfig+0x54>
    {
    __HAL_RCC_PWR_CLK_ENABLE();
 8004ba6:	4b54      	ldr	r3, [pc, #336]	@ (8004cf8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004ba8:	69da      	ldr	r2, [r3, #28]
 8004baa:	4b53      	ldr	r3, [pc, #332]	@ (8004cf8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004bac:	2180      	movs	r1, #128	@ 0x80
 8004bae:	0549      	lsls	r1, r1, #21
 8004bb0:	430a      	orrs	r2, r1
 8004bb2:	61da      	str	r2, [r3, #28]
 8004bb4:	4b50      	ldr	r3, [pc, #320]	@ (8004cf8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004bb6:	69da      	ldr	r2, [r3, #28]
 8004bb8:	2380      	movs	r3, #128	@ 0x80
 8004bba:	055b      	lsls	r3, r3, #21
 8004bbc:	4013      	ands	r3, r2
 8004bbe:	60bb      	str	r3, [r7, #8]
 8004bc0:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8004bc2:	183b      	adds	r3, r7, r0
 8004bc4:	2201      	movs	r2, #1
 8004bc6:	701a      	strb	r2, [r3, #0]
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004bc8:	4b4c      	ldr	r3, [pc, #304]	@ (8004cfc <HAL_RCCEx_PeriphCLKConfig+0x188>)
 8004bca:	681a      	ldr	r2, [r3, #0]
 8004bcc:	2380      	movs	r3, #128	@ 0x80
 8004bce:	005b      	lsls	r3, r3, #1
 8004bd0:	4013      	ands	r3, r2
 8004bd2:	d11a      	bne.n	8004c0a <HAL_RCCEx_PeriphCLKConfig+0x96>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8004bd4:	4b49      	ldr	r3, [pc, #292]	@ (8004cfc <HAL_RCCEx_PeriphCLKConfig+0x188>)
 8004bd6:	681a      	ldr	r2, [r3, #0]
 8004bd8:	4b48      	ldr	r3, [pc, #288]	@ (8004cfc <HAL_RCCEx_PeriphCLKConfig+0x188>)
 8004bda:	2180      	movs	r1, #128	@ 0x80
 8004bdc:	0049      	lsls	r1, r1, #1
 8004bde:	430a      	orrs	r2, r1
 8004be0:	601a      	str	r2, [r3, #0]
      
      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8004be2:	f7fe fbef 	bl	80033c4 <HAL_GetTick>
 8004be6:	0003      	movs	r3, r0
 8004be8:	613b      	str	r3, [r7, #16]
      
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004bea:	e008      	b.n	8004bfe <HAL_RCCEx_PeriphCLKConfig+0x8a>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8004bec:	f7fe fbea 	bl	80033c4 <HAL_GetTick>
 8004bf0:	0002      	movs	r2, r0
 8004bf2:	693b      	ldr	r3, [r7, #16]
 8004bf4:	1ad3      	subs	r3, r2, r3
 8004bf6:	2b64      	cmp	r3, #100	@ 0x64
 8004bf8:	d901      	bls.n	8004bfe <HAL_RCCEx_PeriphCLKConfig+0x8a>
        {
          return HAL_TIMEOUT;
 8004bfa:	2303      	movs	r3, #3
 8004bfc:	e077      	b.n	8004cee <HAL_RCCEx_PeriphCLKConfig+0x17a>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004bfe:	4b3f      	ldr	r3, [pc, #252]	@ (8004cfc <HAL_RCCEx_PeriphCLKConfig+0x188>)
 8004c00:	681a      	ldr	r2, [r3, #0]
 8004c02:	2380      	movs	r3, #128	@ 0x80
 8004c04:	005b      	lsls	r3, r3, #1
 8004c06:	4013      	ands	r3, r2
 8004c08:	d0f0      	beq.n	8004bec <HAL_RCCEx_PeriphCLKConfig+0x78>
        }
      }
    }
    
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */ 
    temp_reg = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8004c0a:	4b3b      	ldr	r3, [pc, #236]	@ (8004cf8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004c0c:	6a1a      	ldr	r2, [r3, #32]
 8004c0e:	23c0      	movs	r3, #192	@ 0xc0
 8004c10:	009b      	lsls	r3, r3, #2
 8004c12:	4013      	ands	r3, r2
 8004c14:	60fb      	str	r3, [r7, #12]
    if((temp_reg != 0x00000000U) && (temp_reg != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8004c16:	68fb      	ldr	r3, [r7, #12]
 8004c18:	2b00      	cmp	r3, #0
 8004c1a:	d034      	beq.n	8004c86 <HAL_RCCEx_PeriphCLKConfig+0x112>
 8004c1c:	687b      	ldr	r3, [r7, #4]
 8004c1e:	685a      	ldr	r2, [r3, #4]
 8004c20:	23c0      	movs	r3, #192	@ 0xc0
 8004c22:	009b      	lsls	r3, r3, #2
 8004c24:	4013      	ands	r3, r2
 8004c26:	68fa      	ldr	r2, [r7, #12]
 8004c28:	429a      	cmp	r2, r3
 8004c2a:	d02c      	beq.n	8004c86 <HAL_RCCEx_PeriphCLKConfig+0x112>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      temp_reg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8004c2c:	4b32      	ldr	r3, [pc, #200]	@ (8004cf8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004c2e:	6a1b      	ldr	r3, [r3, #32]
 8004c30:	4a33      	ldr	r2, [pc, #204]	@ (8004d00 <HAL_RCCEx_PeriphCLKConfig+0x18c>)
 8004c32:	4013      	ands	r3, r2
 8004c34:	60fb      	str	r3, [r7, #12]
      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 8004c36:	4b30      	ldr	r3, [pc, #192]	@ (8004cf8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004c38:	6a1a      	ldr	r2, [r3, #32]
 8004c3a:	4b2f      	ldr	r3, [pc, #188]	@ (8004cf8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004c3c:	2180      	movs	r1, #128	@ 0x80
 8004c3e:	0249      	lsls	r1, r1, #9
 8004c40:	430a      	orrs	r2, r1
 8004c42:	621a      	str	r2, [r3, #32]
      __HAL_RCC_BACKUPRESET_RELEASE();
 8004c44:	4b2c      	ldr	r3, [pc, #176]	@ (8004cf8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004c46:	6a1a      	ldr	r2, [r3, #32]
 8004c48:	4b2b      	ldr	r3, [pc, #172]	@ (8004cf8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004c4a:	492e      	ldr	r1, [pc, #184]	@ (8004d04 <HAL_RCCEx_PeriphCLKConfig+0x190>)
 8004c4c:	400a      	ands	r2, r1
 8004c4e:	621a      	str	r2, [r3, #32]
      /* Restore the Content of BDCR register */
      RCC->BDCR = temp_reg;
 8004c50:	4b29      	ldr	r3, [pc, #164]	@ (8004cf8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004c52:	68fa      	ldr	r2, [r7, #12]
 8004c54:	621a      	str	r2, [r3, #32]
      
      /* Wait for LSERDY if LSE was enabled */
      if (HAL_IS_BIT_SET(temp_reg, RCC_BDCR_LSEON))
 8004c56:	68fb      	ldr	r3, [r7, #12]
 8004c58:	2201      	movs	r2, #1
 8004c5a:	4013      	ands	r3, r2
 8004c5c:	d013      	beq.n	8004c86 <HAL_RCCEx_PeriphCLKConfig+0x112>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004c5e:	f7fe fbb1 	bl	80033c4 <HAL_GetTick>
 8004c62:	0003      	movs	r3, r0
 8004c64:	613b      	str	r3, [r7, #16]
        
        /* Wait till LSE is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004c66:	e009      	b.n	8004c7c <HAL_RCCEx_PeriphCLKConfig+0x108>
        {
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8004c68:	f7fe fbac 	bl	80033c4 <HAL_GetTick>
 8004c6c:	0002      	movs	r2, r0
 8004c6e:	693b      	ldr	r3, [r7, #16]
 8004c70:	1ad3      	subs	r3, r2, r3
 8004c72:	4a25      	ldr	r2, [pc, #148]	@ (8004d08 <HAL_RCCEx_PeriphCLKConfig+0x194>)
 8004c74:	4293      	cmp	r3, r2
 8004c76:	d901      	bls.n	8004c7c <HAL_RCCEx_PeriphCLKConfig+0x108>
          {
            return HAL_TIMEOUT;
 8004c78:	2303      	movs	r3, #3
 8004c7a:	e038      	b.n	8004cee <HAL_RCCEx_PeriphCLKConfig+0x17a>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004c7c:	4b1e      	ldr	r3, [pc, #120]	@ (8004cf8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004c7e:	6a1b      	ldr	r3, [r3, #32]
 8004c80:	2202      	movs	r2, #2
 8004c82:	4013      	ands	r3, r2
 8004c84:	d0f0      	beq.n	8004c68 <HAL_RCCEx_PeriphCLKConfig+0xf4>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8004c86:	4b1c      	ldr	r3, [pc, #112]	@ (8004cf8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004c88:	6a1b      	ldr	r3, [r3, #32]
 8004c8a:	4a1d      	ldr	r2, [pc, #116]	@ (8004d00 <HAL_RCCEx_PeriphCLKConfig+0x18c>)
 8004c8c:	4013      	ands	r3, r2
 8004c8e:	0019      	movs	r1, r3
 8004c90:	687b      	ldr	r3, [r7, #4]
 8004c92:	685a      	ldr	r2, [r3, #4]
 8004c94:	4b18      	ldr	r3, [pc, #96]	@ (8004cf8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004c96:	430a      	orrs	r2, r1
 8004c98:	621a      	str	r2, [r3, #32]

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 8004c9a:	2317      	movs	r3, #23
 8004c9c:	18fb      	adds	r3, r7, r3
 8004c9e:	781b      	ldrb	r3, [r3, #0]
 8004ca0:	2b01      	cmp	r3, #1
 8004ca2:	d105      	bne.n	8004cb0 <HAL_RCCEx_PeriphCLKConfig+0x13c>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8004ca4:	4b14      	ldr	r3, [pc, #80]	@ (8004cf8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004ca6:	69da      	ldr	r2, [r3, #28]
 8004ca8:	4b13      	ldr	r3, [pc, #76]	@ (8004cf8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004caa:	4918      	ldr	r1, [pc, #96]	@ (8004d0c <HAL_RCCEx_PeriphCLKConfig+0x198>)
 8004cac:	400a      	ands	r2, r1
 8004cae:	61da      	str	r2, [r3, #28]
    }
  }

  /*------------------------------- USART1 Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8004cb0:	687b      	ldr	r3, [r7, #4]
 8004cb2:	681b      	ldr	r3, [r3, #0]
 8004cb4:	2201      	movs	r2, #1
 8004cb6:	4013      	ands	r3, r2
 8004cb8:	d009      	beq.n	8004cce <HAL_RCCEx_PeriphCLKConfig+0x15a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));
    
    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8004cba:	4b0f      	ldr	r3, [pc, #60]	@ (8004cf8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004cbc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004cbe:	2203      	movs	r2, #3
 8004cc0:	4393      	bics	r3, r2
 8004cc2:	0019      	movs	r1, r3
 8004cc4:	687b      	ldr	r3, [r7, #4]
 8004cc6:	689a      	ldr	r2, [r3, #8]
 8004cc8:	4b0b      	ldr	r3, [pc, #44]	@ (8004cf8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004cca:	430a      	orrs	r2, r1
 8004ccc:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
  }
#endif /* STM32F091xC || STM32F098xx */  

  /*------------------------------ I2C1 Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8004cce:	687b      	ldr	r3, [r7, #4]
 8004cd0:	681b      	ldr	r3, [r3, #0]
 8004cd2:	2220      	movs	r2, #32
 8004cd4:	4013      	ands	r3, r2
 8004cd6:	d009      	beq.n	8004cec <HAL_RCCEx_PeriphCLKConfig+0x178>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));
    
    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8004cd8:	4b07      	ldr	r3, [pc, #28]	@ (8004cf8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004cda:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004cdc:	2210      	movs	r2, #16
 8004cde:	4393      	bics	r3, r2
 8004ce0:	0019      	movs	r1, r3
 8004ce2:	687b      	ldr	r3, [r7, #4]
 8004ce4:	68da      	ldr	r2, [r3, #12]
 8004ce6:	4b04      	ldr	r3, [pc, #16]	@ (8004cf8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004ce8:	430a      	orrs	r2, r1
 8004cea:	631a      	str	r2, [r3, #48]	@ 0x30
#endif /* STM32F042x6 || STM32F048xx ||                */
       /* STM32F051x8 || STM32F058xx ||                */
       /* STM32F071xB || STM32F072xB || STM32F078xx || */
       /* STM32F091xC || STM32F098xx */
  
  return HAL_OK;
 8004cec:	2300      	movs	r3, #0
}
 8004cee:	0018      	movs	r0, r3
 8004cf0:	46bd      	mov	sp, r7
 8004cf2:	b006      	add	sp, #24
 8004cf4:	bd80      	pop	{r7, pc}
 8004cf6:	46c0      	nop			@ (mov r8, r8)
 8004cf8:	40021000 	.word	0x40021000
 8004cfc:	40007000 	.word	0x40007000
 8004d00:	fffffcff 	.word	0xfffffcff
 8004d04:	fffeffff 	.word	0xfffeffff
 8004d08:	00001388 	.word	0x00001388
 8004d0c:	efffffff 	.word	0xefffffff

08004d10 <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8004d10:	b580      	push	{r7, lr}
 8004d12:	b082      	sub	sp, #8
 8004d14:	af00      	add	r7, sp, #0
 8004d16:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8004d18:	687b      	ldr	r3, [r7, #4]
 8004d1a:	2b00      	cmp	r3, #0
 8004d1c:	d101      	bne.n	8004d22 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8004d1e:	2301      	movs	r3, #1
 8004d20:	e044      	b.n	8004dac <HAL_UART_Init+0x9c>
  {
    /* Check the parameters */
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 8004d22:	687b      	ldr	r3, [r7, #4]
 8004d24:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8004d26:	2b00      	cmp	r3, #0
 8004d28:	d107      	bne.n	8004d3a <HAL_UART_Init+0x2a>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8004d2a:	687b      	ldr	r3, [r7, #4]
 8004d2c:	2278      	movs	r2, #120	@ 0x78
 8004d2e:	2100      	movs	r1, #0
 8004d30:	5499      	strb	r1, [r3, r2]

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8004d32:	687b      	ldr	r3, [r7, #4]
 8004d34:	0018      	movs	r0, r3
 8004d36:	f7fe f997 	bl	8003068 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8004d3a:	687b      	ldr	r3, [r7, #4]
 8004d3c:	2224      	movs	r2, #36	@ 0x24
 8004d3e:	67da      	str	r2, [r3, #124]	@ 0x7c

  __HAL_UART_DISABLE(huart);
 8004d40:	687b      	ldr	r3, [r7, #4]
 8004d42:	681b      	ldr	r3, [r3, #0]
 8004d44:	681a      	ldr	r2, [r3, #0]
 8004d46:	687b      	ldr	r3, [r7, #4]
 8004d48:	681b      	ldr	r3, [r3, #0]
 8004d4a:	2101      	movs	r1, #1
 8004d4c:	438a      	bics	r2, r1
 8004d4e:	601a      	str	r2, [r3, #0]

  /* Perform advanced settings configuration */
  /* For some items, configuration requires to be done prior TE and RE bits are set */
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8004d50:	687b      	ldr	r3, [r7, #4]
 8004d52:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004d54:	2b00      	cmp	r3, #0
 8004d56:	d003      	beq.n	8004d60 <HAL_UART_Init+0x50>
  {
    UART_AdvFeatureConfig(huart);
 8004d58:	687b      	ldr	r3, [r7, #4]
 8004d5a:	0018      	movs	r0, r3
 8004d5c:	f000 fa0c 	bl	8005178 <UART_AdvFeatureConfig>
  }

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 8004d60:	687b      	ldr	r3, [r7, #4]
 8004d62:	0018      	movs	r0, r3
 8004d64:	f000 f8c8 	bl	8004ef8 <UART_SetConfig>
 8004d68:	0003      	movs	r3, r0
 8004d6a:	2b01      	cmp	r3, #1
 8004d6c:	d101      	bne.n	8004d72 <HAL_UART_Init+0x62>
  {
    return HAL_ERROR;
 8004d6e:	2301      	movs	r3, #1
 8004d70:	e01c      	b.n	8004dac <HAL_UART_Init+0x9c>
  - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
  - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported)  bits in the USART_CR3 register.*/
#if defined (USART_CR2_LINEN)
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
#else
  CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 8004d72:	687b      	ldr	r3, [r7, #4]
 8004d74:	681b      	ldr	r3, [r3, #0]
 8004d76:	685a      	ldr	r2, [r3, #4]
 8004d78:	687b      	ldr	r3, [r7, #4]
 8004d7a:	681b      	ldr	r3, [r3, #0]
 8004d7c:	490d      	ldr	r1, [pc, #52]	@ (8004db4 <HAL_UART_Init+0xa4>)
 8004d7e:	400a      	ands	r2, r1
 8004d80:	605a      	str	r2, [r3, #4]
#endif /* USART_CR3_IREN */
#else
#if defined (USART_CR3_IREN)
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
#else
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 8004d82:	687b      	ldr	r3, [r7, #4]
 8004d84:	681b      	ldr	r3, [r3, #0]
 8004d86:	689a      	ldr	r2, [r3, #8]
 8004d88:	687b      	ldr	r3, [r7, #4]
 8004d8a:	681b      	ldr	r3, [r3, #0]
 8004d8c:	2108      	movs	r1, #8
 8004d8e:	438a      	bics	r2, r1
 8004d90:	609a      	str	r2, [r3, #8]
#endif /* USART_CR3_IREN*/
#endif /* USART_CR3_SCEN */

  __HAL_UART_ENABLE(huart);
 8004d92:	687b      	ldr	r3, [r7, #4]
 8004d94:	681b      	ldr	r3, [r3, #0]
 8004d96:	681a      	ldr	r2, [r3, #0]
 8004d98:	687b      	ldr	r3, [r7, #4]
 8004d9a:	681b      	ldr	r3, [r3, #0]
 8004d9c:	2101      	movs	r1, #1
 8004d9e:	430a      	orrs	r2, r1
 8004da0:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 8004da2:	687b      	ldr	r3, [r7, #4]
 8004da4:	0018      	movs	r0, r3
 8004da6:	f000 fa9b 	bl	80052e0 <UART_CheckIdleState>
 8004daa:	0003      	movs	r3, r0
}
 8004dac:	0018      	movs	r0, r3
 8004dae:	46bd      	mov	sp, r7
 8004db0:	b002      	add	sp, #8
 8004db2:	bd80      	pop	{r7, pc}
 8004db4:	fffff7ff 	.word	0xfffff7ff

08004db8 <HAL_UART_Transmit>:
  * @param Size    Amount of data elements (u8 or u16) to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8004db8:	b580      	push	{r7, lr}
 8004dba:	b08a      	sub	sp, #40	@ 0x28
 8004dbc:	af02      	add	r7, sp, #8
 8004dbe:	60f8      	str	r0, [r7, #12]
 8004dc0:	60b9      	str	r1, [r7, #8]
 8004dc2:	603b      	str	r3, [r7, #0]
 8004dc4:	1dbb      	adds	r3, r7, #6
 8004dc6:	801a      	strh	r2, [r3, #0]
  const uint8_t  *pdata8bits;
  const uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 8004dc8:	68fb      	ldr	r3, [r7, #12]
 8004dca:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8004dcc:	2b20      	cmp	r3, #32
 8004dce:	d000      	beq.n	8004dd2 <HAL_UART_Transmit+0x1a>
 8004dd0:	e08c      	b.n	8004eec <HAL_UART_Transmit+0x134>
  {
    if ((pData == NULL) || (Size == 0U))
 8004dd2:	68bb      	ldr	r3, [r7, #8]
 8004dd4:	2b00      	cmp	r3, #0
 8004dd6:	d003      	beq.n	8004de0 <HAL_UART_Transmit+0x28>
 8004dd8:	1dbb      	adds	r3, r7, #6
 8004dda:	881b      	ldrh	r3, [r3, #0]
 8004ddc:	2b00      	cmp	r3, #0
 8004dde:	d101      	bne.n	8004de4 <HAL_UART_Transmit+0x2c>
    {
      return  HAL_ERROR;
 8004de0:	2301      	movs	r3, #1
 8004de2:	e084      	b.n	8004eee <HAL_UART_Transmit+0x136>
    }

    /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
       should be aligned on a u16 frontier, as data to be filled into TDR will be
       handled through a u16 cast. */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8004de4:	68fb      	ldr	r3, [r7, #12]
 8004de6:	689a      	ldr	r2, [r3, #8]
 8004de8:	2380      	movs	r3, #128	@ 0x80
 8004dea:	015b      	lsls	r3, r3, #5
 8004dec:	429a      	cmp	r2, r3
 8004dee:	d109      	bne.n	8004e04 <HAL_UART_Transmit+0x4c>
 8004df0:	68fb      	ldr	r3, [r7, #12]
 8004df2:	691b      	ldr	r3, [r3, #16]
 8004df4:	2b00      	cmp	r3, #0
 8004df6:	d105      	bne.n	8004e04 <HAL_UART_Transmit+0x4c>
    {
      if ((((uint32_t)pData) & 1U) != 0U)
 8004df8:	68bb      	ldr	r3, [r7, #8]
 8004dfa:	2201      	movs	r2, #1
 8004dfc:	4013      	ands	r3, r2
 8004dfe:	d001      	beq.n	8004e04 <HAL_UART_Transmit+0x4c>
      {
        return  HAL_ERROR;
 8004e00:	2301      	movs	r3, #1
 8004e02:	e074      	b.n	8004eee <HAL_UART_Transmit+0x136>
      }
    }

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8004e04:	68fb      	ldr	r3, [r7, #12]
 8004e06:	2284      	movs	r2, #132	@ 0x84
 8004e08:	2100      	movs	r1, #0
 8004e0a:	5099      	str	r1, [r3, r2]
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8004e0c:	68fb      	ldr	r3, [r7, #12]
 8004e0e:	2221      	movs	r2, #33	@ 0x21
 8004e10:	67da      	str	r2, [r3, #124]	@ 0x7c

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 8004e12:	f7fe fad7 	bl	80033c4 <HAL_GetTick>
 8004e16:	0003      	movs	r3, r0
 8004e18:	617b      	str	r3, [r7, #20]

    huart->TxXferSize  = Size;
 8004e1a:	68fb      	ldr	r3, [r7, #12]
 8004e1c:	1dba      	adds	r2, r7, #6
 8004e1e:	2150      	movs	r1, #80	@ 0x50
 8004e20:	8812      	ldrh	r2, [r2, #0]
 8004e22:	525a      	strh	r2, [r3, r1]
    huart->TxXferCount = Size;
 8004e24:	68fb      	ldr	r3, [r7, #12]
 8004e26:	1dba      	adds	r2, r7, #6
 8004e28:	2152      	movs	r1, #82	@ 0x52
 8004e2a:	8812      	ldrh	r2, [r2, #0]
 8004e2c:	525a      	strh	r2, [r3, r1]

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8004e2e:	68fb      	ldr	r3, [r7, #12]
 8004e30:	689a      	ldr	r2, [r3, #8]
 8004e32:	2380      	movs	r3, #128	@ 0x80
 8004e34:	015b      	lsls	r3, r3, #5
 8004e36:	429a      	cmp	r2, r3
 8004e38:	d108      	bne.n	8004e4c <HAL_UART_Transmit+0x94>
 8004e3a:	68fb      	ldr	r3, [r7, #12]
 8004e3c:	691b      	ldr	r3, [r3, #16]
 8004e3e:	2b00      	cmp	r3, #0
 8004e40:	d104      	bne.n	8004e4c <HAL_UART_Transmit+0x94>
    {
      pdata8bits  = NULL;
 8004e42:	2300      	movs	r3, #0
 8004e44:	61fb      	str	r3, [r7, #28]
      pdata16bits = (const uint16_t *) pData;
 8004e46:	68bb      	ldr	r3, [r7, #8]
 8004e48:	61bb      	str	r3, [r7, #24]
 8004e4a:	e003      	b.n	8004e54 <HAL_UART_Transmit+0x9c>
    }
    else
    {
      pdata8bits  = pData;
 8004e4c:	68bb      	ldr	r3, [r7, #8]
 8004e4e:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 8004e50:	2300      	movs	r3, #0
 8004e52:	61bb      	str	r3, [r7, #24]
    }

    while (huart->TxXferCount > 0U)
 8004e54:	e02f      	b.n	8004eb6 <HAL_UART_Transmit+0xfe>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8004e56:	697a      	ldr	r2, [r7, #20]
 8004e58:	68f8      	ldr	r0, [r7, #12]
 8004e5a:	683b      	ldr	r3, [r7, #0]
 8004e5c:	9300      	str	r3, [sp, #0]
 8004e5e:	0013      	movs	r3, r2
 8004e60:	2200      	movs	r2, #0
 8004e62:	2180      	movs	r1, #128	@ 0x80
 8004e64:	f000 fae4 	bl	8005430 <UART_WaitOnFlagUntilTimeout>
 8004e68:	1e03      	subs	r3, r0, #0
 8004e6a:	d004      	beq.n	8004e76 <HAL_UART_Transmit+0xbe>
      {

        huart->gState = HAL_UART_STATE_READY;
 8004e6c:	68fb      	ldr	r3, [r7, #12]
 8004e6e:	2220      	movs	r2, #32
 8004e70:	67da      	str	r2, [r3, #124]	@ 0x7c

        return HAL_TIMEOUT;
 8004e72:	2303      	movs	r3, #3
 8004e74:	e03b      	b.n	8004eee <HAL_UART_Transmit+0x136>
      }
      if (pdata8bits == NULL)
 8004e76:	69fb      	ldr	r3, [r7, #28]
 8004e78:	2b00      	cmp	r3, #0
 8004e7a:	d10b      	bne.n	8004e94 <HAL_UART_Transmit+0xdc>
      {
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8004e7c:	69bb      	ldr	r3, [r7, #24]
 8004e7e:	881a      	ldrh	r2, [r3, #0]
 8004e80:	68fb      	ldr	r3, [r7, #12]
 8004e82:	681b      	ldr	r3, [r3, #0]
 8004e84:	05d2      	lsls	r2, r2, #23
 8004e86:	0dd2      	lsrs	r2, r2, #23
 8004e88:	b292      	uxth	r2, r2
 8004e8a:	851a      	strh	r2, [r3, #40]	@ 0x28
        pdata16bits++;
 8004e8c:	69bb      	ldr	r3, [r7, #24]
 8004e8e:	3302      	adds	r3, #2
 8004e90:	61bb      	str	r3, [r7, #24]
 8004e92:	e007      	b.n	8004ea4 <HAL_UART_Transmit+0xec>
      }
      else
      {
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8004e94:	69fb      	ldr	r3, [r7, #28]
 8004e96:	781a      	ldrb	r2, [r3, #0]
 8004e98:	68fb      	ldr	r3, [r7, #12]
 8004e9a:	681b      	ldr	r3, [r3, #0]
 8004e9c:	851a      	strh	r2, [r3, #40]	@ 0x28
        pdata8bits++;
 8004e9e:	69fb      	ldr	r3, [r7, #28]
 8004ea0:	3301      	adds	r3, #1
 8004ea2:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 8004ea4:	68fb      	ldr	r3, [r7, #12]
 8004ea6:	2252      	movs	r2, #82	@ 0x52
 8004ea8:	5a9b      	ldrh	r3, [r3, r2]
 8004eaa:	b29b      	uxth	r3, r3
 8004eac:	3b01      	subs	r3, #1
 8004eae:	b299      	uxth	r1, r3
 8004eb0:	68fb      	ldr	r3, [r7, #12]
 8004eb2:	2252      	movs	r2, #82	@ 0x52
 8004eb4:	5299      	strh	r1, [r3, r2]
    while (huart->TxXferCount > 0U)
 8004eb6:	68fb      	ldr	r3, [r7, #12]
 8004eb8:	2252      	movs	r2, #82	@ 0x52
 8004eba:	5a9b      	ldrh	r3, [r3, r2]
 8004ebc:	b29b      	uxth	r3, r3
 8004ebe:	2b00      	cmp	r3, #0
 8004ec0:	d1c9      	bne.n	8004e56 <HAL_UART_Transmit+0x9e>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8004ec2:	697a      	ldr	r2, [r7, #20]
 8004ec4:	68f8      	ldr	r0, [r7, #12]
 8004ec6:	683b      	ldr	r3, [r7, #0]
 8004ec8:	9300      	str	r3, [sp, #0]
 8004eca:	0013      	movs	r3, r2
 8004ecc:	2200      	movs	r2, #0
 8004ece:	2140      	movs	r1, #64	@ 0x40
 8004ed0:	f000 faae 	bl	8005430 <UART_WaitOnFlagUntilTimeout>
 8004ed4:	1e03      	subs	r3, r0, #0
 8004ed6:	d004      	beq.n	8004ee2 <HAL_UART_Transmit+0x12a>
    {
      huart->gState = HAL_UART_STATE_READY;
 8004ed8:	68fb      	ldr	r3, [r7, #12]
 8004eda:	2220      	movs	r2, #32
 8004edc:	67da      	str	r2, [r3, #124]	@ 0x7c

      return HAL_TIMEOUT;
 8004ede:	2303      	movs	r3, #3
 8004ee0:	e005      	b.n	8004eee <HAL_UART_Transmit+0x136>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 8004ee2:	68fb      	ldr	r3, [r7, #12]
 8004ee4:	2220      	movs	r2, #32
 8004ee6:	67da      	str	r2, [r3, #124]	@ 0x7c

    return HAL_OK;
 8004ee8:	2300      	movs	r3, #0
 8004eea:	e000      	b.n	8004eee <HAL_UART_Transmit+0x136>
  }
  else
  {
    return HAL_BUSY;
 8004eec:	2302      	movs	r3, #2
  }
}
 8004eee:	0018      	movs	r0, r3
 8004ef0:	46bd      	mov	sp, r7
 8004ef2:	b008      	add	sp, #32
 8004ef4:	bd80      	pop	{r7, pc}
	...

08004ef8 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 8004ef8:	b580      	push	{r7, lr}
 8004efa:	b088      	sub	sp, #32
 8004efc:	af00      	add	r7, sp, #0
 8004efe:	6078      	str	r0, [r7, #4]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
 8004f00:	231e      	movs	r3, #30
 8004f02:	18fb      	adds	r3, r7, r3
 8004f04:	2200      	movs	r2, #0
 8004f06:	701a      	strb	r2, [r3, #0]
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8004f08:	687b      	ldr	r3, [r7, #4]
 8004f0a:	689a      	ldr	r2, [r3, #8]
 8004f0c:	687b      	ldr	r3, [r7, #4]
 8004f0e:	691b      	ldr	r3, [r3, #16]
 8004f10:	431a      	orrs	r2, r3
 8004f12:	687b      	ldr	r3, [r7, #4]
 8004f14:	695b      	ldr	r3, [r3, #20]
 8004f16:	431a      	orrs	r2, r3
 8004f18:	687b      	ldr	r3, [r7, #4]
 8004f1a:	69db      	ldr	r3, [r3, #28]
 8004f1c:	4313      	orrs	r3, r2
 8004f1e:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8004f20:	687b      	ldr	r3, [r7, #4]
 8004f22:	681b      	ldr	r3, [r3, #0]
 8004f24:	681b      	ldr	r3, [r3, #0]
 8004f26:	4a8d      	ldr	r2, [pc, #564]	@ (800515c <UART_SetConfig+0x264>)
 8004f28:	4013      	ands	r3, r2
 8004f2a:	0019      	movs	r1, r3
 8004f2c:	687b      	ldr	r3, [r7, #4]
 8004f2e:	681b      	ldr	r3, [r3, #0]
 8004f30:	697a      	ldr	r2, [r7, #20]
 8004f32:	430a      	orrs	r2, r1
 8004f34:	601a      	str	r2, [r3, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8004f36:	687b      	ldr	r3, [r7, #4]
 8004f38:	681b      	ldr	r3, [r3, #0]
 8004f3a:	685b      	ldr	r3, [r3, #4]
 8004f3c:	4a88      	ldr	r2, [pc, #544]	@ (8005160 <UART_SetConfig+0x268>)
 8004f3e:	4013      	ands	r3, r2
 8004f40:	0019      	movs	r1, r3
 8004f42:	687b      	ldr	r3, [r7, #4]
 8004f44:	68da      	ldr	r2, [r3, #12]
 8004f46:	687b      	ldr	r3, [r7, #4]
 8004f48:	681b      	ldr	r3, [r3, #0]
 8004f4a:	430a      	orrs	r2, r1
 8004f4c:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 8004f4e:	687b      	ldr	r3, [r7, #4]
 8004f50:	699b      	ldr	r3, [r3, #24]
 8004f52:	617b      	str	r3, [r7, #20]

  tmpreg |= huart->Init.OneBitSampling;
 8004f54:	687b      	ldr	r3, [r7, #4]
 8004f56:	6a1b      	ldr	r3, [r3, #32]
 8004f58:	697a      	ldr	r2, [r7, #20]
 8004f5a:	4313      	orrs	r3, r2
 8004f5c:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8004f5e:	687b      	ldr	r3, [r7, #4]
 8004f60:	681b      	ldr	r3, [r3, #0]
 8004f62:	689b      	ldr	r3, [r3, #8]
 8004f64:	4a7f      	ldr	r2, [pc, #508]	@ (8005164 <UART_SetConfig+0x26c>)
 8004f66:	4013      	ands	r3, r2
 8004f68:	0019      	movs	r1, r3
 8004f6a:	687b      	ldr	r3, [r7, #4]
 8004f6c:	681b      	ldr	r3, [r3, #0]
 8004f6e:	697a      	ldr	r2, [r7, #20]
 8004f70:	430a      	orrs	r2, r1
 8004f72:	609a      	str	r2, [r3, #8]


  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 8004f74:	687b      	ldr	r3, [r7, #4]
 8004f76:	681b      	ldr	r3, [r3, #0]
 8004f78:	4a7b      	ldr	r2, [pc, #492]	@ (8005168 <UART_SetConfig+0x270>)
 8004f7a:	4293      	cmp	r3, r2
 8004f7c:	d127      	bne.n	8004fce <UART_SetConfig+0xd6>
 8004f7e:	4b7b      	ldr	r3, [pc, #492]	@ (800516c <UART_SetConfig+0x274>)
 8004f80:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004f82:	2203      	movs	r2, #3
 8004f84:	4013      	ands	r3, r2
 8004f86:	2b03      	cmp	r3, #3
 8004f88:	d00d      	beq.n	8004fa6 <UART_SetConfig+0xae>
 8004f8a:	d81b      	bhi.n	8004fc4 <UART_SetConfig+0xcc>
 8004f8c:	2b02      	cmp	r3, #2
 8004f8e:	d014      	beq.n	8004fba <UART_SetConfig+0xc2>
 8004f90:	d818      	bhi.n	8004fc4 <UART_SetConfig+0xcc>
 8004f92:	2b00      	cmp	r3, #0
 8004f94:	d002      	beq.n	8004f9c <UART_SetConfig+0xa4>
 8004f96:	2b01      	cmp	r3, #1
 8004f98:	d00a      	beq.n	8004fb0 <UART_SetConfig+0xb8>
 8004f9a:	e013      	b.n	8004fc4 <UART_SetConfig+0xcc>
 8004f9c:	231f      	movs	r3, #31
 8004f9e:	18fb      	adds	r3, r7, r3
 8004fa0:	2200      	movs	r2, #0
 8004fa2:	701a      	strb	r2, [r3, #0]
 8004fa4:	e021      	b.n	8004fea <UART_SetConfig+0xf2>
 8004fa6:	231f      	movs	r3, #31
 8004fa8:	18fb      	adds	r3, r7, r3
 8004faa:	2202      	movs	r2, #2
 8004fac:	701a      	strb	r2, [r3, #0]
 8004fae:	e01c      	b.n	8004fea <UART_SetConfig+0xf2>
 8004fb0:	231f      	movs	r3, #31
 8004fb2:	18fb      	adds	r3, r7, r3
 8004fb4:	2204      	movs	r2, #4
 8004fb6:	701a      	strb	r2, [r3, #0]
 8004fb8:	e017      	b.n	8004fea <UART_SetConfig+0xf2>
 8004fba:	231f      	movs	r3, #31
 8004fbc:	18fb      	adds	r3, r7, r3
 8004fbe:	2208      	movs	r2, #8
 8004fc0:	701a      	strb	r2, [r3, #0]
 8004fc2:	e012      	b.n	8004fea <UART_SetConfig+0xf2>
 8004fc4:	231f      	movs	r3, #31
 8004fc6:	18fb      	adds	r3, r7, r3
 8004fc8:	2210      	movs	r2, #16
 8004fca:	701a      	strb	r2, [r3, #0]
 8004fcc:	e00d      	b.n	8004fea <UART_SetConfig+0xf2>
 8004fce:	687b      	ldr	r3, [r7, #4]
 8004fd0:	681b      	ldr	r3, [r3, #0]
 8004fd2:	4a67      	ldr	r2, [pc, #412]	@ (8005170 <UART_SetConfig+0x278>)
 8004fd4:	4293      	cmp	r3, r2
 8004fd6:	d104      	bne.n	8004fe2 <UART_SetConfig+0xea>
 8004fd8:	231f      	movs	r3, #31
 8004fda:	18fb      	adds	r3, r7, r3
 8004fdc:	2200      	movs	r2, #0
 8004fde:	701a      	strb	r2, [r3, #0]
 8004fe0:	e003      	b.n	8004fea <UART_SetConfig+0xf2>
 8004fe2:	231f      	movs	r3, #31
 8004fe4:	18fb      	adds	r3, r7, r3
 8004fe6:	2210      	movs	r2, #16
 8004fe8:	701a      	strb	r2, [r3, #0]

  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8004fea:	687b      	ldr	r3, [r7, #4]
 8004fec:	69da      	ldr	r2, [r3, #28]
 8004fee:	2380      	movs	r3, #128	@ 0x80
 8004ff0:	021b      	lsls	r3, r3, #8
 8004ff2:	429a      	cmp	r2, r3
 8004ff4:	d15c      	bne.n	80050b0 <UART_SetConfig+0x1b8>
  {
    switch (clocksource)
 8004ff6:	231f      	movs	r3, #31
 8004ff8:	18fb      	adds	r3, r7, r3
 8004ffa:	781b      	ldrb	r3, [r3, #0]
 8004ffc:	2b08      	cmp	r3, #8
 8004ffe:	d015      	beq.n	800502c <UART_SetConfig+0x134>
 8005000:	dc18      	bgt.n	8005034 <UART_SetConfig+0x13c>
 8005002:	2b04      	cmp	r3, #4
 8005004:	d00d      	beq.n	8005022 <UART_SetConfig+0x12a>
 8005006:	dc15      	bgt.n	8005034 <UART_SetConfig+0x13c>
 8005008:	2b00      	cmp	r3, #0
 800500a:	d002      	beq.n	8005012 <UART_SetConfig+0x11a>
 800500c:	2b02      	cmp	r3, #2
 800500e:	d005      	beq.n	800501c <UART_SetConfig+0x124>
 8005010:	e010      	b.n	8005034 <UART_SetConfig+0x13c>
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8005012:	f7ff fd99 	bl	8004b48 <HAL_RCC_GetPCLK1Freq>
 8005016:	0003      	movs	r3, r0
 8005018:	61bb      	str	r3, [r7, #24]
        break;
 800501a:	e012      	b.n	8005042 <UART_SetConfig+0x14a>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 800501c:	4b55      	ldr	r3, [pc, #340]	@ (8005174 <UART_SetConfig+0x27c>)
 800501e:	61bb      	str	r3, [r7, #24]
        break;
 8005020:	e00f      	b.n	8005042 <UART_SetConfig+0x14a>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 8005022:	f7ff fd31 	bl	8004a88 <HAL_RCC_GetSysClockFreq>
 8005026:	0003      	movs	r3, r0
 8005028:	61bb      	str	r3, [r7, #24]
        break;
 800502a:	e00a      	b.n	8005042 <UART_SetConfig+0x14a>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 800502c:	2380      	movs	r3, #128	@ 0x80
 800502e:	021b      	lsls	r3, r3, #8
 8005030:	61bb      	str	r3, [r7, #24]
        break;
 8005032:	e006      	b.n	8005042 <UART_SetConfig+0x14a>
      default:
        pclk = 0U;
 8005034:	2300      	movs	r3, #0
 8005036:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 8005038:	231e      	movs	r3, #30
 800503a:	18fb      	adds	r3, r7, r3
 800503c:	2201      	movs	r2, #1
 800503e:	701a      	strb	r2, [r3, #0]
        break;
 8005040:	46c0      	nop			@ (mov r8, r8)
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
 8005042:	69bb      	ldr	r3, [r7, #24]
 8005044:	2b00      	cmp	r3, #0
 8005046:	d100      	bne.n	800504a <UART_SetConfig+0x152>
 8005048:	e07a      	b.n	8005140 <UART_SetConfig+0x248>
    {
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 800504a:	69bb      	ldr	r3, [r7, #24]
 800504c:	005a      	lsls	r2, r3, #1
 800504e:	687b      	ldr	r3, [r7, #4]
 8005050:	685b      	ldr	r3, [r3, #4]
 8005052:	085b      	lsrs	r3, r3, #1
 8005054:	18d2      	adds	r2, r2, r3
 8005056:	687b      	ldr	r3, [r7, #4]
 8005058:	685b      	ldr	r3, [r3, #4]
 800505a:	0019      	movs	r1, r3
 800505c:	0010      	movs	r0, r2
 800505e:	f7fb f86f 	bl	8000140 <__udivsi3>
 8005062:	0003      	movs	r3, r0
 8005064:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8005066:	693b      	ldr	r3, [r7, #16]
 8005068:	2b0f      	cmp	r3, #15
 800506a:	d91c      	bls.n	80050a6 <UART_SetConfig+0x1ae>
 800506c:	693a      	ldr	r2, [r7, #16]
 800506e:	2380      	movs	r3, #128	@ 0x80
 8005070:	025b      	lsls	r3, r3, #9
 8005072:	429a      	cmp	r2, r3
 8005074:	d217      	bcs.n	80050a6 <UART_SetConfig+0x1ae>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8005076:	693b      	ldr	r3, [r7, #16]
 8005078:	b29a      	uxth	r2, r3
 800507a:	200e      	movs	r0, #14
 800507c:	183b      	adds	r3, r7, r0
 800507e:	210f      	movs	r1, #15
 8005080:	438a      	bics	r2, r1
 8005082:	801a      	strh	r2, [r3, #0]
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8005084:	693b      	ldr	r3, [r7, #16]
 8005086:	085b      	lsrs	r3, r3, #1
 8005088:	b29b      	uxth	r3, r3
 800508a:	2207      	movs	r2, #7
 800508c:	4013      	ands	r3, r2
 800508e:	b299      	uxth	r1, r3
 8005090:	183b      	adds	r3, r7, r0
 8005092:	183a      	adds	r2, r7, r0
 8005094:	8812      	ldrh	r2, [r2, #0]
 8005096:	430a      	orrs	r2, r1
 8005098:	801a      	strh	r2, [r3, #0]
        huart->Instance->BRR = brrtemp;
 800509a:	687b      	ldr	r3, [r7, #4]
 800509c:	681b      	ldr	r3, [r3, #0]
 800509e:	183a      	adds	r2, r7, r0
 80050a0:	8812      	ldrh	r2, [r2, #0]
 80050a2:	60da      	str	r2, [r3, #12]
 80050a4:	e04c      	b.n	8005140 <UART_SetConfig+0x248>
      }
      else
      {
        ret = HAL_ERROR;
 80050a6:	231e      	movs	r3, #30
 80050a8:	18fb      	adds	r3, r7, r3
 80050aa:	2201      	movs	r2, #1
 80050ac:	701a      	strb	r2, [r3, #0]
 80050ae:	e047      	b.n	8005140 <UART_SetConfig+0x248>
      }
    }
  }
  else
  {
    switch (clocksource)
 80050b0:	231f      	movs	r3, #31
 80050b2:	18fb      	adds	r3, r7, r3
 80050b4:	781b      	ldrb	r3, [r3, #0]
 80050b6:	2b08      	cmp	r3, #8
 80050b8:	d015      	beq.n	80050e6 <UART_SetConfig+0x1ee>
 80050ba:	dc18      	bgt.n	80050ee <UART_SetConfig+0x1f6>
 80050bc:	2b04      	cmp	r3, #4
 80050be:	d00d      	beq.n	80050dc <UART_SetConfig+0x1e4>
 80050c0:	dc15      	bgt.n	80050ee <UART_SetConfig+0x1f6>
 80050c2:	2b00      	cmp	r3, #0
 80050c4:	d002      	beq.n	80050cc <UART_SetConfig+0x1d4>
 80050c6:	2b02      	cmp	r3, #2
 80050c8:	d005      	beq.n	80050d6 <UART_SetConfig+0x1de>
 80050ca:	e010      	b.n	80050ee <UART_SetConfig+0x1f6>
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 80050cc:	f7ff fd3c 	bl	8004b48 <HAL_RCC_GetPCLK1Freq>
 80050d0:	0003      	movs	r3, r0
 80050d2:	61bb      	str	r3, [r7, #24]
        break;
 80050d4:	e012      	b.n	80050fc <UART_SetConfig+0x204>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 80050d6:	4b27      	ldr	r3, [pc, #156]	@ (8005174 <UART_SetConfig+0x27c>)
 80050d8:	61bb      	str	r3, [r7, #24]
        break;
 80050da:	e00f      	b.n	80050fc <UART_SetConfig+0x204>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 80050dc:	f7ff fcd4 	bl	8004a88 <HAL_RCC_GetSysClockFreq>
 80050e0:	0003      	movs	r3, r0
 80050e2:	61bb      	str	r3, [r7, #24]
        break;
 80050e4:	e00a      	b.n	80050fc <UART_SetConfig+0x204>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 80050e6:	2380      	movs	r3, #128	@ 0x80
 80050e8:	021b      	lsls	r3, r3, #8
 80050ea:	61bb      	str	r3, [r7, #24]
        break;
 80050ec:	e006      	b.n	80050fc <UART_SetConfig+0x204>
      default:
        pclk = 0U;
 80050ee:	2300      	movs	r3, #0
 80050f0:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 80050f2:	231e      	movs	r3, #30
 80050f4:	18fb      	adds	r3, r7, r3
 80050f6:	2201      	movs	r2, #1
 80050f8:	701a      	strb	r2, [r3, #0]
        break;
 80050fa:	46c0      	nop			@ (mov r8, r8)
    }

    if (pclk != 0U)
 80050fc:	69bb      	ldr	r3, [r7, #24]
 80050fe:	2b00      	cmp	r3, #0
 8005100:	d01e      	beq.n	8005140 <UART_SetConfig+0x248>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8005102:	687b      	ldr	r3, [r7, #4]
 8005104:	685b      	ldr	r3, [r3, #4]
 8005106:	085a      	lsrs	r2, r3, #1
 8005108:	69bb      	ldr	r3, [r7, #24]
 800510a:	18d2      	adds	r2, r2, r3
 800510c:	687b      	ldr	r3, [r7, #4]
 800510e:	685b      	ldr	r3, [r3, #4]
 8005110:	0019      	movs	r1, r3
 8005112:	0010      	movs	r0, r2
 8005114:	f7fb f814 	bl	8000140 <__udivsi3>
 8005118:	0003      	movs	r3, r0
 800511a:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 800511c:	693b      	ldr	r3, [r7, #16]
 800511e:	2b0f      	cmp	r3, #15
 8005120:	d90a      	bls.n	8005138 <UART_SetConfig+0x240>
 8005122:	693a      	ldr	r2, [r7, #16]
 8005124:	2380      	movs	r3, #128	@ 0x80
 8005126:	025b      	lsls	r3, r3, #9
 8005128:	429a      	cmp	r2, r3
 800512a:	d205      	bcs.n	8005138 <UART_SetConfig+0x240>
      {
        huart->Instance->BRR = (uint16_t)usartdiv;
 800512c:	693b      	ldr	r3, [r7, #16]
 800512e:	b29a      	uxth	r2, r3
 8005130:	687b      	ldr	r3, [r7, #4]
 8005132:	681b      	ldr	r3, [r3, #0]
 8005134:	60da      	str	r2, [r3, #12]
 8005136:	e003      	b.n	8005140 <UART_SetConfig+0x248>
      }
      else
      {
        ret = HAL_ERROR;
 8005138:	231e      	movs	r3, #30
 800513a:	18fb      	adds	r3, r7, r3
 800513c:	2201      	movs	r2, #1
 800513e:	701a      	strb	r2, [r3, #0]
    }
  }


  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 8005140:	687b      	ldr	r3, [r7, #4]
 8005142:	2200      	movs	r2, #0
 8005144:	669a      	str	r2, [r3, #104]	@ 0x68
  huart->TxISR = NULL;
 8005146:	687b      	ldr	r3, [r7, #4]
 8005148:	2200      	movs	r2, #0
 800514a:	66da      	str	r2, [r3, #108]	@ 0x6c

  return ret;
 800514c:	231e      	movs	r3, #30
 800514e:	18fb      	adds	r3, r7, r3
 8005150:	781b      	ldrb	r3, [r3, #0]
}
 8005152:	0018      	movs	r0, r3
 8005154:	46bd      	mov	sp, r7
 8005156:	b008      	add	sp, #32
 8005158:	bd80      	pop	{r7, pc}
 800515a:	46c0      	nop			@ (mov r8, r8)
 800515c:	ffff69f3 	.word	0xffff69f3
 8005160:	ffffcfff 	.word	0xffffcfff
 8005164:	fffff4ff 	.word	0xfffff4ff
 8005168:	40013800 	.word	0x40013800
 800516c:	40021000 	.word	0x40021000
 8005170:	40004400 	.word	0x40004400
 8005174:	007a1200 	.word	0x007a1200

08005178 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 8005178:	b580      	push	{r7, lr}
 800517a:	b082      	sub	sp, #8
 800517c:	af00      	add	r7, sp, #0
 800517e:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8005180:	687b      	ldr	r3, [r7, #4]
 8005182:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005184:	2208      	movs	r2, #8
 8005186:	4013      	ands	r3, r2
 8005188:	d00b      	beq.n	80051a2 <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 800518a:	687b      	ldr	r3, [r7, #4]
 800518c:	681b      	ldr	r3, [r3, #0]
 800518e:	685b      	ldr	r3, [r3, #4]
 8005190:	4a4a      	ldr	r2, [pc, #296]	@ (80052bc <UART_AdvFeatureConfig+0x144>)
 8005192:	4013      	ands	r3, r2
 8005194:	0019      	movs	r1, r3
 8005196:	687b      	ldr	r3, [r7, #4]
 8005198:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800519a:	687b      	ldr	r3, [r7, #4]
 800519c:	681b      	ldr	r3, [r3, #0]
 800519e:	430a      	orrs	r2, r1
 80051a0:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 80051a2:	687b      	ldr	r3, [r7, #4]
 80051a4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80051a6:	2201      	movs	r2, #1
 80051a8:	4013      	ands	r3, r2
 80051aa:	d00b      	beq.n	80051c4 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 80051ac:	687b      	ldr	r3, [r7, #4]
 80051ae:	681b      	ldr	r3, [r3, #0]
 80051b0:	685b      	ldr	r3, [r3, #4]
 80051b2:	4a43      	ldr	r2, [pc, #268]	@ (80052c0 <UART_AdvFeatureConfig+0x148>)
 80051b4:	4013      	ands	r3, r2
 80051b6:	0019      	movs	r1, r3
 80051b8:	687b      	ldr	r3, [r7, #4]
 80051ba:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80051bc:	687b      	ldr	r3, [r7, #4]
 80051be:	681b      	ldr	r3, [r3, #0]
 80051c0:	430a      	orrs	r2, r1
 80051c2:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 80051c4:	687b      	ldr	r3, [r7, #4]
 80051c6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80051c8:	2202      	movs	r2, #2
 80051ca:	4013      	ands	r3, r2
 80051cc:	d00b      	beq.n	80051e6 <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 80051ce:	687b      	ldr	r3, [r7, #4]
 80051d0:	681b      	ldr	r3, [r3, #0]
 80051d2:	685b      	ldr	r3, [r3, #4]
 80051d4:	4a3b      	ldr	r2, [pc, #236]	@ (80052c4 <UART_AdvFeatureConfig+0x14c>)
 80051d6:	4013      	ands	r3, r2
 80051d8:	0019      	movs	r1, r3
 80051da:	687b      	ldr	r3, [r7, #4]
 80051dc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80051de:	687b      	ldr	r3, [r7, #4]
 80051e0:	681b      	ldr	r3, [r3, #0]
 80051e2:	430a      	orrs	r2, r1
 80051e4:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 80051e6:	687b      	ldr	r3, [r7, #4]
 80051e8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80051ea:	2204      	movs	r2, #4
 80051ec:	4013      	ands	r3, r2
 80051ee:	d00b      	beq.n	8005208 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 80051f0:	687b      	ldr	r3, [r7, #4]
 80051f2:	681b      	ldr	r3, [r3, #0]
 80051f4:	685b      	ldr	r3, [r3, #4]
 80051f6:	4a34      	ldr	r2, [pc, #208]	@ (80052c8 <UART_AdvFeatureConfig+0x150>)
 80051f8:	4013      	ands	r3, r2
 80051fa:	0019      	movs	r1, r3
 80051fc:	687b      	ldr	r3, [r7, #4]
 80051fe:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005200:	687b      	ldr	r3, [r7, #4]
 8005202:	681b      	ldr	r3, [r3, #0]
 8005204:	430a      	orrs	r2, r1
 8005206:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8005208:	687b      	ldr	r3, [r7, #4]
 800520a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800520c:	2210      	movs	r2, #16
 800520e:	4013      	ands	r3, r2
 8005210:	d00b      	beq.n	800522a <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8005212:	687b      	ldr	r3, [r7, #4]
 8005214:	681b      	ldr	r3, [r3, #0]
 8005216:	689b      	ldr	r3, [r3, #8]
 8005218:	4a2c      	ldr	r2, [pc, #176]	@ (80052cc <UART_AdvFeatureConfig+0x154>)
 800521a:	4013      	ands	r3, r2
 800521c:	0019      	movs	r1, r3
 800521e:	687b      	ldr	r3, [r7, #4]
 8005220:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8005222:	687b      	ldr	r3, [r7, #4]
 8005224:	681b      	ldr	r3, [r3, #0]
 8005226:	430a      	orrs	r2, r1
 8005228:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 800522a:	687b      	ldr	r3, [r7, #4]
 800522c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800522e:	2220      	movs	r2, #32
 8005230:	4013      	ands	r3, r2
 8005232:	d00b      	beq.n	800524c <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8005234:	687b      	ldr	r3, [r7, #4]
 8005236:	681b      	ldr	r3, [r3, #0]
 8005238:	689b      	ldr	r3, [r3, #8]
 800523a:	4a25      	ldr	r2, [pc, #148]	@ (80052d0 <UART_AdvFeatureConfig+0x158>)
 800523c:	4013      	ands	r3, r2
 800523e:	0019      	movs	r1, r3
 8005240:	687b      	ldr	r3, [r7, #4]
 8005242:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8005244:	687b      	ldr	r3, [r7, #4]
 8005246:	681b      	ldr	r3, [r3, #0]
 8005248:	430a      	orrs	r2, r1
 800524a:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 800524c:	687b      	ldr	r3, [r7, #4]
 800524e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005250:	2240      	movs	r2, #64	@ 0x40
 8005252:	4013      	ands	r3, r2
 8005254:	d01d      	beq.n	8005292 <UART_AdvFeatureConfig+0x11a>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8005256:	687b      	ldr	r3, [r7, #4]
 8005258:	681b      	ldr	r3, [r3, #0]
 800525a:	685b      	ldr	r3, [r3, #4]
 800525c:	4a1d      	ldr	r2, [pc, #116]	@ (80052d4 <UART_AdvFeatureConfig+0x15c>)
 800525e:	4013      	ands	r3, r2
 8005260:	0019      	movs	r1, r3
 8005262:	687b      	ldr	r3, [r7, #4]
 8005264:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005266:	687b      	ldr	r3, [r7, #4]
 8005268:	681b      	ldr	r3, [r3, #0]
 800526a:	430a      	orrs	r2, r1
 800526c:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 800526e:	687b      	ldr	r3, [r7, #4]
 8005270:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005272:	2380      	movs	r3, #128	@ 0x80
 8005274:	035b      	lsls	r3, r3, #13
 8005276:	429a      	cmp	r2, r3
 8005278:	d10b      	bne.n	8005292 <UART_AdvFeatureConfig+0x11a>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 800527a:	687b      	ldr	r3, [r7, #4]
 800527c:	681b      	ldr	r3, [r3, #0]
 800527e:	685b      	ldr	r3, [r3, #4]
 8005280:	4a15      	ldr	r2, [pc, #84]	@ (80052d8 <UART_AdvFeatureConfig+0x160>)
 8005282:	4013      	ands	r3, r2
 8005284:	0019      	movs	r1, r3
 8005286:	687b      	ldr	r3, [r7, #4]
 8005288:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800528a:	687b      	ldr	r3, [r7, #4]
 800528c:	681b      	ldr	r3, [r3, #0]
 800528e:	430a      	orrs	r2, r1
 8005290:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8005292:	687b      	ldr	r3, [r7, #4]
 8005294:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005296:	2280      	movs	r2, #128	@ 0x80
 8005298:	4013      	ands	r3, r2
 800529a:	d00b      	beq.n	80052b4 <UART_AdvFeatureConfig+0x13c>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 800529c:	687b      	ldr	r3, [r7, #4]
 800529e:	681b      	ldr	r3, [r3, #0]
 80052a0:	685b      	ldr	r3, [r3, #4]
 80052a2:	4a0e      	ldr	r2, [pc, #56]	@ (80052dc <UART_AdvFeatureConfig+0x164>)
 80052a4:	4013      	ands	r3, r2
 80052a6:	0019      	movs	r1, r3
 80052a8:	687b      	ldr	r3, [r7, #4]
 80052aa:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 80052ac:	687b      	ldr	r3, [r7, #4]
 80052ae:	681b      	ldr	r3, [r3, #0]
 80052b0:	430a      	orrs	r2, r1
 80052b2:	605a      	str	r2, [r3, #4]
  }
}
 80052b4:	46c0      	nop			@ (mov r8, r8)
 80052b6:	46bd      	mov	sp, r7
 80052b8:	b002      	add	sp, #8
 80052ba:	bd80      	pop	{r7, pc}
 80052bc:	ffff7fff 	.word	0xffff7fff
 80052c0:	fffdffff 	.word	0xfffdffff
 80052c4:	fffeffff 	.word	0xfffeffff
 80052c8:	fffbffff 	.word	0xfffbffff
 80052cc:	ffffefff 	.word	0xffffefff
 80052d0:	ffffdfff 	.word	0xffffdfff
 80052d4:	ffefffff 	.word	0xffefffff
 80052d8:	ff9fffff 	.word	0xff9fffff
 80052dc:	fff7ffff 	.word	0xfff7ffff

080052e0 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 80052e0:	b580      	push	{r7, lr}
 80052e2:	b092      	sub	sp, #72	@ 0x48
 80052e4:	af02      	add	r7, sp, #8
 80052e6:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80052e8:	687b      	ldr	r3, [r7, #4]
 80052ea:	2284      	movs	r2, #132	@ 0x84
 80052ec:	2100      	movs	r1, #0
 80052ee:	5099      	str	r1, [r3, r2]

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 80052f0:	f7fe f868 	bl	80033c4 <HAL_GetTick>
 80052f4:	0003      	movs	r3, r0
 80052f6:	63fb      	str	r3, [r7, #60]	@ 0x3c

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 80052f8:	687b      	ldr	r3, [r7, #4]
 80052fa:	681b      	ldr	r3, [r3, #0]
 80052fc:	681b      	ldr	r3, [r3, #0]
 80052fe:	2208      	movs	r2, #8
 8005300:	4013      	ands	r3, r2
 8005302:	2b08      	cmp	r3, #8
 8005304:	d12c      	bne.n	8005360 <UART_CheckIdleState+0x80>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8005306:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8005308:	2280      	movs	r2, #128	@ 0x80
 800530a:	0391      	lsls	r1, r2, #14
 800530c:	6878      	ldr	r0, [r7, #4]
 800530e:	4a46      	ldr	r2, [pc, #280]	@ (8005428 <UART_CheckIdleState+0x148>)
 8005310:	9200      	str	r2, [sp, #0]
 8005312:	2200      	movs	r2, #0
 8005314:	f000 f88c 	bl	8005430 <UART_WaitOnFlagUntilTimeout>
 8005318:	1e03      	subs	r3, r0, #0
 800531a:	d021      	beq.n	8005360 <UART_CheckIdleState+0x80>
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800531c:	f3ef 8310 	mrs	r3, PRIMASK
 8005320:	627b      	str	r3, [r7, #36]	@ 0x24
  return(result);
 8005322:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
    {
      /* Disable TXE interrupt for the interrupt process */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE));
 8005324:	63bb      	str	r3, [r7, #56]	@ 0x38
 8005326:	2301      	movs	r3, #1
 8005328:	62bb      	str	r3, [r7, #40]	@ 0x28
  \details Assigns the given value to the Priority Mask Register.
  \param [in]    priMask  Priority Mask
 */
__STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
{
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800532a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800532c:	f383 8810 	msr	PRIMASK, r3
}
 8005330:	46c0      	nop			@ (mov r8, r8)
 8005332:	687b      	ldr	r3, [r7, #4]
 8005334:	681b      	ldr	r3, [r3, #0]
 8005336:	681a      	ldr	r2, [r3, #0]
 8005338:	687b      	ldr	r3, [r7, #4]
 800533a:	681b      	ldr	r3, [r3, #0]
 800533c:	2180      	movs	r1, #128	@ 0x80
 800533e:	438a      	bics	r2, r1
 8005340:	601a      	str	r2, [r3, #0]
 8005342:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8005344:	62fb      	str	r3, [r7, #44]	@ 0x2c
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8005346:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005348:	f383 8810 	msr	PRIMASK, r3
}
 800534c:	46c0      	nop			@ (mov r8, r8)

      huart->gState = HAL_UART_STATE_READY;
 800534e:	687b      	ldr	r3, [r7, #4]
 8005350:	2220      	movs	r2, #32
 8005352:	67da      	str	r2, [r3, #124]	@ 0x7c

      __HAL_UNLOCK(huart);
 8005354:	687b      	ldr	r3, [r7, #4]
 8005356:	2278      	movs	r2, #120	@ 0x78
 8005358:	2100      	movs	r1, #0
 800535a:	5499      	strb	r1, [r3, r2]

      /* Timeout occurred */
      return HAL_TIMEOUT;
 800535c:	2303      	movs	r3, #3
 800535e:	e05f      	b.n	8005420 <UART_CheckIdleState+0x140>
    }
  }

  /* Check if the Receiver is enabled */
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 8005360:	687b      	ldr	r3, [r7, #4]
 8005362:	681b      	ldr	r3, [r3, #0]
 8005364:	681b      	ldr	r3, [r3, #0]
 8005366:	2204      	movs	r2, #4
 8005368:	4013      	ands	r3, r2
 800536a:	2b04      	cmp	r3, #4
 800536c:	d146      	bne.n	80053fc <UART_CheckIdleState+0x11c>
  {
    /* Wait until REACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 800536e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8005370:	2280      	movs	r2, #128	@ 0x80
 8005372:	03d1      	lsls	r1, r2, #15
 8005374:	6878      	ldr	r0, [r7, #4]
 8005376:	4a2c      	ldr	r2, [pc, #176]	@ (8005428 <UART_CheckIdleState+0x148>)
 8005378:	9200      	str	r2, [sp, #0]
 800537a:	2200      	movs	r2, #0
 800537c:	f000 f858 	bl	8005430 <UART_WaitOnFlagUntilTimeout>
 8005380:	1e03      	subs	r3, r0, #0
 8005382:	d03b      	beq.n	80053fc <UART_CheckIdleState+0x11c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8005384:	f3ef 8310 	mrs	r3, PRIMASK
 8005388:	60fb      	str	r3, [r7, #12]
  return(result);
 800538a:	68fb      	ldr	r3, [r7, #12]
    {
      /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error)
      interrupts for the interrupt process */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 800538c:	637b      	str	r3, [r7, #52]	@ 0x34
 800538e:	2301      	movs	r3, #1
 8005390:	613b      	str	r3, [r7, #16]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8005392:	693b      	ldr	r3, [r7, #16]
 8005394:	f383 8810 	msr	PRIMASK, r3
}
 8005398:	46c0      	nop			@ (mov r8, r8)
 800539a:	687b      	ldr	r3, [r7, #4]
 800539c:	681b      	ldr	r3, [r3, #0]
 800539e:	681a      	ldr	r2, [r3, #0]
 80053a0:	687b      	ldr	r3, [r7, #4]
 80053a2:	681b      	ldr	r3, [r3, #0]
 80053a4:	4921      	ldr	r1, [pc, #132]	@ (800542c <UART_CheckIdleState+0x14c>)
 80053a6:	400a      	ands	r2, r1
 80053a8:	601a      	str	r2, [r3, #0]
 80053aa:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80053ac:	617b      	str	r3, [r7, #20]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80053ae:	697b      	ldr	r3, [r7, #20]
 80053b0:	f383 8810 	msr	PRIMASK, r3
}
 80053b4:	46c0      	nop			@ (mov r8, r8)
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80053b6:	f3ef 8310 	mrs	r3, PRIMASK
 80053ba:	61bb      	str	r3, [r7, #24]
  return(result);
 80053bc:	69bb      	ldr	r3, [r7, #24]
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80053be:	633b      	str	r3, [r7, #48]	@ 0x30
 80053c0:	2301      	movs	r3, #1
 80053c2:	61fb      	str	r3, [r7, #28]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80053c4:	69fb      	ldr	r3, [r7, #28]
 80053c6:	f383 8810 	msr	PRIMASK, r3
}
 80053ca:	46c0      	nop			@ (mov r8, r8)
 80053cc:	687b      	ldr	r3, [r7, #4]
 80053ce:	681b      	ldr	r3, [r3, #0]
 80053d0:	689a      	ldr	r2, [r3, #8]
 80053d2:	687b      	ldr	r3, [r7, #4]
 80053d4:	681b      	ldr	r3, [r3, #0]
 80053d6:	2101      	movs	r1, #1
 80053d8:	438a      	bics	r2, r1
 80053da:	609a      	str	r2, [r3, #8]
 80053dc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80053de:	623b      	str	r3, [r7, #32]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80053e0:	6a3b      	ldr	r3, [r7, #32]
 80053e2:	f383 8810 	msr	PRIMASK, r3
}
 80053e6:	46c0      	nop			@ (mov r8, r8)

      huart->RxState = HAL_UART_STATE_READY;
 80053e8:	687b      	ldr	r3, [r7, #4]
 80053ea:	2280      	movs	r2, #128	@ 0x80
 80053ec:	2120      	movs	r1, #32
 80053ee:	5099      	str	r1, [r3, r2]

      __HAL_UNLOCK(huart);
 80053f0:	687b      	ldr	r3, [r7, #4]
 80053f2:	2278      	movs	r2, #120	@ 0x78
 80053f4:	2100      	movs	r1, #0
 80053f6:	5499      	strb	r1, [r3, r2]

      /* Timeout occurred */
      return HAL_TIMEOUT;
 80053f8:	2303      	movs	r3, #3
 80053fa:	e011      	b.n	8005420 <UART_CheckIdleState+0x140>
    }
  }

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 80053fc:	687b      	ldr	r3, [r7, #4]
 80053fe:	2220      	movs	r2, #32
 8005400:	67da      	str	r2, [r3, #124]	@ 0x7c
  huart->RxState = HAL_UART_STATE_READY;
 8005402:	687b      	ldr	r3, [r7, #4]
 8005404:	2280      	movs	r2, #128	@ 0x80
 8005406:	2120      	movs	r1, #32
 8005408:	5099      	str	r1, [r3, r2]
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800540a:	687b      	ldr	r3, [r7, #4]
 800540c:	2200      	movs	r2, #0
 800540e:	661a      	str	r2, [r3, #96]	@ 0x60
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8005410:	687b      	ldr	r3, [r7, #4]
 8005412:	2200      	movs	r2, #0
 8005414:	665a      	str	r2, [r3, #100]	@ 0x64

  __HAL_UNLOCK(huart);
 8005416:	687b      	ldr	r3, [r7, #4]
 8005418:	2278      	movs	r2, #120	@ 0x78
 800541a:	2100      	movs	r1, #0
 800541c:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 800541e:	2300      	movs	r3, #0
}
 8005420:	0018      	movs	r0, r3
 8005422:	46bd      	mov	sp, r7
 8005424:	b010      	add	sp, #64	@ 0x40
 8005426:	bd80      	pop	{r7, pc}
 8005428:	01ffffff 	.word	0x01ffffff
 800542c:	fffffedf 	.word	0xfffffedf

08005430 <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 8005430:	b580      	push	{r7, lr}
 8005432:	b084      	sub	sp, #16
 8005434:	af00      	add	r7, sp, #0
 8005436:	60f8      	str	r0, [r7, #12]
 8005438:	60b9      	str	r1, [r7, #8]
 800543a:	603b      	str	r3, [r7, #0]
 800543c:	1dfb      	adds	r3, r7, #7
 800543e:	701a      	strb	r2, [r3, #0]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8005440:	e051      	b.n	80054e6 <UART_WaitOnFlagUntilTimeout+0xb6>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8005442:	69bb      	ldr	r3, [r7, #24]
 8005444:	3301      	adds	r3, #1
 8005446:	d04e      	beq.n	80054e6 <UART_WaitOnFlagUntilTimeout+0xb6>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005448:	f7fd ffbc 	bl	80033c4 <HAL_GetTick>
 800544c:	0002      	movs	r2, r0
 800544e:	683b      	ldr	r3, [r7, #0]
 8005450:	1ad3      	subs	r3, r2, r3
 8005452:	69ba      	ldr	r2, [r7, #24]
 8005454:	429a      	cmp	r2, r3
 8005456:	d302      	bcc.n	800545e <UART_WaitOnFlagUntilTimeout+0x2e>
 8005458:	69bb      	ldr	r3, [r7, #24]
 800545a:	2b00      	cmp	r3, #0
 800545c:	d101      	bne.n	8005462 <UART_WaitOnFlagUntilTimeout+0x32>
      {

        return HAL_TIMEOUT;
 800545e:	2303      	movs	r3, #3
 8005460:	e051      	b.n	8005506 <UART_WaitOnFlagUntilTimeout+0xd6>
      }

      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 8005462:	68fb      	ldr	r3, [r7, #12]
 8005464:	681b      	ldr	r3, [r3, #0]
 8005466:	681b      	ldr	r3, [r3, #0]
 8005468:	2204      	movs	r2, #4
 800546a:	4013      	ands	r3, r2
 800546c:	d03b      	beq.n	80054e6 <UART_WaitOnFlagUntilTimeout+0xb6>
 800546e:	68bb      	ldr	r3, [r7, #8]
 8005470:	2b80      	cmp	r3, #128	@ 0x80
 8005472:	d038      	beq.n	80054e6 <UART_WaitOnFlagUntilTimeout+0xb6>
 8005474:	68bb      	ldr	r3, [r7, #8]
 8005476:	2b40      	cmp	r3, #64	@ 0x40
 8005478:	d035      	beq.n	80054e6 <UART_WaitOnFlagUntilTimeout+0xb6>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 800547a:	68fb      	ldr	r3, [r7, #12]
 800547c:	681b      	ldr	r3, [r3, #0]
 800547e:	69db      	ldr	r3, [r3, #28]
 8005480:	2208      	movs	r2, #8
 8005482:	4013      	ands	r3, r2
 8005484:	2b08      	cmp	r3, #8
 8005486:	d111      	bne.n	80054ac <UART_WaitOnFlagUntilTimeout+0x7c>
        {
          /* Clear Overrun Error flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 8005488:	68fb      	ldr	r3, [r7, #12]
 800548a:	681b      	ldr	r3, [r3, #0]
 800548c:	2208      	movs	r2, #8
 800548e:	621a      	str	r2, [r3, #32]

          /* Blocking error : transfer is aborted
          Set the UART state ready to be able to start again the process,
          Disable Rx Interrupts if ongoing */
          UART_EndRxTransfer(huart);
 8005490:	68fb      	ldr	r3, [r7, #12]
 8005492:	0018      	movs	r0, r3
 8005494:	f000 f83c 	bl	8005510 <UART_EndRxTransfer>

          huart->ErrorCode = HAL_UART_ERROR_ORE;
 8005498:	68fb      	ldr	r3, [r7, #12]
 800549a:	2284      	movs	r2, #132	@ 0x84
 800549c:	2108      	movs	r1, #8
 800549e:	5099      	str	r1, [r3, r2]

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 80054a0:	68fb      	ldr	r3, [r7, #12]
 80054a2:	2278      	movs	r2, #120	@ 0x78
 80054a4:	2100      	movs	r1, #0
 80054a6:	5499      	strb	r1, [r3, r2]

          return HAL_ERROR;
 80054a8:	2301      	movs	r3, #1
 80054aa:	e02c      	b.n	8005506 <UART_WaitOnFlagUntilTimeout+0xd6>
        }
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 80054ac:	68fb      	ldr	r3, [r7, #12]
 80054ae:	681b      	ldr	r3, [r3, #0]
 80054b0:	69da      	ldr	r2, [r3, #28]
 80054b2:	2380      	movs	r3, #128	@ 0x80
 80054b4:	011b      	lsls	r3, r3, #4
 80054b6:	401a      	ands	r2, r3
 80054b8:	2380      	movs	r3, #128	@ 0x80
 80054ba:	011b      	lsls	r3, r3, #4
 80054bc:	429a      	cmp	r2, r3
 80054be:	d112      	bne.n	80054e6 <UART_WaitOnFlagUntilTimeout+0xb6>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 80054c0:	68fb      	ldr	r3, [r7, #12]
 80054c2:	681b      	ldr	r3, [r3, #0]
 80054c4:	2280      	movs	r2, #128	@ 0x80
 80054c6:	0112      	lsls	r2, r2, #4
 80054c8:	621a      	str	r2, [r3, #32]

          /* Blocking error : transfer is aborted
          Set the UART state ready to be able to start again the process,
          Disable Rx Interrupts if ongoing */
          UART_EndRxTransfer(huart);
 80054ca:	68fb      	ldr	r3, [r7, #12]
 80054cc:	0018      	movs	r0, r3
 80054ce:	f000 f81f 	bl	8005510 <UART_EndRxTransfer>

          huart->ErrorCode = HAL_UART_ERROR_RTO;
 80054d2:	68fb      	ldr	r3, [r7, #12]
 80054d4:	2284      	movs	r2, #132	@ 0x84
 80054d6:	2120      	movs	r1, #32
 80054d8:	5099      	str	r1, [r3, r2]

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 80054da:	68fb      	ldr	r3, [r7, #12]
 80054dc:	2278      	movs	r2, #120	@ 0x78
 80054de:	2100      	movs	r1, #0
 80054e0:	5499      	strb	r1, [r3, r2]

          return HAL_TIMEOUT;
 80054e2:	2303      	movs	r3, #3
 80054e4:	e00f      	b.n	8005506 <UART_WaitOnFlagUntilTimeout+0xd6>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80054e6:	68fb      	ldr	r3, [r7, #12]
 80054e8:	681b      	ldr	r3, [r3, #0]
 80054ea:	69db      	ldr	r3, [r3, #28]
 80054ec:	68ba      	ldr	r2, [r7, #8]
 80054ee:	4013      	ands	r3, r2
 80054f0:	68ba      	ldr	r2, [r7, #8]
 80054f2:	1ad3      	subs	r3, r2, r3
 80054f4:	425a      	negs	r2, r3
 80054f6:	4153      	adcs	r3, r2
 80054f8:	b2db      	uxtb	r3, r3
 80054fa:	001a      	movs	r2, r3
 80054fc:	1dfb      	adds	r3, r7, #7
 80054fe:	781b      	ldrb	r3, [r3, #0]
 8005500:	429a      	cmp	r2, r3
 8005502:	d09e      	beq.n	8005442 <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 8005504:	2300      	movs	r3, #0
}
 8005506:	0018      	movs	r0, r3
 8005508:	46bd      	mov	sp, r7
 800550a:	b004      	add	sp, #16
 800550c:	bd80      	pop	{r7, pc}
	...

08005510 <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 8005510:	b580      	push	{r7, lr}
 8005512:	b08e      	sub	sp, #56	@ 0x38
 8005514:	af00      	add	r7, sp, #0
 8005516:	6078      	str	r0, [r7, #4]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8005518:	f3ef 8310 	mrs	r3, PRIMASK
 800551c:	617b      	str	r3, [r7, #20]
  return(result);
 800551e:	697b      	ldr	r3, [r7, #20]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8005520:	637b      	str	r3, [r7, #52]	@ 0x34
 8005522:	2301      	movs	r3, #1
 8005524:	61bb      	str	r3, [r7, #24]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8005526:	69bb      	ldr	r3, [r7, #24]
 8005528:	f383 8810 	msr	PRIMASK, r3
}
 800552c:	46c0      	nop			@ (mov r8, r8)
 800552e:	687b      	ldr	r3, [r7, #4]
 8005530:	681b      	ldr	r3, [r3, #0]
 8005532:	681a      	ldr	r2, [r3, #0]
 8005534:	687b      	ldr	r3, [r7, #4]
 8005536:	681b      	ldr	r3, [r3, #0]
 8005538:	4926      	ldr	r1, [pc, #152]	@ (80055d4 <UART_EndRxTransfer+0xc4>)
 800553a:	400a      	ands	r2, r1
 800553c:	601a      	str	r2, [r3, #0]
 800553e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8005540:	61fb      	str	r3, [r7, #28]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8005542:	69fb      	ldr	r3, [r7, #28]
 8005544:	f383 8810 	msr	PRIMASK, r3
}
 8005548:	46c0      	nop			@ (mov r8, r8)
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800554a:	f3ef 8310 	mrs	r3, PRIMASK
 800554e:	623b      	str	r3, [r7, #32]
  return(result);
 8005550:	6a3b      	ldr	r3, [r7, #32]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8005552:	633b      	str	r3, [r7, #48]	@ 0x30
 8005554:	2301      	movs	r3, #1
 8005556:	627b      	str	r3, [r7, #36]	@ 0x24
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8005558:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800555a:	f383 8810 	msr	PRIMASK, r3
}
 800555e:	46c0      	nop			@ (mov r8, r8)
 8005560:	687b      	ldr	r3, [r7, #4]
 8005562:	681b      	ldr	r3, [r3, #0]
 8005564:	689a      	ldr	r2, [r3, #8]
 8005566:	687b      	ldr	r3, [r7, #4]
 8005568:	681b      	ldr	r3, [r3, #0]
 800556a:	2101      	movs	r1, #1
 800556c:	438a      	bics	r2, r1
 800556e:	609a      	str	r2, [r3, #8]
 8005570:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8005572:	62bb      	str	r3, [r7, #40]	@ 0x28
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8005574:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005576:	f383 8810 	msr	PRIMASK, r3
}
 800557a:	46c0      	nop			@ (mov r8, r8)

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800557c:	687b      	ldr	r3, [r7, #4]
 800557e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005580:	2b01      	cmp	r3, #1
 8005582:	d118      	bne.n	80055b6 <UART_EndRxTransfer+0xa6>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8005584:	f3ef 8310 	mrs	r3, PRIMASK
 8005588:	60bb      	str	r3, [r7, #8]
  return(result);
 800558a:	68bb      	ldr	r3, [r7, #8]
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800558c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800558e:	2301      	movs	r3, #1
 8005590:	60fb      	str	r3, [r7, #12]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8005592:	68fb      	ldr	r3, [r7, #12]
 8005594:	f383 8810 	msr	PRIMASK, r3
}
 8005598:	46c0      	nop			@ (mov r8, r8)
 800559a:	687b      	ldr	r3, [r7, #4]
 800559c:	681b      	ldr	r3, [r3, #0]
 800559e:	681a      	ldr	r2, [r3, #0]
 80055a0:	687b      	ldr	r3, [r7, #4]
 80055a2:	681b      	ldr	r3, [r3, #0]
 80055a4:	2110      	movs	r1, #16
 80055a6:	438a      	bics	r2, r1
 80055a8:	601a      	str	r2, [r3, #0]
 80055aa:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80055ac:	613b      	str	r3, [r7, #16]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80055ae:	693b      	ldr	r3, [r7, #16]
 80055b0:	f383 8810 	msr	PRIMASK, r3
}
 80055b4:	46c0      	nop			@ (mov r8, r8)
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 80055b6:	687b      	ldr	r3, [r7, #4]
 80055b8:	2280      	movs	r2, #128	@ 0x80
 80055ba:	2120      	movs	r1, #32
 80055bc:	5099      	str	r1, [r3, r2]
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80055be:	687b      	ldr	r3, [r7, #4]
 80055c0:	2200      	movs	r2, #0
 80055c2:	661a      	str	r2, [r3, #96]	@ 0x60

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 80055c4:	687b      	ldr	r3, [r7, #4]
 80055c6:	2200      	movs	r2, #0
 80055c8:	669a      	str	r2, [r3, #104]	@ 0x68
}
 80055ca:	46c0      	nop			@ (mov r8, r8)
 80055cc:	46bd      	mov	sp, r7
 80055ce:	b00e      	add	sp, #56	@ 0x38
 80055d0:	bd80      	pop	{r7, pc}
 80055d2:	46c0      	nop			@ (mov r8, r8)
 80055d4:	fffffedf 	.word	0xfffffedf

080055d8 <__cvt>:
 80055d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80055da:	001f      	movs	r7, r3
 80055dc:	2300      	movs	r3, #0
 80055de:	0016      	movs	r6, r2
 80055e0:	b08b      	sub	sp, #44	@ 0x2c
 80055e2:	429f      	cmp	r7, r3
 80055e4:	da04      	bge.n	80055f0 <__cvt+0x18>
 80055e6:	2180      	movs	r1, #128	@ 0x80
 80055e8:	0609      	lsls	r1, r1, #24
 80055ea:	187b      	adds	r3, r7, r1
 80055ec:	001f      	movs	r7, r3
 80055ee:	232d      	movs	r3, #45	@ 0x2d
 80055f0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80055f2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80055f4:	7013      	strb	r3, [r2, #0]
 80055f6:	2320      	movs	r3, #32
 80055f8:	2203      	movs	r2, #3
 80055fa:	439d      	bics	r5, r3
 80055fc:	2d46      	cmp	r5, #70	@ 0x46
 80055fe:	d007      	beq.n	8005610 <__cvt+0x38>
 8005600:	002b      	movs	r3, r5
 8005602:	3b45      	subs	r3, #69	@ 0x45
 8005604:	4259      	negs	r1, r3
 8005606:	414b      	adcs	r3, r1
 8005608:	9910      	ldr	r1, [sp, #64]	@ 0x40
 800560a:	3a01      	subs	r2, #1
 800560c:	18cb      	adds	r3, r1, r3
 800560e:	9310      	str	r3, [sp, #64]	@ 0x40
 8005610:	ab09      	add	r3, sp, #36	@ 0x24
 8005612:	9304      	str	r3, [sp, #16]
 8005614:	ab08      	add	r3, sp, #32
 8005616:	9303      	str	r3, [sp, #12]
 8005618:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800561a:	9200      	str	r2, [sp, #0]
 800561c:	9302      	str	r3, [sp, #8]
 800561e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8005620:	0032      	movs	r2, r6
 8005622:	9301      	str	r3, [sp, #4]
 8005624:	003b      	movs	r3, r7
 8005626:	f001 f9c7 	bl	80069b8 <_dtoa_r>
 800562a:	0004      	movs	r4, r0
 800562c:	2d47      	cmp	r5, #71	@ 0x47
 800562e:	d11b      	bne.n	8005668 <__cvt+0x90>
 8005630:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8005632:	07db      	lsls	r3, r3, #31
 8005634:	d511      	bpl.n	800565a <__cvt+0x82>
 8005636:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8005638:	18c3      	adds	r3, r0, r3
 800563a:	9307      	str	r3, [sp, #28]
 800563c:	2200      	movs	r2, #0
 800563e:	2300      	movs	r3, #0
 8005640:	0030      	movs	r0, r6
 8005642:	0039      	movs	r1, r7
 8005644:	f7fa ff02 	bl	800044c <__aeabi_dcmpeq>
 8005648:	2800      	cmp	r0, #0
 800564a:	d001      	beq.n	8005650 <__cvt+0x78>
 800564c:	9b07      	ldr	r3, [sp, #28]
 800564e:	9309      	str	r3, [sp, #36]	@ 0x24
 8005650:	2230      	movs	r2, #48	@ 0x30
 8005652:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005654:	9907      	ldr	r1, [sp, #28]
 8005656:	428b      	cmp	r3, r1
 8005658:	d320      	bcc.n	800569c <__cvt+0xc4>
 800565a:	0020      	movs	r0, r4
 800565c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800565e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8005660:	1b1b      	subs	r3, r3, r4
 8005662:	6013      	str	r3, [r2, #0]
 8005664:	b00b      	add	sp, #44	@ 0x2c
 8005666:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005668:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800566a:	18c3      	adds	r3, r0, r3
 800566c:	9307      	str	r3, [sp, #28]
 800566e:	2d46      	cmp	r5, #70	@ 0x46
 8005670:	d1e4      	bne.n	800563c <__cvt+0x64>
 8005672:	7803      	ldrb	r3, [r0, #0]
 8005674:	2b30      	cmp	r3, #48	@ 0x30
 8005676:	d10c      	bne.n	8005692 <__cvt+0xba>
 8005678:	2200      	movs	r2, #0
 800567a:	2300      	movs	r3, #0
 800567c:	0030      	movs	r0, r6
 800567e:	0039      	movs	r1, r7
 8005680:	f7fa fee4 	bl	800044c <__aeabi_dcmpeq>
 8005684:	2800      	cmp	r0, #0
 8005686:	d104      	bne.n	8005692 <__cvt+0xba>
 8005688:	2301      	movs	r3, #1
 800568a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800568c:	1a9b      	subs	r3, r3, r2
 800568e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8005690:	6013      	str	r3, [r2, #0]
 8005692:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8005694:	9a07      	ldr	r2, [sp, #28]
 8005696:	681b      	ldr	r3, [r3, #0]
 8005698:	18d3      	adds	r3, r2, r3
 800569a:	e7ce      	b.n	800563a <__cvt+0x62>
 800569c:	1c59      	adds	r1, r3, #1
 800569e:	9109      	str	r1, [sp, #36]	@ 0x24
 80056a0:	701a      	strb	r2, [r3, #0]
 80056a2:	e7d6      	b.n	8005652 <__cvt+0x7a>

080056a4 <__exponent>:
 80056a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80056a6:	232b      	movs	r3, #43	@ 0x2b
 80056a8:	b085      	sub	sp, #20
 80056aa:	0005      	movs	r5, r0
 80056ac:	1e0c      	subs	r4, r1, #0
 80056ae:	7002      	strb	r2, [r0, #0]
 80056b0:	da01      	bge.n	80056b6 <__exponent+0x12>
 80056b2:	424c      	negs	r4, r1
 80056b4:	3302      	adds	r3, #2
 80056b6:	706b      	strb	r3, [r5, #1]
 80056b8:	2c09      	cmp	r4, #9
 80056ba:	dd2c      	ble.n	8005716 <__exponent+0x72>
 80056bc:	ab02      	add	r3, sp, #8
 80056be:	1dde      	adds	r6, r3, #7
 80056c0:	0020      	movs	r0, r4
 80056c2:	210a      	movs	r1, #10
 80056c4:	f7fa feac 	bl	8000420 <__aeabi_idivmod>
 80056c8:	0037      	movs	r7, r6
 80056ca:	3130      	adds	r1, #48	@ 0x30
 80056cc:	3e01      	subs	r6, #1
 80056ce:	0020      	movs	r0, r4
 80056d0:	7031      	strb	r1, [r6, #0]
 80056d2:	210a      	movs	r1, #10
 80056d4:	9401      	str	r4, [sp, #4]
 80056d6:	f7fa fdbd 	bl	8000254 <__divsi3>
 80056da:	9b01      	ldr	r3, [sp, #4]
 80056dc:	0004      	movs	r4, r0
 80056de:	2b63      	cmp	r3, #99	@ 0x63
 80056e0:	dcee      	bgt.n	80056c0 <__exponent+0x1c>
 80056e2:	1eba      	subs	r2, r7, #2
 80056e4:	1ca8      	adds	r0, r5, #2
 80056e6:	0001      	movs	r1, r0
 80056e8:	0013      	movs	r3, r2
 80056ea:	3430      	adds	r4, #48	@ 0x30
 80056ec:	7014      	strb	r4, [r2, #0]
 80056ee:	ac02      	add	r4, sp, #8
 80056f0:	3407      	adds	r4, #7
 80056f2:	429c      	cmp	r4, r3
 80056f4:	d80a      	bhi.n	800570c <__exponent+0x68>
 80056f6:	2300      	movs	r3, #0
 80056f8:	4294      	cmp	r4, r2
 80056fa:	d303      	bcc.n	8005704 <__exponent+0x60>
 80056fc:	3309      	adds	r3, #9
 80056fe:	aa02      	add	r2, sp, #8
 8005700:	189b      	adds	r3, r3, r2
 8005702:	1bdb      	subs	r3, r3, r7
 8005704:	18c0      	adds	r0, r0, r3
 8005706:	1b40      	subs	r0, r0, r5
 8005708:	b005      	add	sp, #20
 800570a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800570c:	781c      	ldrb	r4, [r3, #0]
 800570e:	3301      	adds	r3, #1
 8005710:	700c      	strb	r4, [r1, #0]
 8005712:	3101      	adds	r1, #1
 8005714:	e7eb      	b.n	80056ee <__exponent+0x4a>
 8005716:	2330      	movs	r3, #48	@ 0x30
 8005718:	18e4      	adds	r4, r4, r3
 800571a:	70ab      	strb	r3, [r5, #2]
 800571c:	1d28      	adds	r0, r5, #4
 800571e:	70ec      	strb	r4, [r5, #3]
 8005720:	e7f1      	b.n	8005706 <__exponent+0x62>
	...

08005724 <_printf_float>:
 8005724:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005726:	b097      	sub	sp, #92	@ 0x5c
 8005728:	000d      	movs	r5, r1
 800572a:	920a      	str	r2, [sp, #40]	@ 0x28
 800572c:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 800572e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005730:	9009      	str	r0, [sp, #36]	@ 0x24
 8005732:	f001 f82d 	bl	8006790 <_localeconv_r>
 8005736:	6803      	ldr	r3, [r0, #0]
 8005738:	0018      	movs	r0, r3
 800573a:	930d      	str	r3, [sp, #52]	@ 0x34
 800573c:	f7fa fce4 	bl	8000108 <strlen>
 8005740:	2300      	movs	r3, #0
 8005742:	900f      	str	r0, [sp, #60]	@ 0x3c
 8005744:	9314      	str	r3, [sp, #80]	@ 0x50
 8005746:	7e2b      	ldrb	r3, [r5, #24]
 8005748:	2207      	movs	r2, #7
 800574a:	930c      	str	r3, [sp, #48]	@ 0x30
 800574c:	682b      	ldr	r3, [r5, #0]
 800574e:	930e      	str	r3, [sp, #56]	@ 0x38
 8005750:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8005752:	6823      	ldr	r3, [r4, #0]
 8005754:	05c9      	lsls	r1, r1, #23
 8005756:	d545      	bpl.n	80057e4 <_printf_float+0xc0>
 8005758:	189b      	adds	r3, r3, r2
 800575a:	4393      	bics	r3, r2
 800575c:	001a      	movs	r2, r3
 800575e:	3208      	adds	r2, #8
 8005760:	6022      	str	r2, [r4, #0]
 8005762:	2201      	movs	r2, #1
 8005764:	681e      	ldr	r6, [r3, #0]
 8005766:	685f      	ldr	r7, [r3, #4]
 8005768:	007b      	lsls	r3, r7, #1
 800576a:	085b      	lsrs	r3, r3, #1
 800576c:	9311      	str	r3, [sp, #68]	@ 0x44
 800576e:	9610      	str	r6, [sp, #64]	@ 0x40
 8005770:	64ae      	str	r6, [r5, #72]	@ 0x48
 8005772:	64ef      	str	r7, [r5, #76]	@ 0x4c
 8005774:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8005776:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8005778:	4ba7      	ldr	r3, [pc, #668]	@ (8005a18 <_printf_float+0x2f4>)
 800577a:	4252      	negs	r2, r2
 800577c:	f7fd f88e 	bl	800289c <__aeabi_dcmpun>
 8005780:	2800      	cmp	r0, #0
 8005782:	d131      	bne.n	80057e8 <_printf_float+0xc4>
 8005784:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8005786:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8005788:	2201      	movs	r2, #1
 800578a:	4ba3      	ldr	r3, [pc, #652]	@ (8005a18 <_printf_float+0x2f4>)
 800578c:	4252      	negs	r2, r2
 800578e:	f7fa fe6d 	bl	800046c <__aeabi_dcmple>
 8005792:	2800      	cmp	r0, #0
 8005794:	d128      	bne.n	80057e8 <_printf_float+0xc4>
 8005796:	2200      	movs	r2, #0
 8005798:	2300      	movs	r3, #0
 800579a:	0030      	movs	r0, r6
 800579c:	0039      	movs	r1, r7
 800579e:	f7fa fe5b 	bl	8000458 <__aeabi_dcmplt>
 80057a2:	2800      	cmp	r0, #0
 80057a4:	d003      	beq.n	80057ae <_printf_float+0x8a>
 80057a6:	002b      	movs	r3, r5
 80057a8:	222d      	movs	r2, #45	@ 0x2d
 80057aa:	3343      	adds	r3, #67	@ 0x43
 80057ac:	701a      	strb	r2, [r3, #0]
 80057ae:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80057b0:	4f9a      	ldr	r7, [pc, #616]	@ (8005a1c <_printf_float+0x2f8>)
 80057b2:	2b47      	cmp	r3, #71	@ 0x47
 80057b4:	d800      	bhi.n	80057b8 <_printf_float+0x94>
 80057b6:	4f9a      	ldr	r7, [pc, #616]	@ (8005a20 <_printf_float+0x2fc>)
 80057b8:	2303      	movs	r3, #3
 80057ba:	2400      	movs	r4, #0
 80057bc:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80057be:	612b      	str	r3, [r5, #16]
 80057c0:	3301      	adds	r3, #1
 80057c2:	439a      	bics	r2, r3
 80057c4:	602a      	str	r2, [r5, #0]
 80057c6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80057c8:	0029      	movs	r1, r5
 80057ca:	9300      	str	r3, [sp, #0]
 80057cc:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80057ce:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80057d0:	aa15      	add	r2, sp, #84	@ 0x54
 80057d2:	f000 f9e5 	bl	8005ba0 <_printf_common>
 80057d6:	3001      	adds	r0, #1
 80057d8:	d000      	beq.n	80057dc <_printf_float+0xb8>
 80057da:	e09e      	b.n	800591a <_printf_float+0x1f6>
 80057dc:	2001      	movs	r0, #1
 80057de:	4240      	negs	r0, r0
 80057e0:	b017      	add	sp, #92	@ 0x5c
 80057e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80057e4:	3307      	adds	r3, #7
 80057e6:	e7b8      	b.n	800575a <_printf_float+0x36>
 80057e8:	0032      	movs	r2, r6
 80057ea:	003b      	movs	r3, r7
 80057ec:	0030      	movs	r0, r6
 80057ee:	0039      	movs	r1, r7
 80057f0:	f7fd f854 	bl	800289c <__aeabi_dcmpun>
 80057f4:	2800      	cmp	r0, #0
 80057f6:	d00b      	beq.n	8005810 <_printf_float+0xec>
 80057f8:	2f00      	cmp	r7, #0
 80057fa:	da03      	bge.n	8005804 <_printf_float+0xe0>
 80057fc:	002b      	movs	r3, r5
 80057fe:	222d      	movs	r2, #45	@ 0x2d
 8005800:	3343      	adds	r3, #67	@ 0x43
 8005802:	701a      	strb	r2, [r3, #0]
 8005804:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005806:	4f87      	ldr	r7, [pc, #540]	@ (8005a24 <_printf_float+0x300>)
 8005808:	2b47      	cmp	r3, #71	@ 0x47
 800580a:	d8d5      	bhi.n	80057b8 <_printf_float+0x94>
 800580c:	4f86      	ldr	r7, [pc, #536]	@ (8005a28 <_printf_float+0x304>)
 800580e:	e7d3      	b.n	80057b8 <_printf_float+0x94>
 8005810:	2220      	movs	r2, #32
 8005812:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8005814:	686b      	ldr	r3, [r5, #4]
 8005816:	4394      	bics	r4, r2
 8005818:	1c5a      	adds	r2, r3, #1
 800581a:	d146      	bne.n	80058aa <_printf_float+0x186>
 800581c:	3307      	adds	r3, #7
 800581e:	606b      	str	r3, [r5, #4]
 8005820:	2380      	movs	r3, #128	@ 0x80
 8005822:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005824:	00db      	lsls	r3, r3, #3
 8005826:	4313      	orrs	r3, r2
 8005828:	2200      	movs	r2, #0
 800582a:	602b      	str	r3, [r5, #0]
 800582c:	9206      	str	r2, [sp, #24]
 800582e:	aa14      	add	r2, sp, #80	@ 0x50
 8005830:	9205      	str	r2, [sp, #20]
 8005832:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8005834:	a90a      	add	r1, sp, #40	@ 0x28
 8005836:	9204      	str	r2, [sp, #16]
 8005838:	aa13      	add	r2, sp, #76	@ 0x4c
 800583a:	9203      	str	r2, [sp, #12]
 800583c:	2223      	movs	r2, #35	@ 0x23
 800583e:	1852      	adds	r2, r2, r1
 8005840:	9202      	str	r2, [sp, #8]
 8005842:	9301      	str	r3, [sp, #4]
 8005844:	686b      	ldr	r3, [r5, #4]
 8005846:	0032      	movs	r2, r6
 8005848:	9300      	str	r3, [sp, #0]
 800584a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800584c:	003b      	movs	r3, r7
 800584e:	f7ff fec3 	bl	80055d8 <__cvt>
 8005852:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8005854:	0007      	movs	r7, r0
 8005856:	2c47      	cmp	r4, #71	@ 0x47
 8005858:	d12d      	bne.n	80058b6 <_printf_float+0x192>
 800585a:	1cd3      	adds	r3, r2, #3
 800585c:	db02      	blt.n	8005864 <_printf_float+0x140>
 800585e:	686b      	ldr	r3, [r5, #4]
 8005860:	429a      	cmp	r2, r3
 8005862:	dd47      	ble.n	80058f4 <_printf_float+0x1d0>
 8005864:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005866:	3b02      	subs	r3, #2
 8005868:	b2db      	uxtb	r3, r3
 800586a:	930c      	str	r3, [sp, #48]	@ 0x30
 800586c:	0028      	movs	r0, r5
 800586e:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8005870:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8005872:	3901      	subs	r1, #1
 8005874:	3050      	adds	r0, #80	@ 0x50
 8005876:	9113      	str	r1, [sp, #76]	@ 0x4c
 8005878:	f7ff ff14 	bl	80056a4 <__exponent>
 800587c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 800587e:	0004      	movs	r4, r0
 8005880:	1813      	adds	r3, r2, r0
 8005882:	612b      	str	r3, [r5, #16]
 8005884:	2a01      	cmp	r2, #1
 8005886:	dc02      	bgt.n	800588e <_printf_float+0x16a>
 8005888:	682a      	ldr	r2, [r5, #0]
 800588a:	07d2      	lsls	r2, r2, #31
 800588c:	d501      	bpl.n	8005892 <_printf_float+0x16e>
 800588e:	3301      	adds	r3, #1
 8005890:	612b      	str	r3, [r5, #16]
 8005892:	2323      	movs	r3, #35	@ 0x23
 8005894:	aa0a      	add	r2, sp, #40	@ 0x28
 8005896:	189b      	adds	r3, r3, r2
 8005898:	781b      	ldrb	r3, [r3, #0]
 800589a:	2b00      	cmp	r3, #0
 800589c:	d100      	bne.n	80058a0 <_printf_float+0x17c>
 800589e:	e792      	b.n	80057c6 <_printf_float+0xa2>
 80058a0:	002b      	movs	r3, r5
 80058a2:	222d      	movs	r2, #45	@ 0x2d
 80058a4:	3343      	adds	r3, #67	@ 0x43
 80058a6:	701a      	strb	r2, [r3, #0]
 80058a8:	e78d      	b.n	80057c6 <_printf_float+0xa2>
 80058aa:	2c47      	cmp	r4, #71	@ 0x47
 80058ac:	d1b8      	bne.n	8005820 <_printf_float+0xfc>
 80058ae:	2b00      	cmp	r3, #0
 80058b0:	d1b6      	bne.n	8005820 <_printf_float+0xfc>
 80058b2:	3301      	adds	r3, #1
 80058b4:	e7b3      	b.n	800581e <_printf_float+0xfa>
 80058b6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80058b8:	2b65      	cmp	r3, #101	@ 0x65
 80058ba:	d9d7      	bls.n	800586c <_printf_float+0x148>
 80058bc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80058be:	2b66      	cmp	r3, #102	@ 0x66
 80058c0:	d11a      	bne.n	80058f8 <_printf_float+0x1d4>
 80058c2:	686b      	ldr	r3, [r5, #4]
 80058c4:	2a00      	cmp	r2, #0
 80058c6:	dd09      	ble.n	80058dc <_printf_float+0x1b8>
 80058c8:	612a      	str	r2, [r5, #16]
 80058ca:	2b00      	cmp	r3, #0
 80058cc:	d102      	bne.n	80058d4 <_printf_float+0x1b0>
 80058ce:	6829      	ldr	r1, [r5, #0]
 80058d0:	07c9      	lsls	r1, r1, #31
 80058d2:	d50b      	bpl.n	80058ec <_printf_float+0x1c8>
 80058d4:	3301      	adds	r3, #1
 80058d6:	189b      	adds	r3, r3, r2
 80058d8:	612b      	str	r3, [r5, #16]
 80058da:	e007      	b.n	80058ec <_printf_float+0x1c8>
 80058dc:	2b00      	cmp	r3, #0
 80058de:	d103      	bne.n	80058e8 <_printf_float+0x1c4>
 80058e0:	2201      	movs	r2, #1
 80058e2:	6829      	ldr	r1, [r5, #0]
 80058e4:	4211      	tst	r1, r2
 80058e6:	d000      	beq.n	80058ea <_printf_float+0x1c6>
 80058e8:	1c9a      	adds	r2, r3, #2
 80058ea:	612a      	str	r2, [r5, #16]
 80058ec:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80058ee:	2400      	movs	r4, #0
 80058f0:	65ab      	str	r3, [r5, #88]	@ 0x58
 80058f2:	e7ce      	b.n	8005892 <_printf_float+0x16e>
 80058f4:	2367      	movs	r3, #103	@ 0x67
 80058f6:	930c      	str	r3, [sp, #48]	@ 0x30
 80058f8:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80058fa:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80058fc:	4299      	cmp	r1, r3
 80058fe:	db06      	blt.n	800590e <_printf_float+0x1ea>
 8005900:	682b      	ldr	r3, [r5, #0]
 8005902:	6129      	str	r1, [r5, #16]
 8005904:	07db      	lsls	r3, r3, #31
 8005906:	d5f1      	bpl.n	80058ec <_printf_float+0x1c8>
 8005908:	3101      	adds	r1, #1
 800590a:	6129      	str	r1, [r5, #16]
 800590c:	e7ee      	b.n	80058ec <_printf_float+0x1c8>
 800590e:	2201      	movs	r2, #1
 8005910:	2900      	cmp	r1, #0
 8005912:	dce0      	bgt.n	80058d6 <_printf_float+0x1b2>
 8005914:	1892      	adds	r2, r2, r2
 8005916:	1a52      	subs	r2, r2, r1
 8005918:	e7dd      	b.n	80058d6 <_printf_float+0x1b2>
 800591a:	682a      	ldr	r2, [r5, #0]
 800591c:	0553      	lsls	r3, r2, #21
 800591e:	d408      	bmi.n	8005932 <_printf_float+0x20e>
 8005920:	692b      	ldr	r3, [r5, #16]
 8005922:	003a      	movs	r2, r7
 8005924:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005926:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005928:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 800592a:	47a0      	blx	r4
 800592c:	3001      	adds	r0, #1
 800592e:	d129      	bne.n	8005984 <_printf_float+0x260>
 8005930:	e754      	b.n	80057dc <_printf_float+0xb8>
 8005932:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005934:	2b65      	cmp	r3, #101	@ 0x65
 8005936:	d800      	bhi.n	800593a <_printf_float+0x216>
 8005938:	e0db      	b.n	8005af2 <_printf_float+0x3ce>
 800593a:	6ca8      	ldr	r0, [r5, #72]	@ 0x48
 800593c:	6ce9      	ldr	r1, [r5, #76]	@ 0x4c
 800593e:	2200      	movs	r2, #0
 8005940:	2300      	movs	r3, #0
 8005942:	f7fa fd83 	bl	800044c <__aeabi_dcmpeq>
 8005946:	2800      	cmp	r0, #0
 8005948:	d033      	beq.n	80059b2 <_printf_float+0x28e>
 800594a:	2301      	movs	r3, #1
 800594c:	4a37      	ldr	r2, [pc, #220]	@ (8005a2c <_printf_float+0x308>)
 800594e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005950:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005952:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8005954:	47a0      	blx	r4
 8005956:	3001      	adds	r0, #1
 8005958:	d100      	bne.n	800595c <_printf_float+0x238>
 800595a:	e73f      	b.n	80057dc <_printf_float+0xb8>
 800595c:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 800595e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8005960:	42b3      	cmp	r3, r6
 8005962:	db02      	blt.n	800596a <_printf_float+0x246>
 8005964:	682b      	ldr	r3, [r5, #0]
 8005966:	07db      	lsls	r3, r3, #31
 8005968:	d50c      	bpl.n	8005984 <_printf_float+0x260>
 800596a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 800596c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800596e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8005970:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005972:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005974:	47a0      	blx	r4
 8005976:	2400      	movs	r4, #0
 8005978:	3001      	adds	r0, #1
 800597a:	d100      	bne.n	800597e <_printf_float+0x25a>
 800597c:	e72e      	b.n	80057dc <_printf_float+0xb8>
 800597e:	1e73      	subs	r3, r6, #1
 8005980:	42a3      	cmp	r3, r4
 8005982:	dc0a      	bgt.n	800599a <_printf_float+0x276>
 8005984:	682b      	ldr	r3, [r5, #0]
 8005986:	079b      	lsls	r3, r3, #30
 8005988:	d500      	bpl.n	800598c <_printf_float+0x268>
 800598a:	e106      	b.n	8005b9a <_printf_float+0x476>
 800598c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 800598e:	68e8      	ldr	r0, [r5, #12]
 8005990:	4298      	cmp	r0, r3
 8005992:	db00      	blt.n	8005996 <_printf_float+0x272>
 8005994:	e724      	b.n	80057e0 <_printf_float+0xbc>
 8005996:	0018      	movs	r0, r3
 8005998:	e722      	b.n	80057e0 <_printf_float+0xbc>
 800599a:	002a      	movs	r2, r5
 800599c:	2301      	movs	r3, #1
 800599e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80059a0:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80059a2:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80059a4:	321a      	adds	r2, #26
 80059a6:	47b8      	blx	r7
 80059a8:	3001      	adds	r0, #1
 80059aa:	d100      	bne.n	80059ae <_printf_float+0x28a>
 80059ac:	e716      	b.n	80057dc <_printf_float+0xb8>
 80059ae:	3401      	adds	r4, #1
 80059b0:	e7e5      	b.n	800597e <_printf_float+0x25a>
 80059b2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80059b4:	2b00      	cmp	r3, #0
 80059b6:	dc3b      	bgt.n	8005a30 <_printf_float+0x30c>
 80059b8:	2301      	movs	r3, #1
 80059ba:	4a1c      	ldr	r2, [pc, #112]	@ (8005a2c <_printf_float+0x308>)
 80059bc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80059be:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80059c0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80059c2:	47a0      	blx	r4
 80059c4:	3001      	adds	r0, #1
 80059c6:	d100      	bne.n	80059ca <_printf_float+0x2a6>
 80059c8:	e708      	b.n	80057dc <_printf_float+0xb8>
 80059ca:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 80059cc:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80059ce:	4333      	orrs	r3, r6
 80059d0:	d102      	bne.n	80059d8 <_printf_float+0x2b4>
 80059d2:	682b      	ldr	r3, [r5, #0]
 80059d4:	07db      	lsls	r3, r3, #31
 80059d6:	d5d5      	bpl.n	8005984 <_printf_float+0x260>
 80059d8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80059da:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80059dc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80059de:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80059e0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80059e2:	47a0      	blx	r4
 80059e4:	2300      	movs	r3, #0
 80059e6:	3001      	adds	r0, #1
 80059e8:	d100      	bne.n	80059ec <_printf_float+0x2c8>
 80059ea:	e6f7      	b.n	80057dc <_printf_float+0xb8>
 80059ec:	930c      	str	r3, [sp, #48]	@ 0x30
 80059ee:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80059f0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80059f2:	425b      	negs	r3, r3
 80059f4:	4293      	cmp	r3, r2
 80059f6:	dc01      	bgt.n	80059fc <_printf_float+0x2d8>
 80059f8:	0033      	movs	r3, r6
 80059fa:	e792      	b.n	8005922 <_printf_float+0x1fe>
 80059fc:	002a      	movs	r2, r5
 80059fe:	2301      	movs	r3, #1
 8005a00:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005a02:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005a04:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8005a06:	321a      	adds	r2, #26
 8005a08:	47a0      	blx	r4
 8005a0a:	3001      	adds	r0, #1
 8005a0c:	d100      	bne.n	8005a10 <_printf_float+0x2ec>
 8005a0e:	e6e5      	b.n	80057dc <_printf_float+0xb8>
 8005a10:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005a12:	3301      	adds	r3, #1
 8005a14:	e7ea      	b.n	80059ec <_printf_float+0x2c8>
 8005a16:	46c0      	nop			@ (mov r8, r8)
 8005a18:	7fefffff 	.word	0x7fefffff
 8005a1c:	0800a040 	.word	0x0800a040
 8005a20:	0800a03c 	.word	0x0800a03c
 8005a24:	0800a048 	.word	0x0800a048
 8005a28:	0800a044 	.word	0x0800a044
 8005a2c:	0800a04c 	.word	0x0800a04c
 8005a30:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8005a32:	6dae      	ldr	r6, [r5, #88]	@ 0x58
 8005a34:	930c      	str	r3, [sp, #48]	@ 0x30
 8005a36:	429e      	cmp	r6, r3
 8005a38:	dd00      	ble.n	8005a3c <_printf_float+0x318>
 8005a3a:	001e      	movs	r6, r3
 8005a3c:	2e00      	cmp	r6, #0
 8005a3e:	dc31      	bgt.n	8005aa4 <_printf_float+0x380>
 8005a40:	43f3      	mvns	r3, r6
 8005a42:	2400      	movs	r4, #0
 8005a44:	17db      	asrs	r3, r3, #31
 8005a46:	4033      	ands	r3, r6
 8005a48:	930e      	str	r3, [sp, #56]	@ 0x38
 8005a4a:	6dae      	ldr	r6, [r5, #88]	@ 0x58
 8005a4c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005a4e:	1af3      	subs	r3, r6, r3
 8005a50:	42a3      	cmp	r3, r4
 8005a52:	dc30      	bgt.n	8005ab6 <_printf_float+0x392>
 8005a54:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8005a56:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8005a58:	429a      	cmp	r2, r3
 8005a5a:	dc38      	bgt.n	8005ace <_printf_float+0x3aa>
 8005a5c:	682b      	ldr	r3, [r5, #0]
 8005a5e:	07db      	lsls	r3, r3, #31
 8005a60:	d435      	bmi.n	8005ace <_printf_float+0x3aa>
 8005a62:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8005a64:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005a66:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8005a68:	1b9b      	subs	r3, r3, r6
 8005a6a:	1b14      	subs	r4, r2, r4
 8005a6c:	429c      	cmp	r4, r3
 8005a6e:	dd00      	ble.n	8005a72 <_printf_float+0x34e>
 8005a70:	001c      	movs	r4, r3
 8005a72:	2c00      	cmp	r4, #0
 8005a74:	dc34      	bgt.n	8005ae0 <_printf_float+0x3bc>
 8005a76:	43e3      	mvns	r3, r4
 8005a78:	2600      	movs	r6, #0
 8005a7a:	17db      	asrs	r3, r3, #31
 8005a7c:	401c      	ands	r4, r3
 8005a7e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8005a80:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8005a82:	1ad3      	subs	r3, r2, r3
 8005a84:	1b1b      	subs	r3, r3, r4
 8005a86:	42b3      	cmp	r3, r6
 8005a88:	dc00      	bgt.n	8005a8c <_printf_float+0x368>
 8005a8a:	e77b      	b.n	8005984 <_printf_float+0x260>
 8005a8c:	002a      	movs	r2, r5
 8005a8e:	2301      	movs	r3, #1
 8005a90:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005a92:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005a94:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8005a96:	321a      	adds	r2, #26
 8005a98:	47b8      	blx	r7
 8005a9a:	3001      	adds	r0, #1
 8005a9c:	d100      	bne.n	8005aa0 <_printf_float+0x37c>
 8005a9e:	e69d      	b.n	80057dc <_printf_float+0xb8>
 8005aa0:	3601      	adds	r6, #1
 8005aa2:	e7ec      	b.n	8005a7e <_printf_float+0x35a>
 8005aa4:	0033      	movs	r3, r6
 8005aa6:	003a      	movs	r2, r7
 8005aa8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005aaa:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005aac:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8005aae:	47a0      	blx	r4
 8005ab0:	3001      	adds	r0, #1
 8005ab2:	d1c5      	bne.n	8005a40 <_printf_float+0x31c>
 8005ab4:	e692      	b.n	80057dc <_printf_float+0xb8>
 8005ab6:	002a      	movs	r2, r5
 8005ab8:	2301      	movs	r3, #1
 8005aba:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005abc:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005abe:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8005ac0:	321a      	adds	r2, #26
 8005ac2:	47b0      	blx	r6
 8005ac4:	3001      	adds	r0, #1
 8005ac6:	d100      	bne.n	8005aca <_printf_float+0x3a6>
 8005ac8:	e688      	b.n	80057dc <_printf_float+0xb8>
 8005aca:	3401      	adds	r4, #1
 8005acc:	e7bd      	b.n	8005a4a <_printf_float+0x326>
 8005ace:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005ad0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8005ad2:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005ad4:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005ad6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8005ad8:	47a0      	blx	r4
 8005ada:	3001      	adds	r0, #1
 8005adc:	d1c1      	bne.n	8005a62 <_printf_float+0x33e>
 8005ade:	e67d      	b.n	80057dc <_printf_float+0xb8>
 8005ae0:	19ba      	adds	r2, r7, r6
 8005ae2:	0023      	movs	r3, r4
 8005ae4:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005ae6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005ae8:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8005aea:	47b0      	blx	r6
 8005aec:	3001      	adds	r0, #1
 8005aee:	d1c2      	bne.n	8005a76 <_printf_float+0x352>
 8005af0:	e674      	b.n	80057dc <_printf_float+0xb8>
 8005af2:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8005af4:	930c      	str	r3, [sp, #48]	@ 0x30
 8005af6:	2b01      	cmp	r3, #1
 8005af8:	dc02      	bgt.n	8005b00 <_printf_float+0x3dc>
 8005afa:	2301      	movs	r3, #1
 8005afc:	421a      	tst	r2, r3
 8005afe:	d039      	beq.n	8005b74 <_printf_float+0x450>
 8005b00:	2301      	movs	r3, #1
 8005b02:	003a      	movs	r2, r7
 8005b04:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005b06:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005b08:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8005b0a:	47b0      	blx	r6
 8005b0c:	3001      	adds	r0, #1
 8005b0e:	d100      	bne.n	8005b12 <_printf_float+0x3ee>
 8005b10:	e664      	b.n	80057dc <_printf_float+0xb8>
 8005b12:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005b14:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8005b16:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005b18:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005b1a:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8005b1c:	47b0      	blx	r6
 8005b1e:	3001      	adds	r0, #1
 8005b20:	d100      	bne.n	8005b24 <_printf_float+0x400>
 8005b22:	e65b      	b.n	80057dc <_printf_float+0xb8>
 8005b24:	6ca8      	ldr	r0, [r5, #72]	@ 0x48
 8005b26:	6ce9      	ldr	r1, [r5, #76]	@ 0x4c
 8005b28:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005b2a:	2200      	movs	r2, #0
 8005b2c:	3b01      	subs	r3, #1
 8005b2e:	930c      	str	r3, [sp, #48]	@ 0x30
 8005b30:	2300      	movs	r3, #0
 8005b32:	f7fa fc8b 	bl	800044c <__aeabi_dcmpeq>
 8005b36:	2800      	cmp	r0, #0
 8005b38:	d11a      	bne.n	8005b70 <_printf_float+0x44c>
 8005b3a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005b3c:	1c7a      	adds	r2, r7, #1
 8005b3e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005b40:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005b42:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8005b44:	47b0      	blx	r6
 8005b46:	3001      	adds	r0, #1
 8005b48:	d10e      	bne.n	8005b68 <_printf_float+0x444>
 8005b4a:	e647      	b.n	80057dc <_printf_float+0xb8>
 8005b4c:	002a      	movs	r2, r5
 8005b4e:	2301      	movs	r3, #1
 8005b50:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005b52:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005b54:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8005b56:	321a      	adds	r2, #26
 8005b58:	47b8      	blx	r7
 8005b5a:	3001      	adds	r0, #1
 8005b5c:	d100      	bne.n	8005b60 <_printf_float+0x43c>
 8005b5e:	e63d      	b.n	80057dc <_printf_float+0xb8>
 8005b60:	3601      	adds	r6, #1
 8005b62:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005b64:	429e      	cmp	r6, r3
 8005b66:	dbf1      	blt.n	8005b4c <_printf_float+0x428>
 8005b68:	002a      	movs	r2, r5
 8005b6a:	0023      	movs	r3, r4
 8005b6c:	3250      	adds	r2, #80	@ 0x50
 8005b6e:	e6d9      	b.n	8005924 <_printf_float+0x200>
 8005b70:	2600      	movs	r6, #0
 8005b72:	e7f6      	b.n	8005b62 <_printf_float+0x43e>
 8005b74:	003a      	movs	r2, r7
 8005b76:	e7e2      	b.n	8005b3e <_printf_float+0x41a>
 8005b78:	002a      	movs	r2, r5
 8005b7a:	2301      	movs	r3, #1
 8005b7c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005b7e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005b80:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8005b82:	3219      	adds	r2, #25
 8005b84:	47b0      	blx	r6
 8005b86:	3001      	adds	r0, #1
 8005b88:	d100      	bne.n	8005b8c <_printf_float+0x468>
 8005b8a:	e627      	b.n	80057dc <_printf_float+0xb8>
 8005b8c:	3401      	adds	r4, #1
 8005b8e:	68eb      	ldr	r3, [r5, #12]
 8005b90:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8005b92:	1a9b      	subs	r3, r3, r2
 8005b94:	42a3      	cmp	r3, r4
 8005b96:	dcef      	bgt.n	8005b78 <_printf_float+0x454>
 8005b98:	e6f8      	b.n	800598c <_printf_float+0x268>
 8005b9a:	2400      	movs	r4, #0
 8005b9c:	e7f7      	b.n	8005b8e <_printf_float+0x46a>
 8005b9e:	46c0      	nop			@ (mov r8, r8)

08005ba0 <_printf_common>:
 8005ba0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005ba2:	0016      	movs	r6, r2
 8005ba4:	9301      	str	r3, [sp, #4]
 8005ba6:	688a      	ldr	r2, [r1, #8]
 8005ba8:	690b      	ldr	r3, [r1, #16]
 8005baa:	000c      	movs	r4, r1
 8005bac:	9000      	str	r0, [sp, #0]
 8005bae:	4293      	cmp	r3, r2
 8005bb0:	da00      	bge.n	8005bb4 <_printf_common+0x14>
 8005bb2:	0013      	movs	r3, r2
 8005bb4:	0022      	movs	r2, r4
 8005bb6:	6033      	str	r3, [r6, #0]
 8005bb8:	3243      	adds	r2, #67	@ 0x43
 8005bba:	7812      	ldrb	r2, [r2, #0]
 8005bbc:	2a00      	cmp	r2, #0
 8005bbe:	d001      	beq.n	8005bc4 <_printf_common+0x24>
 8005bc0:	3301      	adds	r3, #1
 8005bc2:	6033      	str	r3, [r6, #0]
 8005bc4:	6823      	ldr	r3, [r4, #0]
 8005bc6:	069b      	lsls	r3, r3, #26
 8005bc8:	d502      	bpl.n	8005bd0 <_printf_common+0x30>
 8005bca:	6833      	ldr	r3, [r6, #0]
 8005bcc:	3302      	adds	r3, #2
 8005bce:	6033      	str	r3, [r6, #0]
 8005bd0:	6822      	ldr	r2, [r4, #0]
 8005bd2:	2306      	movs	r3, #6
 8005bd4:	0015      	movs	r5, r2
 8005bd6:	401d      	ands	r5, r3
 8005bd8:	421a      	tst	r2, r3
 8005bda:	d027      	beq.n	8005c2c <_printf_common+0x8c>
 8005bdc:	0023      	movs	r3, r4
 8005bde:	3343      	adds	r3, #67	@ 0x43
 8005be0:	781b      	ldrb	r3, [r3, #0]
 8005be2:	1e5a      	subs	r2, r3, #1
 8005be4:	4193      	sbcs	r3, r2
 8005be6:	6822      	ldr	r2, [r4, #0]
 8005be8:	0692      	lsls	r2, r2, #26
 8005bea:	d430      	bmi.n	8005c4e <_printf_common+0xae>
 8005bec:	0022      	movs	r2, r4
 8005bee:	9901      	ldr	r1, [sp, #4]
 8005bf0:	9800      	ldr	r0, [sp, #0]
 8005bf2:	9d08      	ldr	r5, [sp, #32]
 8005bf4:	3243      	adds	r2, #67	@ 0x43
 8005bf6:	47a8      	blx	r5
 8005bf8:	3001      	adds	r0, #1
 8005bfa:	d025      	beq.n	8005c48 <_printf_common+0xa8>
 8005bfc:	2206      	movs	r2, #6
 8005bfe:	6823      	ldr	r3, [r4, #0]
 8005c00:	2500      	movs	r5, #0
 8005c02:	4013      	ands	r3, r2
 8005c04:	2b04      	cmp	r3, #4
 8005c06:	d105      	bne.n	8005c14 <_printf_common+0x74>
 8005c08:	6833      	ldr	r3, [r6, #0]
 8005c0a:	68e5      	ldr	r5, [r4, #12]
 8005c0c:	1aed      	subs	r5, r5, r3
 8005c0e:	43eb      	mvns	r3, r5
 8005c10:	17db      	asrs	r3, r3, #31
 8005c12:	401d      	ands	r5, r3
 8005c14:	68a3      	ldr	r3, [r4, #8]
 8005c16:	6922      	ldr	r2, [r4, #16]
 8005c18:	4293      	cmp	r3, r2
 8005c1a:	dd01      	ble.n	8005c20 <_printf_common+0x80>
 8005c1c:	1a9b      	subs	r3, r3, r2
 8005c1e:	18ed      	adds	r5, r5, r3
 8005c20:	2600      	movs	r6, #0
 8005c22:	42b5      	cmp	r5, r6
 8005c24:	d120      	bne.n	8005c68 <_printf_common+0xc8>
 8005c26:	2000      	movs	r0, #0
 8005c28:	e010      	b.n	8005c4c <_printf_common+0xac>
 8005c2a:	3501      	adds	r5, #1
 8005c2c:	68e3      	ldr	r3, [r4, #12]
 8005c2e:	6832      	ldr	r2, [r6, #0]
 8005c30:	1a9b      	subs	r3, r3, r2
 8005c32:	42ab      	cmp	r3, r5
 8005c34:	ddd2      	ble.n	8005bdc <_printf_common+0x3c>
 8005c36:	0022      	movs	r2, r4
 8005c38:	2301      	movs	r3, #1
 8005c3a:	9901      	ldr	r1, [sp, #4]
 8005c3c:	9800      	ldr	r0, [sp, #0]
 8005c3e:	9f08      	ldr	r7, [sp, #32]
 8005c40:	3219      	adds	r2, #25
 8005c42:	47b8      	blx	r7
 8005c44:	3001      	adds	r0, #1
 8005c46:	d1f0      	bne.n	8005c2a <_printf_common+0x8a>
 8005c48:	2001      	movs	r0, #1
 8005c4a:	4240      	negs	r0, r0
 8005c4c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005c4e:	2030      	movs	r0, #48	@ 0x30
 8005c50:	18e1      	adds	r1, r4, r3
 8005c52:	3143      	adds	r1, #67	@ 0x43
 8005c54:	7008      	strb	r0, [r1, #0]
 8005c56:	0021      	movs	r1, r4
 8005c58:	1c5a      	adds	r2, r3, #1
 8005c5a:	3145      	adds	r1, #69	@ 0x45
 8005c5c:	7809      	ldrb	r1, [r1, #0]
 8005c5e:	18a2      	adds	r2, r4, r2
 8005c60:	3243      	adds	r2, #67	@ 0x43
 8005c62:	3302      	adds	r3, #2
 8005c64:	7011      	strb	r1, [r2, #0]
 8005c66:	e7c1      	b.n	8005bec <_printf_common+0x4c>
 8005c68:	0022      	movs	r2, r4
 8005c6a:	2301      	movs	r3, #1
 8005c6c:	9901      	ldr	r1, [sp, #4]
 8005c6e:	9800      	ldr	r0, [sp, #0]
 8005c70:	9f08      	ldr	r7, [sp, #32]
 8005c72:	321a      	adds	r2, #26
 8005c74:	47b8      	blx	r7
 8005c76:	3001      	adds	r0, #1
 8005c78:	d0e6      	beq.n	8005c48 <_printf_common+0xa8>
 8005c7a:	3601      	adds	r6, #1
 8005c7c:	e7d1      	b.n	8005c22 <_printf_common+0x82>
	...

08005c80 <_printf_i>:
 8005c80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005c82:	b08b      	sub	sp, #44	@ 0x2c
 8005c84:	9206      	str	r2, [sp, #24]
 8005c86:	000a      	movs	r2, r1
 8005c88:	3243      	adds	r2, #67	@ 0x43
 8005c8a:	9307      	str	r3, [sp, #28]
 8005c8c:	9005      	str	r0, [sp, #20]
 8005c8e:	9203      	str	r2, [sp, #12]
 8005c90:	7e0a      	ldrb	r2, [r1, #24]
 8005c92:	000c      	movs	r4, r1
 8005c94:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8005c96:	2a78      	cmp	r2, #120	@ 0x78
 8005c98:	d809      	bhi.n	8005cae <_printf_i+0x2e>
 8005c9a:	2a62      	cmp	r2, #98	@ 0x62
 8005c9c:	d80b      	bhi.n	8005cb6 <_printf_i+0x36>
 8005c9e:	2a00      	cmp	r2, #0
 8005ca0:	d100      	bne.n	8005ca4 <_printf_i+0x24>
 8005ca2:	e0ba      	b.n	8005e1a <_printf_i+0x19a>
 8005ca4:	497a      	ldr	r1, [pc, #488]	@ (8005e90 <_printf_i+0x210>)
 8005ca6:	9104      	str	r1, [sp, #16]
 8005ca8:	2a58      	cmp	r2, #88	@ 0x58
 8005caa:	d100      	bne.n	8005cae <_printf_i+0x2e>
 8005cac:	e08e      	b.n	8005dcc <_printf_i+0x14c>
 8005cae:	0025      	movs	r5, r4
 8005cb0:	3542      	adds	r5, #66	@ 0x42
 8005cb2:	702a      	strb	r2, [r5, #0]
 8005cb4:	e022      	b.n	8005cfc <_printf_i+0x7c>
 8005cb6:	0010      	movs	r0, r2
 8005cb8:	3863      	subs	r0, #99	@ 0x63
 8005cba:	2815      	cmp	r0, #21
 8005cbc:	d8f7      	bhi.n	8005cae <_printf_i+0x2e>
 8005cbe:	f7fa fa35 	bl	800012c <__gnu_thumb1_case_shi>
 8005cc2:	0016      	.short	0x0016
 8005cc4:	fff6001f 	.word	0xfff6001f
 8005cc8:	fff6fff6 	.word	0xfff6fff6
 8005ccc:	001ffff6 	.word	0x001ffff6
 8005cd0:	fff6fff6 	.word	0xfff6fff6
 8005cd4:	fff6fff6 	.word	0xfff6fff6
 8005cd8:	0036009f 	.word	0x0036009f
 8005cdc:	fff6007e 	.word	0xfff6007e
 8005ce0:	00b0fff6 	.word	0x00b0fff6
 8005ce4:	0036fff6 	.word	0x0036fff6
 8005ce8:	fff6fff6 	.word	0xfff6fff6
 8005cec:	0082      	.short	0x0082
 8005cee:	0025      	movs	r5, r4
 8005cf0:	681a      	ldr	r2, [r3, #0]
 8005cf2:	3542      	adds	r5, #66	@ 0x42
 8005cf4:	1d11      	adds	r1, r2, #4
 8005cf6:	6019      	str	r1, [r3, #0]
 8005cf8:	6813      	ldr	r3, [r2, #0]
 8005cfa:	702b      	strb	r3, [r5, #0]
 8005cfc:	2301      	movs	r3, #1
 8005cfe:	e09e      	b.n	8005e3e <_printf_i+0x1be>
 8005d00:	6818      	ldr	r0, [r3, #0]
 8005d02:	6809      	ldr	r1, [r1, #0]
 8005d04:	1d02      	adds	r2, r0, #4
 8005d06:	060d      	lsls	r5, r1, #24
 8005d08:	d50b      	bpl.n	8005d22 <_printf_i+0xa2>
 8005d0a:	6806      	ldr	r6, [r0, #0]
 8005d0c:	601a      	str	r2, [r3, #0]
 8005d0e:	2e00      	cmp	r6, #0
 8005d10:	da03      	bge.n	8005d1a <_printf_i+0x9a>
 8005d12:	232d      	movs	r3, #45	@ 0x2d
 8005d14:	9a03      	ldr	r2, [sp, #12]
 8005d16:	4276      	negs	r6, r6
 8005d18:	7013      	strb	r3, [r2, #0]
 8005d1a:	4b5d      	ldr	r3, [pc, #372]	@ (8005e90 <_printf_i+0x210>)
 8005d1c:	270a      	movs	r7, #10
 8005d1e:	9304      	str	r3, [sp, #16]
 8005d20:	e018      	b.n	8005d54 <_printf_i+0xd4>
 8005d22:	6806      	ldr	r6, [r0, #0]
 8005d24:	601a      	str	r2, [r3, #0]
 8005d26:	0649      	lsls	r1, r1, #25
 8005d28:	d5f1      	bpl.n	8005d0e <_printf_i+0x8e>
 8005d2a:	b236      	sxth	r6, r6
 8005d2c:	e7ef      	b.n	8005d0e <_printf_i+0x8e>
 8005d2e:	6808      	ldr	r0, [r1, #0]
 8005d30:	6819      	ldr	r1, [r3, #0]
 8005d32:	c940      	ldmia	r1!, {r6}
 8005d34:	0605      	lsls	r5, r0, #24
 8005d36:	d402      	bmi.n	8005d3e <_printf_i+0xbe>
 8005d38:	0640      	lsls	r0, r0, #25
 8005d3a:	d500      	bpl.n	8005d3e <_printf_i+0xbe>
 8005d3c:	b2b6      	uxth	r6, r6
 8005d3e:	6019      	str	r1, [r3, #0]
 8005d40:	4b53      	ldr	r3, [pc, #332]	@ (8005e90 <_printf_i+0x210>)
 8005d42:	270a      	movs	r7, #10
 8005d44:	9304      	str	r3, [sp, #16]
 8005d46:	2a6f      	cmp	r2, #111	@ 0x6f
 8005d48:	d100      	bne.n	8005d4c <_printf_i+0xcc>
 8005d4a:	3f02      	subs	r7, #2
 8005d4c:	0023      	movs	r3, r4
 8005d4e:	2200      	movs	r2, #0
 8005d50:	3343      	adds	r3, #67	@ 0x43
 8005d52:	701a      	strb	r2, [r3, #0]
 8005d54:	6863      	ldr	r3, [r4, #4]
 8005d56:	60a3      	str	r3, [r4, #8]
 8005d58:	2b00      	cmp	r3, #0
 8005d5a:	db06      	blt.n	8005d6a <_printf_i+0xea>
 8005d5c:	2104      	movs	r1, #4
 8005d5e:	6822      	ldr	r2, [r4, #0]
 8005d60:	9d03      	ldr	r5, [sp, #12]
 8005d62:	438a      	bics	r2, r1
 8005d64:	6022      	str	r2, [r4, #0]
 8005d66:	4333      	orrs	r3, r6
 8005d68:	d00c      	beq.n	8005d84 <_printf_i+0x104>
 8005d6a:	9d03      	ldr	r5, [sp, #12]
 8005d6c:	0030      	movs	r0, r6
 8005d6e:	0039      	movs	r1, r7
 8005d70:	f7fa fa6c 	bl	800024c <__aeabi_uidivmod>
 8005d74:	9b04      	ldr	r3, [sp, #16]
 8005d76:	3d01      	subs	r5, #1
 8005d78:	5c5b      	ldrb	r3, [r3, r1]
 8005d7a:	702b      	strb	r3, [r5, #0]
 8005d7c:	0033      	movs	r3, r6
 8005d7e:	0006      	movs	r6, r0
 8005d80:	429f      	cmp	r7, r3
 8005d82:	d9f3      	bls.n	8005d6c <_printf_i+0xec>
 8005d84:	2f08      	cmp	r7, #8
 8005d86:	d109      	bne.n	8005d9c <_printf_i+0x11c>
 8005d88:	6823      	ldr	r3, [r4, #0]
 8005d8a:	07db      	lsls	r3, r3, #31
 8005d8c:	d506      	bpl.n	8005d9c <_printf_i+0x11c>
 8005d8e:	6862      	ldr	r2, [r4, #4]
 8005d90:	6923      	ldr	r3, [r4, #16]
 8005d92:	429a      	cmp	r2, r3
 8005d94:	dc02      	bgt.n	8005d9c <_printf_i+0x11c>
 8005d96:	2330      	movs	r3, #48	@ 0x30
 8005d98:	3d01      	subs	r5, #1
 8005d9a:	702b      	strb	r3, [r5, #0]
 8005d9c:	9b03      	ldr	r3, [sp, #12]
 8005d9e:	1b5b      	subs	r3, r3, r5
 8005da0:	6123      	str	r3, [r4, #16]
 8005da2:	9b07      	ldr	r3, [sp, #28]
 8005da4:	0021      	movs	r1, r4
 8005da6:	9300      	str	r3, [sp, #0]
 8005da8:	9805      	ldr	r0, [sp, #20]
 8005daa:	9b06      	ldr	r3, [sp, #24]
 8005dac:	aa09      	add	r2, sp, #36	@ 0x24
 8005dae:	f7ff fef7 	bl	8005ba0 <_printf_common>
 8005db2:	3001      	adds	r0, #1
 8005db4:	d148      	bne.n	8005e48 <_printf_i+0x1c8>
 8005db6:	2001      	movs	r0, #1
 8005db8:	4240      	negs	r0, r0
 8005dba:	b00b      	add	sp, #44	@ 0x2c
 8005dbc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005dbe:	2220      	movs	r2, #32
 8005dc0:	6809      	ldr	r1, [r1, #0]
 8005dc2:	430a      	orrs	r2, r1
 8005dc4:	6022      	str	r2, [r4, #0]
 8005dc6:	2278      	movs	r2, #120	@ 0x78
 8005dc8:	4932      	ldr	r1, [pc, #200]	@ (8005e94 <_printf_i+0x214>)
 8005dca:	9104      	str	r1, [sp, #16]
 8005dcc:	0021      	movs	r1, r4
 8005dce:	3145      	adds	r1, #69	@ 0x45
 8005dd0:	700a      	strb	r2, [r1, #0]
 8005dd2:	6819      	ldr	r1, [r3, #0]
 8005dd4:	6822      	ldr	r2, [r4, #0]
 8005dd6:	c940      	ldmia	r1!, {r6}
 8005dd8:	0610      	lsls	r0, r2, #24
 8005dda:	d402      	bmi.n	8005de2 <_printf_i+0x162>
 8005ddc:	0650      	lsls	r0, r2, #25
 8005dde:	d500      	bpl.n	8005de2 <_printf_i+0x162>
 8005de0:	b2b6      	uxth	r6, r6
 8005de2:	6019      	str	r1, [r3, #0]
 8005de4:	07d3      	lsls	r3, r2, #31
 8005de6:	d502      	bpl.n	8005dee <_printf_i+0x16e>
 8005de8:	2320      	movs	r3, #32
 8005dea:	4313      	orrs	r3, r2
 8005dec:	6023      	str	r3, [r4, #0]
 8005dee:	2e00      	cmp	r6, #0
 8005df0:	d001      	beq.n	8005df6 <_printf_i+0x176>
 8005df2:	2710      	movs	r7, #16
 8005df4:	e7aa      	b.n	8005d4c <_printf_i+0xcc>
 8005df6:	2220      	movs	r2, #32
 8005df8:	6823      	ldr	r3, [r4, #0]
 8005dfa:	4393      	bics	r3, r2
 8005dfc:	6023      	str	r3, [r4, #0]
 8005dfe:	e7f8      	b.n	8005df2 <_printf_i+0x172>
 8005e00:	681a      	ldr	r2, [r3, #0]
 8005e02:	680d      	ldr	r5, [r1, #0]
 8005e04:	1d10      	adds	r0, r2, #4
 8005e06:	6949      	ldr	r1, [r1, #20]
 8005e08:	6018      	str	r0, [r3, #0]
 8005e0a:	6813      	ldr	r3, [r2, #0]
 8005e0c:	062e      	lsls	r6, r5, #24
 8005e0e:	d501      	bpl.n	8005e14 <_printf_i+0x194>
 8005e10:	6019      	str	r1, [r3, #0]
 8005e12:	e002      	b.n	8005e1a <_printf_i+0x19a>
 8005e14:	066d      	lsls	r5, r5, #25
 8005e16:	d5fb      	bpl.n	8005e10 <_printf_i+0x190>
 8005e18:	8019      	strh	r1, [r3, #0]
 8005e1a:	2300      	movs	r3, #0
 8005e1c:	9d03      	ldr	r5, [sp, #12]
 8005e1e:	6123      	str	r3, [r4, #16]
 8005e20:	e7bf      	b.n	8005da2 <_printf_i+0x122>
 8005e22:	681a      	ldr	r2, [r3, #0]
 8005e24:	1d11      	adds	r1, r2, #4
 8005e26:	6019      	str	r1, [r3, #0]
 8005e28:	6815      	ldr	r5, [r2, #0]
 8005e2a:	2100      	movs	r1, #0
 8005e2c:	0028      	movs	r0, r5
 8005e2e:	6862      	ldr	r2, [r4, #4]
 8005e30:	f000 fd2d 	bl	800688e <memchr>
 8005e34:	2800      	cmp	r0, #0
 8005e36:	d001      	beq.n	8005e3c <_printf_i+0x1bc>
 8005e38:	1b40      	subs	r0, r0, r5
 8005e3a:	6060      	str	r0, [r4, #4]
 8005e3c:	6863      	ldr	r3, [r4, #4]
 8005e3e:	6123      	str	r3, [r4, #16]
 8005e40:	2300      	movs	r3, #0
 8005e42:	9a03      	ldr	r2, [sp, #12]
 8005e44:	7013      	strb	r3, [r2, #0]
 8005e46:	e7ac      	b.n	8005da2 <_printf_i+0x122>
 8005e48:	002a      	movs	r2, r5
 8005e4a:	6923      	ldr	r3, [r4, #16]
 8005e4c:	9906      	ldr	r1, [sp, #24]
 8005e4e:	9805      	ldr	r0, [sp, #20]
 8005e50:	9d07      	ldr	r5, [sp, #28]
 8005e52:	47a8      	blx	r5
 8005e54:	3001      	adds	r0, #1
 8005e56:	d0ae      	beq.n	8005db6 <_printf_i+0x136>
 8005e58:	6823      	ldr	r3, [r4, #0]
 8005e5a:	079b      	lsls	r3, r3, #30
 8005e5c:	d415      	bmi.n	8005e8a <_printf_i+0x20a>
 8005e5e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005e60:	68e0      	ldr	r0, [r4, #12]
 8005e62:	4298      	cmp	r0, r3
 8005e64:	daa9      	bge.n	8005dba <_printf_i+0x13a>
 8005e66:	0018      	movs	r0, r3
 8005e68:	e7a7      	b.n	8005dba <_printf_i+0x13a>
 8005e6a:	0022      	movs	r2, r4
 8005e6c:	2301      	movs	r3, #1
 8005e6e:	9906      	ldr	r1, [sp, #24]
 8005e70:	9805      	ldr	r0, [sp, #20]
 8005e72:	9e07      	ldr	r6, [sp, #28]
 8005e74:	3219      	adds	r2, #25
 8005e76:	47b0      	blx	r6
 8005e78:	3001      	adds	r0, #1
 8005e7a:	d09c      	beq.n	8005db6 <_printf_i+0x136>
 8005e7c:	3501      	adds	r5, #1
 8005e7e:	68e3      	ldr	r3, [r4, #12]
 8005e80:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005e82:	1a9b      	subs	r3, r3, r2
 8005e84:	42ab      	cmp	r3, r5
 8005e86:	dcf0      	bgt.n	8005e6a <_printf_i+0x1ea>
 8005e88:	e7e9      	b.n	8005e5e <_printf_i+0x1de>
 8005e8a:	2500      	movs	r5, #0
 8005e8c:	e7f7      	b.n	8005e7e <_printf_i+0x1fe>
 8005e8e:	46c0      	nop			@ (mov r8, r8)
 8005e90:	0800a04e 	.word	0x0800a04e
 8005e94:	0800a05f 	.word	0x0800a05f

08005e98 <_scanf_float>:
 8005e98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005e9a:	b08b      	sub	sp, #44	@ 0x2c
 8005e9c:	0016      	movs	r6, r2
 8005e9e:	9003      	str	r0, [sp, #12]
 8005ea0:	22ae      	movs	r2, #174	@ 0xae
 8005ea2:	2000      	movs	r0, #0
 8005ea4:	9307      	str	r3, [sp, #28]
 8005ea6:	688b      	ldr	r3, [r1, #8]
 8005ea8:	000c      	movs	r4, r1
 8005eaa:	1e59      	subs	r1, r3, #1
 8005eac:	0052      	lsls	r2, r2, #1
 8005eae:	9006      	str	r0, [sp, #24]
 8005eb0:	4291      	cmp	r1, r2
 8005eb2:	d905      	bls.n	8005ec0 <_scanf_float+0x28>
 8005eb4:	3b5e      	subs	r3, #94	@ 0x5e
 8005eb6:	3bff      	subs	r3, #255	@ 0xff
 8005eb8:	9306      	str	r3, [sp, #24]
 8005eba:	235e      	movs	r3, #94	@ 0x5e
 8005ebc:	33ff      	adds	r3, #255	@ 0xff
 8005ebe:	60a3      	str	r3, [r4, #8]
 8005ec0:	23f0      	movs	r3, #240	@ 0xf0
 8005ec2:	6822      	ldr	r2, [r4, #0]
 8005ec4:	00db      	lsls	r3, r3, #3
 8005ec6:	4313      	orrs	r3, r2
 8005ec8:	6023      	str	r3, [r4, #0]
 8005eca:	0023      	movs	r3, r4
 8005ecc:	2500      	movs	r5, #0
 8005ece:	331c      	adds	r3, #28
 8005ed0:	001f      	movs	r7, r3
 8005ed2:	9304      	str	r3, [sp, #16]
 8005ed4:	9502      	str	r5, [sp, #8]
 8005ed6:	9509      	str	r5, [sp, #36]	@ 0x24
 8005ed8:	9508      	str	r5, [sp, #32]
 8005eda:	9501      	str	r5, [sp, #4]
 8005edc:	9505      	str	r5, [sp, #20]
 8005ede:	68a2      	ldr	r2, [r4, #8]
 8005ee0:	2a00      	cmp	r2, #0
 8005ee2:	d00a      	beq.n	8005efa <_scanf_float+0x62>
 8005ee4:	6833      	ldr	r3, [r6, #0]
 8005ee6:	781b      	ldrb	r3, [r3, #0]
 8005ee8:	2b4e      	cmp	r3, #78	@ 0x4e
 8005eea:	d844      	bhi.n	8005f76 <_scanf_float+0xde>
 8005eec:	0018      	movs	r0, r3
 8005eee:	2b40      	cmp	r3, #64	@ 0x40
 8005ef0:	d82c      	bhi.n	8005f4c <_scanf_float+0xb4>
 8005ef2:	382b      	subs	r0, #43	@ 0x2b
 8005ef4:	b2c1      	uxtb	r1, r0
 8005ef6:	290e      	cmp	r1, #14
 8005ef8:	d92a      	bls.n	8005f50 <_scanf_float+0xb8>
 8005efa:	9b01      	ldr	r3, [sp, #4]
 8005efc:	2b00      	cmp	r3, #0
 8005efe:	d003      	beq.n	8005f08 <_scanf_float+0x70>
 8005f00:	6823      	ldr	r3, [r4, #0]
 8005f02:	4aa6      	ldr	r2, [pc, #664]	@ (800619c <_scanf_float+0x304>)
 8005f04:	4013      	ands	r3, r2
 8005f06:	6023      	str	r3, [r4, #0]
 8005f08:	9b02      	ldr	r3, [sp, #8]
 8005f0a:	3b01      	subs	r3, #1
 8005f0c:	2b01      	cmp	r3, #1
 8005f0e:	d900      	bls.n	8005f12 <_scanf_float+0x7a>
 8005f10:	e0fe      	b.n	8006110 <_scanf_float+0x278>
 8005f12:	25be      	movs	r5, #190	@ 0xbe
 8005f14:	006d      	lsls	r5, r5, #1
 8005f16:	9b04      	ldr	r3, [sp, #16]
 8005f18:	429f      	cmp	r7, r3
 8005f1a:	d900      	bls.n	8005f1e <_scanf_float+0x86>
 8005f1c:	e0ee      	b.n	80060fc <_scanf_float+0x264>
 8005f1e:	2001      	movs	r0, #1
 8005f20:	b00b      	add	sp, #44	@ 0x2c
 8005f22:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005f24:	0018      	movs	r0, r3
 8005f26:	3861      	subs	r0, #97	@ 0x61
 8005f28:	280d      	cmp	r0, #13
 8005f2a:	d8e6      	bhi.n	8005efa <_scanf_float+0x62>
 8005f2c:	f7fa f8fe 	bl	800012c <__gnu_thumb1_case_shi>
 8005f30:	ffe50089 	.word	0xffe50089
 8005f34:	ffe5ffe5 	.word	0xffe5ffe5
 8005f38:	00a700bb 	.word	0x00a700bb
 8005f3c:	ffe5ffe5 	.word	0xffe5ffe5
 8005f40:	ffe5008f 	.word	0xffe5008f
 8005f44:	ffe5ffe5 	.word	0xffe5ffe5
 8005f48:	006bffe5 	.word	0x006bffe5
 8005f4c:	3841      	subs	r0, #65	@ 0x41
 8005f4e:	e7eb      	b.n	8005f28 <_scanf_float+0x90>
 8005f50:	280e      	cmp	r0, #14
 8005f52:	d8d2      	bhi.n	8005efa <_scanf_float+0x62>
 8005f54:	f7fa f8ea 	bl	800012c <__gnu_thumb1_case_shi>
 8005f58:	ffd1004f 	.word	0xffd1004f
 8005f5c:	009d004f 	.word	0x009d004f
 8005f60:	0021ffd1 	.word	0x0021ffd1
 8005f64:	00410041 	.word	0x00410041
 8005f68:	00410041 	.word	0x00410041
 8005f6c:	00410041 	.word	0x00410041
 8005f70:	00410041 	.word	0x00410041
 8005f74:	0041      	.short	0x0041
 8005f76:	2b6e      	cmp	r3, #110	@ 0x6e
 8005f78:	d80a      	bhi.n	8005f90 <_scanf_float+0xf8>
 8005f7a:	2b60      	cmp	r3, #96	@ 0x60
 8005f7c:	d8d2      	bhi.n	8005f24 <_scanf_float+0x8c>
 8005f7e:	2b54      	cmp	r3, #84	@ 0x54
 8005f80:	d100      	bne.n	8005f84 <_scanf_float+0xec>
 8005f82:	e081      	b.n	8006088 <_scanf_float+0x1f0>
 8005f84:	2b59      	cmp	r3, #89	@ 0x59
 8005f86:	d1b8      	bne.n	8005efa <_scanf_float+0x62>
 8005f88:	2d07      	cmp	r5, #7
 8005f8a:	d1b6      	bne.n	8005efa <_scanf_float+0x62>
 8005f8c:	2508      	movs	r5, #8
 8005f8e:	e02f      	b.n	8005ff0 <_scanf_float+0x158>
 8005f90:	2b74      	cmp	r3, #116	@ 0x74
 8005f92:	d079      	beq.n	8006088 <_scanf_float+0x1f0>
 8005f94:	2b79      	cmp	r3, #121	@ 0x79
 8005f96:	d0f7      	beq.n	8005f88 <_scanf_float+0xf0>
 8005f98:	e7af      	b.n	8005efa <_scanf_float+0x62>
 8005f9a:	6821      	ldr	r1, [r4, #0]
 8005f9c:	05c8      	lsls	r0, r1, #23
 8005f9e:	d51c      	bpl.n	8005fda <_scanf_float+0x142>
 8005fa0:	2380      	movs	r3, #128	@ 0x80
 8005fa2:	4399      	bics	r1, r3
 8005fa4:	9b01      	ldr	r3, [sp, #4]
 8005fa6:	6021      	str	r1, [r4, #0]
 8005fa8:	3301      	adds	r3, #1
 8005faa:	9301      	str	r3, [sp, #4]
 8005fac:	9b06      	ldr	r3, [sp, #24]
 8005fae:	2b00      	cmp	r3, #0
 8005fb0:	d003      	beq.n	8005fba <_scanf_float+0x122>
 8005fb2:	3b01      	subs	r3, #1
 8005fb4:	3201      	adds	r2, #1
 8005fb6:	9306      	str	r3, [sp, #24]
 8005fb8:	60a2      	str	r2, [r4, #8]
 8005fba:	68a3      	ldr	r3, [r4, #8]
 8005fbc:	3b01      	subs	r3, #1
 8005fbe:	60a3      	str	r3, [r4, #8]
 8005fc0:	6923      	ldr	r3, [r4, #16]
 8005fc2:	3301      	adds	r3, #1
 8005fc4:	6123      	str	r3, [r4, #16]
 8005fc6:	6873      	ldr	r3, [r6, #4]
 8005fc8:	3b01      	subs	r3, #1
 8005fca:	6073      	str	r3, [r6, #4]
 8005fcc:	2b00      	cmp	r3, #0
 8005fce:	dc00      	bgt.n	8005fd2 <_scanf_float+0x13a>
 8005fd0:	e08a      	b.n	80060e8 <_scanf_float+0x250>
 8005fd2:	6833      	ldr	r3, [r6, #0]
 8005fd4:	3301      	adds	r3, #1
 8005fd6:	6033      	str	r3, [r6, #0]
 8005fd8:	e781      	b.n	8005ede <_scanf_float+0x46>
 8005fda:	9a02      	ldr	r2, [sp, #8]
 8005fdc:	1951      	adds	r1, r2, r5
 8005fde:	2900      	cmp	r1, #0
 8005fe0:	d000      	beq.n	8005fe4 <_scanf_float+0x14c>
 8005fe2:	e78a      	b.n	8005efa <_scanf_float+0x62>
 8005fe4:	000d      	movs	r5, r1
 8005fe6:	6822      	ldr	r2, [r4, #0]
 8005fe8:	486d      	ldr	r0, [pc, #436]	@ (80061a0 <_scanf_float+0x308>)
 8005fea:	9102      	str	r1, [sp, #8]
 8005fec:	4002      	ands	r2, r0
 8005fee:	6022      	str	r2, [r4, #0]
 8005ff0:	703b      	strb	r3, [r7, #0]
 8005ff2:	3701      	adds	r7, #1
 8005ff4:	e7e1      	b.n	8005fba <_scanf_float+0x122>
 8005ff6:	2180      	movs	r1, #128	@ 0x80
 8005ff8:	6822      	ldr	r2, [r4, #0]
 8005ffa:	420a      	tst	r2, r1
 8005ffc:	d100      	bne.n	8006000 <_scanf_float+0x168>
 8005ffe:	e77c      	b.n	8005efa <_scanf_float+0x62>
 8006000:	438a      	bics	r2, r1
 8006002:	6022      	str	r2, [r4, #0]
 8006004:	e7f4      	b.n	8005ff0 <_scanf_float+0x158>
 8006006:	9a02      	ldr	r2, [sp, #8]
 8006008:	2a00      	cmp	r2, #0
 800600a:	d10f      	bne.n	800602c <_scanf_float+0x194>
 800600c:	9a01      	ldr	r2, [sp, #4]
 800600e:	2a00      	cmp	r2, #0
 8006010:	d10f      	bne.n	8006032 <_scanf_float+0x19a>
 8006012:	6822      	ldr	r2, [r4, #0]
 8006014:	21e0      	movs	r1, #224	@ 0xe0
 8006016:	0010      	movs	r0, r2
 8006018:	00c9      	lsls	r1, r1, #3
 800601a:	4008      	ands	r0, r1
 800601c:	4288      	cmp	r0, r1
 800601e:	d108      	bne.n	8006032 <_scanf_float+0x19a>
 8006020:	4960      	ldr	r1, [pc, #384]	@ (80061a4 <_scanf_float+0x30c>)
 8006022:	400a      	ands	r2, r1
 8006024:	6022      	str	r2, [r4, #0]
 8006026:	2201      	movs	r2, #1
 8006028:	9202      	str	r2, [sp, #8]
 800602a:	e7e1      	b.n	8005ff0 <_scanf_float+0x158>
 800602c:	9a02      	ldr	r2, [sp, #8]
 800602e:	2a02      	cmp	r2, #2
 8006030:	d058      	beq.n	80060e4 <_scanf_float+0x24c>
 8006032:	2d01      	cmp	r5, #1
 8006034:	d002      	beq.n	800603c <_scanf_float+0x1a4>
 8006036:	2d04      	cmp	r5, #4
 8006038:	d000      	beq.n	800603c <_scanf_float+0x1a4>
 800603a:	e75e      	b.n	8005efa <_scanf_float+0x62>
 800603c:	3501      	adds	r5, #1
 800603e:	b2ed      	uxtb	r5, r5
 8006040:	e7d6      	b.n	8005ff0 <_scanf_float+0x158>
 8006042:	9a02      	ldr	r2, [sp, #8]
 8006044:	2a01      	cmp	r2, #1
 8006046:	d000      	beq.n	800604a <_scanf_float+0x1b2>
 8006048:	e757      	b.n	8005efa <_scanf_float+0x62>
 800604a:	2202      	movs	r2, #2
 800604c:	e7ec      	b.n	8006028 <_scanf_float+0x190>
 800604e:	2d00      	cmp	r5, #0
 8006050:	d110      	bne.n	8006074 <_scanf_float+0x1dc>
 8006052:	9a01      	ldr	r2, [sp, #4]
 8006054:	2a00      	cmp	r2, #0
 8006056:	d000      	beq.n	800605a <_scanf_float+0x1c2>
 8006058:	e752      	b.n	8005f00 <_scanf_float+0x68>
 800605a:	6822      	ldr	r2, [r4, #0]
 800605c:	21e0      	movs	r1, #224	@ 0xe0
 800605e:	0010      	movs	r0, r2
 8006060:	00c9      	lsls	r1, r1, #3
 8006062:	4008      	ands	r0, r1
 8006064:	4288      	cmp	r0, r1
 8006066:	d000      	beq.n	800606a <_scanf_float+0x1d2>
 8006068:	e11b      	b.n	80062a2 <_scanf_float+0x40a>
 800606a:	494e      	ldr	r1, [pc, #312]	@ (80061a4 <_scanf_float+0x30c>)
 800606c:	3501      	adds	r5, #1
 800606e:	400a      	ands	r2, r1
 8006070:	6022      	str	r2, [r4, #0]
 8006072:	e7bd      	b.n	8005ff0 <_scanf_float+0x158>
 8006074:	21fd      	movs	r1, #253	@ 0xfd
 8006076:	1eea      	subs	r2, r5, #3
 8006078:	420a      	tst	r2, r1
 800607a:	d0df      	beq.n	800603c <_scanf_float+0x1a4>
 800607c:	e73d      	b.n	8005efa <_scanf_float+0x62>
 800607e:	2d02      	cmp	r5, #2
 8006080:	d000      	beq.n	8006084 <_scanf_float+0x1ec>
 8006082:	e73a      	b.n	8005efa <_scanf_float+0x62>
 8006084:	2503      	movs	r5, #3
 8006086:	e7b3      	b.n	8005ff0 <_scanf_float+0x158>
 8006088:	2d06      	cmp	r5, #6
 800608a:	d000      	beq.n	800608e <_scanf_float+0x1f6>
 800608c:	e735      	b.n	8005efa <_scanf_float+0x62>
 800608e:	2507      	movs	r5, #7
 8006090:	e7ae      	b.n	8005ff0 <_scanf_float+0x158>
 8006092:	6822      	ldr	r2, [r4, #0]
 8006094:	0591      	lsls	r1, r2, #22
 8006096:	d400      	bmi.n	800609a <_scanf_float+0x202>
 8006098:	e72f      	b.n	8005efa <_scanf_float+0x62>
 800609a:	4943      	ldr	r1, [pc, #268]	@ (80061a8 <_scanf_float+0x310>)
 800609c:	400a      	ands	r2, r1
 800609e:	6022      	str	r2, [r4, #0]
 80060a0:	9a01      	ldr	r2, [sp, #4]
 80060a2:	9205      	str	r2, [sp, #20]
 80060a4:	e7a4      	b.n	8005ff0 <_scanf_float+0x158>
 80060a6:	21a0      	movs	r1, #160	@ 0xa0
 80060a8:	2080      	movs	r0, #128	@ 0x80
 80060aa:	6822      	ldr	r2, [r4, #0]
 80060ac:	00c9      	lsls	r1, r1, #3
 80060ae:	4011      	ands	r1, r2
 80060b0:	00c0      	lsls	r0, r0, #3
 80060b2:	4281      	cmp	r1, r0
 80060b4:	d006      	beq.n	80060c4 <_scanf_float+0x22c>
 80060b6:	4202      	tst	r2, r0
 80060b8:	d100      	bne.n	80060bc <_scanf_float+0x224>
 80060ba:	e71e      	b.n	8005efa <_scanf_float+0x62>
 80060bc:	9901      	ldr	r1, [sp, #4]
 80060be:	2900      	cmp	r1, #0
 80060c0:	d100      	bne.n	80060c4 <_scanf_float+0x22c>
 80060c2:	e0ee      	b.n	80062a2 <_scanf_float+0x40a>
 80060c4:	0591      	lsls	r1, r2, #22
 80060c6:	d404      	bmi.n	80060d2 <_scanf_float+0x23a>
 80060c8:	9901      	ldr	r1, [sp, #4]
 80060ca:	9805      	ldr	r0, [sp, #20]
 80060cc:	9709      	str	r7, [sp, #36]	@ 0x24
 80060ce:	1a09      	subs	r1, r1, r0
 80060d0:	9108      	str	r1, [sp, #32]
 80060d2:	4934      	ldr	r1, [pc, #208]	@ (80061a4 <_scanf_float+0x30c>)
 80060d4:	400a      	ands	r2, r1
 80060d6:	21c0      	movs	r1, #192	@ 0xc0
 80060d8:	0049      	lsls	r1, r1, #1
 80060da:	430a      	orrs	r2, r1
 80060dc:	6022      	str	r2, [r4, #0]
 80060de:	2200      	movs	r2, #0
 80060e0:	9201      	str	r2, [sp, #4]
 80060e2:	e785      	b.n	8005ff0 <_scanf_float+0x158>
 80060e4:	2203      	movs	r2, #3
 80060e6:	e79f      	b.n	8006028 <_scanf_float+0x190>
 80060e8:	23c0      	movs	r3, #192	@ 0xc0
 80060ea:	005b      	lsls	r3, r3, #1
 80060ec:	0031      	movs	r1, r6
 80060ee:	58e3      	ldr	r3, [r4, r3]
 80060f0:	9803      	ldr	r0, [sp, #12]
 80060f2:	4798      	blx	r3
 80060f4:	2800      	cmp	r0, #0
 80060f6:	d100      	bne.n	80060fa <_scanf_float+0x262>
 80060f8:	e6f1      	b.n	8005ede <_scanf_float+0x46>
 80060fa:	e6fe      	b.n	8005efa <_scanf_float+0x62>
 80060fc:	3f01      	subs	r7, #1
 80060fe:	5963      	ldr	r3, [r4, r5]
 8006100:	0032      	movs	r2, r6
 8006102:	7839      	ldrb	r1, [r7, #0]
 8006104:	9803      	ldr	r0, [sp, #12]
 8006106:	4798      	blx	r3
 8006108:	6923      	ldr	r3, [r4, #16]
 800610a:	3b01      	subs	r3, #1
 800610c:	6123      	str	r3, [r4, #16]
 800610e:	e702      	b.n	8005f16 <_scanf_float+0x7e>
 8006110:	1e6b      	subs	r3, r5, #1
 8006112:	2b06      	cmp	r3, #6
 8006114:	d80e      	bhi.n	8006134 <_scanf_float+0x29c>
 8006116:	9702      	str	r7, [sp, #8]
 8006118:	2d02      	cmp	r5, #2
 800611a:	d920      	bls.n	800615e <_scanf_float+0x2c6>
 800611c:	1beb      	subs	r3, r5, r7
 800611e:	b2db      	uxtb	r3, r3
 8006120:	9306      	str	r3, [sp, #24]
 8006122:	9b02      	ldr	r3, [sp, #8]
 8006124:	9a06      	ldr	r2, [sp, #24]
 8006126:	189b      	adds	r3, r3, r2
 8006128:	b2db      	uxtb	r3, r3
 800612a:	2b03      	cmp	r3, #3
 800612c:	d127      	bne.n	800617e <_scanf_float+0x2e6>
 800612e:	3d03      	subs	r5, #3
 8006130:	b2ed      	uxtb	r5, r5
 8006132:	1b7f      	subs	r7, r7, r5
 8006134:	6823      	ldr	r3, [r4, #0]
 8006136:	05da      	lsls	r2, r3, #23
 8006138:	d553      	bpl.n	80061e2 <_scanf_float+0x34a>
 800613a:	055b      	lsls	r3, r3, #21
 800613c:	d536      	bpl.n	80061ac <_scanf_float+0x314>
 800613e:	25be      	movs	r5, #190	@ 0xbe
 8006140:	006d      	lsls	r5, r5, #1
 8006142:	9b04      	ldr	r3, [sp, #16]
 8006144:	429f      	cmp	r7, r3
 8006146:	d800      	bhi.n	800614a <_scanf_float+0x2b2>
 8006148:	e6e9      	b.n	8005f1e <_scanf_float+0x86>
 800614a:	3f01      	subs	r7, #1
 800614c:	5963      	ldr	r3, [r4, r5]
 800614e:	0032      	movs	r2, r6
 8006150:	7839      	ldrb	r1, [r7, #0]
 8006152:	9803      	ldr	r0, [sp, #12]
 8006154:	4798      	blx	r3
 8006156:	6923      	ldr	r3, [r4, #16]
 8006158:	3b01      	subs	r3, #1
 800615a:	6123      	str	r3, [r4, #16]
 800615c:	e7f1      	b.n	8006142 <_scanf_float+0x2aa>
 800615e:	25be      	movs	r5, #190	@ 0xbe
 8006160:	006d      	lsls	r5, r5, #1
 8006162:	9b04      	ldr	r3, [sp, #16]
 8006164:	429f      	cmp	r7, r3
 8006166:	d800      	bhi.n	800616a <_scanf_float+0x2d2>
 8006168:	e6d9      	b.n	8005f1e <_scanf_float+0x86>
 800616a:	3f01      	subs	r7, #1
 800616c:	5963      	ldr	r3, [r4, r5]
 800616e:	0032      	movs	r2, r6
 8006170:	7839      	ldrb	r1, [r7, #0]
 8006172:	9803      	ldr	r0, [sp, #12]
 8006174:	4798      	blx	r3
 8006176:	6923      	ldr	r3, [r4, #16]
 8006178:	3b01      	subs	r3, #1
 800617a:	6123      	str	r3, [r4, #16]
 800617c:	e7f1      	b.n	8006162 <_scanf_float+0x2ca>
 800617e:	9b02      	ldr	r3, [sp, #8]
 8006180:	0032      	movs	r2, r6
 8006182:	3b01      	subs	r3, #1
 8006184:	7819      	ldrb	r1, [r3, #0]
 8006186:	9302      	str	r3, [sp, #8]
 8006188:	23be      	movs	r3, #190	@ 0xbe
 800618a:	005b      	lsls	r3, r3, #1
 800618c:	58e3      	ldr	r3, [r4, r3]
 800618e:	9803      	ldr	r0, [sp, #12]
 8006190:	4798      	blx	r3
 8006192:	6923      	ldr	r3, [r4, #16]
 8006194:	3b01      	subs	r3, #1
 8006196:	6123      	str	r3, [r4, #16]
 8006198:	e7c3      	b.n	8006122 <_scanf_float+0x28a>
 800619a:	46c0      	nop			@ (mov r8, r8)
 800619c:	fffffeff 	.word	0xfffffeff
 80061a0:	fffffe7f 	.word	0xfffffe7f
 80061a4:	fffff87f 	.word	0xfffff87f
 80061a8:	fffffd7f 	.word	0xfffffd7f
 80061ac:	6923      	ldr	r3, [r4, #16]
 80061ae:	1e7d      	subs	r5, r7, #1
 80061b0:	7829      	ldrb	r1, [r5, #0]
 80061b2:	3b01      	subs	r3, #1
 80061b4:	6123      	str	r3, [r4, #16]
 80061b6:	2965      	cmp	r1, #101	@ 0x65
 80061b8:	d00c      	beq.n	80061d4 <_scanf_float+0x33c>
 80061ba:	2945      	cmp	r1, #69	@ 0x45
 80061bc:	d00a      	beq.n	80061d4 <_scanf_float+0x33c>
 80061be:	23be      	movs	r3, #190	@ 0xbe
 80061c0:	005b      	lsls	r3, r3, #1
 80061c2:	58e3      	ldr	r3, [r4, r3]
 80061c4:	0032      	movs	r2, r6
 80061c6:	9803      	ldr	r0, [sp, #12]
 80061c8:	4798      	blx	r3
 80061ca:	6923      	ldr	r3, [r4, #16]
 80061cc:	1ebd      	subs	r5, r7, #2
 80061ce:	3b01      	subs	r3, #1
 80061d0:	7829      	ldrb	r1, [r5, #0]
 80061d2:	6123      	str	r3, [r4, #16]
 80061d4:	23be      	movs	r3, #190	@ 0xbe
 80061d6:	005b      	lsls	r3, r3, #1
 80061d8:	0032      	movs	r2, r6
 80061da:	58e3      	ldr	r3, [r4, r3]
 80061dc:	9803      	ldr	r0, [sp, #12]
 80061de:	4798      	blx	r3
 80061e0:	002f      	movs	r7, r5
 80061e2:	6821      	ldr	r1, [r4, #0]
 80061e4:	2310      	movs	r3, #16
 80061e6:	000a      	movs	r2, r1
 80061e8:	401a      	ands	r2, r3
 80061ea:	4219      	tst	r1, r3
 80061ec:	d001      	beq.n	80061f2 <_scanf_float+0x35a>
 80061ee:	2000      	movs	r0, #0
 80061f0:	e696      	b.n	8005f20 <_scanf_float+0x88>
 80061f2:	21c0      	movs	r1, #192	@ 0xc0
 80061f4:	703a      	strb	r2, [r7, #0]
 80061f6:	6823      	ldr	r3, [r4, #0]
 80061f8:	00c9      	lsls	r1, r1, #3
 80061fa:	400b      	ands	r3, r1
 80061fc:	2180      	movs	r1, #128	@ 0x80
 80061fe:	00c9      	lsls	r1, r1, #3
 8006200:	428b      	cmp	r3, r1
 8006202:	d126      	bne.n	8006252 <_scanf_float+0x3ba>
 8006204:	9b05      	ldr	r3, [sp, #20]
 8006206:	9a01      	ldr	r2, [sp, #4]
 8006208:	4293      	cmp	r3, r2
 800620a:	d00c      	beq.n	8006226 <_scanf_float+0x38e>
 800620c:	1a9a      	subs	r2, r3, r2
 800620e:	0023      	movs	r3, r4
 8006210:	3370      	adds	r3, #112	@ 0x70
 8006212:	33ff      	adds	r3, #255	@ 0xff
 8006214:	429f      	cmp	r7, r3
 8006216:	d302      	bcc.n	800621e <_scanf_float+0x386>
 8006218:	0027      	movs	r7, r4
 800621a:	376f      	adds	r7, #111	@ 0x6f
 800621c:	37ff      	adds	r7, #255	@ 0xff
 800621e:	0038      	movs	r0, r7
 8006220:	4921      	ldr	r1, [pc, #132]	@ (80062a8 <_scanf_float+0x410>)
 8006222:	f000 f99f 	bl	8006564 <siprintf>
 8006226:	2200      	movs	r2, #0
 8006228:	9904      	ldr	r1, [sp, #16]
 800622a:	9803      	ldr	r0, [sp, #12]
 800622c:	f002 fd92 	bl	8008d54 <_strtod_r>
 8006230:	9b07      	ldr	r3, [sp, #28]
 8006232:	6822      	ldr	r2, [r4, #0]
 8006234:	0006      	movs	r6, r0
 8006236:	000f      	movs	r7, r1
 8006238:	681b      	ldr	r3, [r3, #0]
 800623a:	0791      	lsls	r1, r2, #30
 800623c:	d516      	bpl.n	800626c <_scanf_float+0x3d4>
 800623e:	9907      	ldr	r1, [sp, #28]
 8006240:	1d1a      	adds	r2, r3, #4
 8006242:	600a      	str	r2, [r1, #0]
 8006244:	681b      	ldr	r3, [r3, #0]
 8006246:	601e      	str	r6, [r3, #0]
 8006248:	605f      	str	r7, [r3, #4]
 800624a:	68e3      	ldr	r3, [r4, #12]
 800624c:	3301      	adds	r3, #1
 800624e:	60e3      	str	r3, [r4, #12]
 8006250:	e7cd      	b.n	80061ee <_scanf_float+0x356>
 8006252:	9b08      	ldr	r3, [sp, #32]
 8006254:	2b00      	cmp	r3, #0
 8006256:	d0e6      	beq.n	8006226 <_scanf_float+0x38e>
 8006258:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800625a:	9803      	ldr	r0, [sp, #12]
 800625c:	1c59      	adds	r1, r3, #1
 800625e:	230a      	movs	r3, #10
 8006260:	f002 fe0a 	bl	8008e78 <_strtol_r>
 8006264:	9b08      	ldr	r3, [sp, #32]
 8006266:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8006268:	1ac2      	subs	r2, r0, r3
 800626a:	e7d0      	b.n	800620e <_scanf_float+0x376>
 800626c:	1d19      	adds	r1, r3, #4
 800626e:	0752      	lsls	r2, r2, #29
 8006270:	d502      	bpl.n	8006278 <_scanf_float+0x3e0>
 8006272:	9a07      	ldr	r2, [sp, #28]
 8006274:	6011      	str	r1, [r2, #0]
 8006276:	e7e5      	b.n	8006244 <_scanf_float+0x3ac>
 8006278:	9a07      	ldr	r2, [sp, #28]
 800627a:	0030      	movs	r0, r6
 800627c:	6011      	str	r1, [r2, #0]
 800627e:	681d      	ldr	r5, [r3, #0]
 8006280:	0032      	movs	r2, r6
 8006282:	003b      	movs	r3, r7
 8006284:	0039      	movs	r1, r7
 8006286:	f7fc fb09 	bl	800289c <__aeabi_dcmpun>
 800628a:	2800      	cmp	r0, #0
 800628c:	d004      	beq.n	8006298 <_scanf_float+0x400>
 800628e:	4807      	ldr	r0, [pc, #28]	@ (80062ac <_scanf_float+0x414>)
 8006290:	f000 fb08 	bl	80068a4 <nanf>
 8006294:	6028      	str	r0, [r5, #0]
 8006296:	e7d8      	b.n	800624a <_scanf_float+0x3b2>
 8006298:	0030      	movs	r0, r6
 800629a:	0039      	movs	r1, r7
 800629c:	f7fc fbf6 	bl	8002a8c <__aeabi_d2f>
 80062a0:	e7f8      	b.n	8006294 <_scanf_float+0x3fc>
 80062a2:	2300      	movs	r3, #0
 80062a4:	9301      	str	r3, [sp, #4]
 80062a6:	e62f      	b.n	8005f08 <_scanf_float+0x70>
 80062a8:	0800a070 	.word	0x0800a070
 80062ac:	0800a1b1 	.word	0x0800a1b1

080062b0 <std>:
 80062b0:	2300      	movs	r3, #0
 80062b2:	b510      	push	{r4, lr}
 80062b4:	0004      	movs	r4, r0
 80062b6:	6003      	str	r3, [r0, #0]
 80062b8:	6043      	str	r3, [r0, #4]
 80062ba:	6083      	str	r3, [r0, #8]
 80062bc:	8181      	strh	r1, [r0, #12]
 80062be:	6643      	str	r3, [r0, #100]	@ 0x64
 80062c0:	81c2      	strh	r2, [r0, #14]
 80062c2:	6103      	str	r3, [r0, #16]
 80062c4:	6143      	str	r3, [r0, #20]
 80062c6:	6183      	str	r3, [r0, #24]
 80062c8:	0019      	movs	r1, r3
 80062ca:	2208      	movs	r2, #8
 80062cc:	305c      	adds	r0, #92	@ 0x5c
 80062ce:	f000 fa57 	bl	8006780 <memset>
 80062d2:	4b0b      	ldr	r3, [pc, #44]	@ (8006300 <std+0x50>)
 80062d4:	6224      	str	r4, [r4, #32]
 80062d6:	6263      	str	r3, [r4, #36]	@ 0x24
 80062d8:	4b0a      	ldr	r3, [pc, #40]	@ (8006304 <std+0x54>)
 80062da:	62a3      	str	r3, [r4, #40]	@ 0x28
 80062dc:	4b0a      	ldr	r3, [pc, #40]	@ (8006308 <std+0x58>)
 80062de:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80062e0:	4b0a      	ldr	r3, [pc, #40]	@ (800630c <std+0x5c>)
 80062e2:	6323      	str	r3, [r4, #48]	@ 0x30
 80062e4:	4b0a      	ldr	r3, [pc, #40]	@ (8006310 <std+0x60>)
 80062e6:	429c      	cmp	r4, r3
 80062e8:	d005      	beq.n	80062f6 <std+0x46>
 80062ea:	4b0a      	ldr	r3, [pc, #40]	@ (8006314 <std+0x64>)
 80062ec:	429c      	cmp	r4, r3
 80062ee:	d002      	beq.n	80062f6 <std+0x46>
 80062f0:	4b09      	ldr	r3, [pc, #36]	@ (8006318 <std+0x68>)
 80062f2:	429c      	cmp	r4, r3
 80062f4:	d103      	bne.n	80062fe <std+0x4e>
 80062f6:	0020      	movs	r0, r4
 80062f8:	3058      	adds	r0, #88	@ 0x58
 80062fa:	f000 fac5 	bl	8006888 <__retarget_lock_init_recursive>
 80062fe:	bd10      	pop	{r4, pc}
 8006300:	080065a9 	.word	0x080065a9
 8006304:	080065d1 	.word	0x080065d1
 8006308:	08006609 	.word	0x08006609
 800630c:	08006635 	.word	0x08006635
 8006310:	200002d4 	.word	0x200002d4
 8006314:	2000033c 	.word	0x2000033c
 8006318:	200003a4 	.word	0x200003a4

0800631c <stdio_exit_handler>:
 800631c:	b510      	push	{r4, lr}
 800631e:	4a03      	ldr	r2, [pc, #12]	@ (800632c <stdio_exit_handler+0x10>)
 8006320:	4903      	ldr	r1, [pc, #12]	@ (8006330 <stdio_exit_handler+0x14>)
 8006322:	4804      	ldr	r0, [pc, #16]	@ (8006334 <stdio_exit_handler+0x18>)
 8006324:	f000 f86c 	bl	8006400 <_fwalk_sglue>
 8006328:	bd10      	pop	{r4, pc}
 800632a:	46c0      	nop			@ (mov r8, r8)
 800632c:	2000000c 	.word	0x2000000c
 8006330:	08009249 	.word	0x08009249
 8006334:	2000001c 	.word	0x2000001c

08006338 <cleanup_stdio>:
 8006338:	6841      	ldr	r1, [r0, #4]
 800633a:	4b0b      	ldr	r3, [pc, #44]	@ (8006368 <cleanup_stdio+0x30>)
 800633c:	b510      	push	{r4, lr}
 800633e:	0004      	movs	r4, r0
 8006340:	4299      	cmp	r1, r3
 8006342:	d001      	beq.n	8006348 <cleanup_stdio+0x10>
 8006344:	f002 ff80 	bl	8009248 <_fflush_r>
 8006348:	68a1      	ldr	r1, [r4, #8]
 800634a:	4b08      	ldr	r3, [pc, #32]	@ (800636c <cleanup_stdio+0x34>)
 800634c:	4299      	cmp	r1, r3
 800634e:	d002      	beq.n	8006356 <cleanup_stdio+0x1e>
 8006350:	0020      	movs	r0, r4
 8006352:	f002 ff79 	bl	8009248 <_fflush_r>
 8006356:	68e1      	ldr	r1, [r4, #12]
 8006358:	4b05      	ldr	r3, [pc, #20]	@ (8006370 <cleanup_stdio+0x38>)
 800635a:	4299      	cmp	r1, r3
 800635c:	d002      	beq.n	8006364 <cleanup_stdio+0x2c>
 800635e:	0020      	movs	r0, r4
 8006360:	f002 ff72 	bl	8009248 <_fflush_r>
 8006364:	bd10      	pop	{r4, pc}
 8006366:	46c0      	nop			@ (mov r8, r8)
 8006368:	200002d4 	.word	0x200002d4
 800636c:	2000033c 	.word	0x2000033c
 8006370:	200003a4 	.word	0x200003a4

08006374 <global_stdio_init.part.0>:
 8006374:	b510      	push	{r4, lr}
 8006376:	4b09      	ldr	r3, [pc, #36]	@ (800639c <global_stdio_init.part.0+0x28>)
 8006378:	4a09      	ldr	r2, [pc, #36]	@ (80063a0 <global_stdio_init.part.0+0x2c>)
 800637a:	2104      	movs	r1, #4
 800637c:	601a      	str	r2, [r3, #0]
 800637e:	4809      	ldr	r0, [pc, #36]	@ (80063a4 <global_stdio_init.part.0+0x30>)
 8006380:	2200      	movs	r2, #0
 8006382:	f7ff ff95 	bl	80062b0 <std>
 8006386:	2201      	movs	r2, #1
 8006388:	2109      	movs	r1, #9
 800638a:	4807      	ldr	r0, [pc, #28]	@ (80063a8 <global_stdio_init.part.0+0x34>)
 800638c:	f7ff ff90 	bl	80062b0 <std>
 8006390:	2202      	movs	r2, #2
 8006392:	2112      	movs	r1, #18
 8006394:	4805      	ldr	r0, [pc, #20]	@ (80063ac <global_stdio_init.part.0+0x38>)
 8006396:	f7ff ff8b 	bl	80062b0 <std>
 800639a:	bd10      	pop	{r4, pc}
 800639c:	2000040c 	.word	0x2000040c
 80063a0:	0800631d 	.word	0x0800631d
 80063a4:	200002d4 	.word	0x200002d4
 80063a8:	2000033c 	.word	0x2000033c
 80063ac:	200003a4 	.word	0x200003a4

080063b0 <__sfp_lock_acquire>:
 80063b0:	b510      	push	{r4, lr}
 80063b2:	4802      	ldr	r0, [pc, #8]	@ (80063bc <__sfp_lock_acquire+0xc>)
 80063b4:	f000 fa69 	bl	800688a <__retarget_lock_acquire_recursive>
 80063b8:	bd10      	pop	{r4, pc}
 80063ba:	46c0      	nop			@ (mov r8, r8)
 80063bc:	20000415 	.word	0x20000415

080063c0 <__sfp_lock_release>:
 80063c0:	b510      	push	{r4, lr}
 80063c2:	4802      	ldr	r0, [pc, #8]	@ (80063cc <__sfp_lock_release+0xc>)
 80063c4:	f000 fa62 	bl	800688c <__retarget_lock_release_recursive>
 80063c8:	bd10      	pop	{r4, pc}
 80063ca:	46c0      	nop			@ (mov r8, r8)
 80063cc:	20000415 	.word	0x20000415

080063d0 <__sinit>:
 80063d0:	b510      	push	{r4, lr}
 80063d2:	0004      	movs	r4, r0
 80063d4:	f7ff ffec 	bl	80063b0 <__sfp_lock_acquire>
 80063d8:	6a23      	ldr	r3, [r4, #32]
 80063da:	2b00      	cmp	r3, #0
 80063dc:	d002      	beq.n	80063e4 <__sinit+0x14>
 80063de:	f7ff ffef 	bl	80063c0 <__sfp_lock_release>
 80063e2:	bd10      	pop	{r4, pc}
 80063e4:	4b04      	ldr	r3, [pc, #16]	@ (80063f8 <__sinit+0x28>)
 80063e6:	6223      	str	r3, [r4, #32]
 80063e8:	4b04      	ldr	r3, [pc, #16]	@ (80063fc <__sinit+0x2c>)
 80063ea:	681b      	ldr	r3, [r3, #0]
 80063ec:	2b00      	cmp	r3, #0
 80063ee:	d1f6      	bne.n	80063de <__sinit+0xe>
 80063f0:	f7ff ffc0 	bl	8006374 <global_stdio_init.part.0>
 80063f4:	e7f3      	b.n	80063de <__sinit+0xe>
 80063f6:	46c0      	nop			@ (mov r8, r8)
 80063f8:	08006339 	.word	0x08006339
 80063fc:	2000040c 	.word	0x2000040c

08006400 <_fwalk_sglue>:
 8006400:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006402:	0014      	movs	r4, r2
 8006404:	2600      	movs	r6, #0
 8006406:	9000      	str	r0, [sp, #0]
 8006408:	9101      	str	r1, [sp, #4]
 800640a:	68a5      	ldr	r5, [r4, #8]
 800640c:	6867      	ldr	r7, [r4, #4]
 800640e:	3f01      	subs	r7, #1
 8006410:	d504      	bpl.n	800641c <_fwalk_sglue+0x1c>
 8006412:	6824      	ldr	r4, [r4, #0]
 8006414:	2c00      	cmp	r4, #0
 8006416:	d1f8      	bne.n	800640a <_fwalk_sglue+0xa>
 8006418:	0030      	movs	r0, r6
 800641a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800641c:	89ab      	ldrh	r3, [r5, #12]
 800641e:	2b01      	cmp	r3, #1
 8006420:	d908      	bls.n	8006434 <_fwalk_sglue+0x34>
 8006422:	220e      	movs	r2, #14
 8006424:	5eab      	ldrsh	r3, [r5, r2]
 8006426:	3301      	adds	r3, #1
 8006428:	d004      	beq.n	8006434 <_fwalk_sglue+0x34>
 800642a:	0029      	movs	r1, r5
 800642c:	9800      	ldr	r0, [sp, #0]
 800642e:	9b01      	ldr	r3, [sp, #4]
 8006430:	4798      	blx	r3
 8006432:	4306      	orrs	r6, r0
 8006434:	3568      	adds	r5, #104	@ 0x68
 8006436:	e7ea      	b.n	800640e <_fwalk_sglue+0xe>

08006438 <_puts_r>:
 8006438:	6a03      	ldr	r3, [r0, #32]
 800643a:	b570      	push	{r4, r5, r6, lr}
 800643c:	0005      	movs	r5, r0
 800643e:	000e      	movs	r6, r1
 8006440:	6884      	ldr	r4, [r0, #8]
 8006442:	2b00      	cmp	r3, #0
 8006444:	d101      	bne.n	800644a <_puts_r+0x12>
 8006446:	f7ff ffc3 	bl	80063d0 <__sinit>
 800644a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800644c:	07db      	lsls	r3, r3, #31
 800644e:	d405      	bmi.n	800645c <_puts_r+0x24>
 8006450:	89a3      	ldrh	r3, [r4, #12]
 8006452:	059b      	lsls	r3, r3, #22
 8006454:	d402      	bmi.n	800645c <_puts_r+0x24>
 8006456:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8006458:	f000 fa17 	bl	800688a <__retarget_lock_acquire_recursive>
 800645c:	89a3      	ldrh	r3, [r4, #12]
 800645e:	071b      	lsls	r3, r3, #28
 8006460:	d502      	bpl.n	8006468 <_puts_r+0x30>
 8006462:	6923      	ldr	r3, [r4, #16]
 8006464:	2b00      	cmp	r3, #0
 8006466:	d11f      	bne.n	80064a8 <_puts_r+0x70>
 8006468:	0021      	movs	r1, r4
 800646a:	0028      	movs	r0, r5
 800646c:	f000 f92a 	bl	80066c4 <__swsetup_r>
 8006470:	2800      	cmp	r0, #0
 8006472:	d019      	beq.n	80064a8 <_puts_r+0x70>
 8006474:	2501      	movs	r5, #1
 8006476:	426d      	negs	r5, r5
 8006478:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800647a:	07db      	lsls	r3, r3, #31
 800647c:	d405      	bmi.n	800648a <_puts_r+0x52>
 800647e:	89a3      	ldrh	r3, [r4, #12]
 8006480:	059b      	lsls	r3, r3, #22
 8006482:	d402      	bmi.n	800648a <_puts_r+0x52>
 8006484:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8006486:	f000 fa01 	bl	800688c <__retarget_lock_release_recursive>
 800648a:	0028      	movs	r0, r5
 800648c:	bd70      	pop	{r4, r5, r6, pc}
 800648e:	3601      	adds	r6, #1
 8006490:	60a3      	str	r3, [r4, #8]
 8006492:	2b00      	cmp	r3, #0
 8006494:	da04      	bge.n	80064a0 <_puts_r+0x68>
 8006496:	69a2      	ldr	r2, [r4, #24]
 8006498:	429a      	cmp	r2, r3
 800649a:	dc16      	bgt.n	80064ca <_puts_r+0x92>
 800649c:	290a      	cmp	r1, #10
 800649e:	d014      	beq.n	80064ca <_puts_r+0x92>
 80064a0:	6823      	ldr	r3, [r4, #0]
 80064a2:	1c5a      	adds	r2, r3, #1
 80064a4:	6022      	str	r2, [r4, #0]
 80064a6:	7019      	strb	r1, [r3, #0]
 80064a8:	68a3      	ldr	r3, [r4, #8]
 80064aa:	7831      	ldrb	r1, [r6, #0]
 80064ac:	3b01      	subs	r3, #1
 80064ae:	2900      	cmp	r1, #0
 80064b0:	d1ed      	bne.n	800648e <_puts_r+0x56>
 80064b2:	60a3      	str	r3, [r4, #8]
 80064b4:	2b00      	cmp	r3, #0
 80064b6:	da0f      	bge.n	80064d8 <_puts_r+0xa0>
 80064b8:	0022      	movs	r2, r4
 80064ba:	0028      	movs	r0, r5
 80064bc:	310a      	adds	r1, #10
 80064be:	f000 f8bf 	bl	8006640 <__swbuf_r>
 80064c2:	3001      	adds	r0, #1
 80064c4:	d0d6      	beq.n	8006474 <_puts_r+0x3c>
 80064c6:	250a      	movs	r5, #10
 80064c8:	e7d6      	b.n	8006478 <_puts_r+0x40>
 80064ca:	0022      	movs	r2, r4
 80064cc:	0028      	movs	r0, r5
 80064ce:	f000 f8b7 	bl	8006640 <__swbuf_r>
 80064d2:	3001      	adds	r0, #1
 80064d4:	d1e8      	bne.n	80064a8 <_puts_r+0x70>
 80064d6:	e7cd      	b.n	8006474 <_puts_r+0x3c>
 80064d8:	6823      	ldr	r3, [r4, #0]
 80064da:	1c5a      	adds	r2, r3, #1
 80064dc:	6022      	str	r2, [r4, #0]
 80064de:	220a      	movs	r2, #10
 80064e0:	701a      	strb	r2, [r3, #0]
 80064e2:	e7f0      	b.n	80064c6 <_puts_r+0x8e>

080064e4 <puts>:
 80064e4:	b510      	push	{r4, lr}
 80064e6:	4b03      	ldr	r3, [pc, #12]	@ (80064f4 <puts+0x10>)
 80064e8:	0001      	movs	r1, r0
 80064ea:	6818      	ldr	r0, [r3, #0]
 80064ec:	f7ff ffa4 	bl	8006438 <_puts_r>
 80064f0:	bd10      	pop	{r4, pc}
 80064f2:	46c0      	nop			@ (mov r8, r8)
 80064f4:	20000018 	.word	0x20000018

080064f8 <sniprintf>:
 80064f8:	b40c      	push	{r2, r3}
 80064fa:	b530      	push	{r4, r5, lr}
 80064fc:	4b18      	ldr	r3, [pc, #96]	@ (8006560 <sniprintf+0x68>)
 80064fe:	000c      	movs	r4, r1
 8006500:	681d      	ldr	r5, [r3, #0]
 8006502:	b09d      	sub	sp, #116	@ 0x74
 8006504:	2900      	cmp	r1, #0
 8006506:	da08      	bge.n	800651a <sniprintf+0x22>
 8006508:	238b      	movs	r3, #139	@ 0x8b
 800650a:	2001      	movs	r0, #1
 800650c:	602b      	str	r3, [r5, #0]
 800650e:	4240      	negs	r0, r0
 8006510:	b01d      	add	sp, #116	@ 0x74
 8006512:	bc30      	pop	{r4, r5}
 8006514:	bc08      	pop	{r3}
 8006516:	b002      	add	sp, #8
 8006518:	4718      	bx	r3
 800651a:	2382      	movs	r3, #130	@ 0x82
 800651c:	466a      	mov	r2, sp
 800651e:	009b      	lsls	r3, r3, #2
 8006520:	8293      	strh	r3, [r2, #20]
 8006522:	2300      	movs	r3, #0
 8006524:	9002      	str	r0, [sp, #8]
 8006526:	931b      	str	r3, [sp, #108]	@ 0x6c
 8006528:	9006      	str	r0, [sp, #24]
 800652a:	4299      	cmp	r1, r3
 800652c:	d000      	beq.n	8006530 <sniprintf+0x38>
 800652e:	1e4b      	subs	r3, r1, #1
 8006530:	9304      	str	r3, [sp, #16]
 8006532:	9307      	str	r3, [sp, #28]
 8006534:	2301      	movs	r3, #1
 8006536:	466a      	mov	r2, sp
 8006538:	425b      	negs	r3, r3
 800653a:	82d3      	strh	r3, [r2, #22]
 800653c:	0028      	movs	r0, r5
 800653e:	ab21      	add	r3, sp, #132	@ 0x84
 8006540:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8006542:	a902      	add	r1, sp, #8
 8006544:	9301      	str	r3, [sp, #4]
 8006546:	f002 fcfb 	bl	8008f40 <_svfiprintf_r>
 800654a:	1c43      	adds	r3, r0, #1
 800654c:	da01      	bge.n	8006552 <sniprintf+0x5a>
 800654e:	238b      	movs	r3, #139	@ 0x8b
 8006550:	602b      	str	r3, [r5, #0]
 8006552:	2c00      	cmp	r4, #0
 8006554:	d0dc      	beq.n	8006510 <sniprintf+0x18>
 8006556:	2200      	movs	r2, #0
 8006558:	9b02      	ldr	r3, [sp, #8]
 800655a:	701a      	strb	r2, [r3, #0]
 800655c:	e7d8      	b.n	8006510 <sniprintf+0x18>
 800655e:	46c0      	nop			@ (mov r8, r8)
 8006560:	20000018 	.word	0x20000018

08006564 <siprintf>:
 8006564:	b40e      	push	{r1, r2, r3}
 8006566:	b510      	push	{r4, lr}
 8006568:	2400      	movs	r4, #0
 800656a:	490c      	ldr	r1, [pc, #48]	@ (800659c <siprintf+0x38>)
 800656c:	b09d      	sub	sp, #116	@ 0x74
 800656e:	ab1f      	add	r3, sp, #124	@ 0x7c
 8006570:	9002      	str	r0, [sp, #8]
 8006572:	9006      	str	r0, [sp, #24]
 8006574:	9107      	str	r1, [sp, #28]
 8006576:	9104      	str	r1, [sp, #16]
 8006578:	4809      	ldr	r0, [pc, #36]	@ (80065a0 <siprintf+0x3c>)
 800657a:	490a      	ldr	r1, [pc, #40]	@ (80065a4 <siprintf+0x40>)
 800657c:	cb04      	ldmia	r3!, {r2}
 800657e:	9105      	str	r1, [sp, #20]
 8006580:	6800      	ldr	r0, [r0, #0]
 8006582:	a902      	add	r1, sp, #8
 8006584:	9301      	str	r3, [sp, #4]
 8006586:	941b      	str	r4, [sp, #108]	@ 0x6c
 8006588:	f002 fcda 	bl	8008f40 <_svfiprintf_r>
 800658c:	9b02      	ldr	r3, [sp, #8]
 800658e:	701c      	strb	r4, [r3, #0]
 8006590:	b01d      	add	sp, #116	@ 0x74
 8006592:	bc10      	pop	{r4}
 8006594:	bc08      	pop	{r3}
 8006596:	b003      	add	sp, #12
 8006598:	4718      	bx	r3
 800659a:	46c0      	nop			@ (mov r8, r8)
 800659c:	7fffffff 	.word	0x7fffffff
 80065a0:	20000018 	.word	0x20000018
 80065a4:	ffff0208 	.word	0xffff0208

080065a8 <__sread>:
 80065a8:	b570      	push	{r4, r5, r6, lr}
 80065aa:	000c      	movs	r4, r1
 80065ac:	250e      	movs	r5, #14
 80065ae:	5f49      	ldrsh	r1, [r1, r5]
 80065b0:	f000 f918 	bl	80067e4 <_read_r>
 80065b4:	2800      	cmp	r0, #0
 80065b6:	db03      	blt.n	80065c0 <__sread+0x18>
 80065b8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80065ba:	181b      	adds	r3, r3, r0
 80065bc:	6563      	str	r3, [r4, #84]	@ 0x54
 80065be:	bd70      	pop	{r4, r5, r6, pc}
 80065c0:	89a3      	ldrh	r3, [r4, #12]
 80065c2:	4a02      	ldr	r2, [pc, #8]	@ (80065cc <__sread+0x24>)
 80065c4:	4013      	ands	r3, r2
 80065c6:	81a3      	strh	r3, [r4, #12]
 80065c8:	e7f9      	b.n	80065be <__sread+0x16>
 80065ca:	46c0      	nop			@ (mov r8, r8)
 80065cc:	ffffefff 	.word	0xffffefff

080065d0 <__swrite>:
 80065d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80065d2:	001f      	movs	r7, r3
 80065d4:	898b      	ldrh	r3, [r1, #12]
 80065d6:	0005      	movs	r5, r0
 80065d8:	000c      	movs	r4, r1
 80065da:	0016      	movs	r6, r2
 80065dc:	05db      	lsls	r3, r3, #23
 80065de:	d505      	bpl.n	80065ec <__swrite+0x1c>
 80065e0:	230e      	movs	r3, #14
 80065e2:	5ec9      	ldrsh	r1, [r1, r3]
 80065e4:	2200      	movs	r2, #0
 80065e6:	2302      	movs	r3, #2
 80065e8:	f000 f8e8 	bl	80067bc <_lseek_r>
 80065ec:	89a3      	ldrh	r3, [r4, #12]
 80065ee:	4a05      	ldr	r2, [pc, #20]	@ (8006604 <__swrite+0x34>)
 80065f0:	0028      	movs	r0, r5
 80065f2:	4013      	ands	r3, r2
 80065f4:	81a3      	strh	r3, [r4, #12]
 80065f6:	0032      	movs	r2, r6
 80065f8:	230e      	movs	r3, #14
 80065fa:	5ee1      	ldrsh	r1, [r4, r3]
 80065fc:	003b      	movs	r3, r7
 80065fe:	f000 f905 	bl	800680c <_write_r>
 8006602:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006604:	ffffefff 	.word	0xffffefff

08006608 <__sseek>:
 8006608:	b570      	push	{r4, r5, r6, lr}
 800660a:	000c      	movs	r4, r1
 800660c:	250e      	movs	r5, #14
 800660e:	5f49      	ldrsh	r1, [r1, r5]
 8006610:	f000 f8d4 	bl	80067bc <_lseek_r>
 8006614:	89a3      	ldrh	r3, [r4, #12]
 8006616:	1c42      	adds	r2, r0, #1
 8006618:	d103      	bne.n	8006622 <__sseek+0x1a>
 800661a:	4a05      	ldr	r2, [pc, #20]	@ (8006630 <__sseek+0x28>)
 800661c:	4013      	ands	r3, r2
 800661e:	81a3      	strh	r3, [r4, #12]
 8006620:	bd70      	pop	{r4, r5, r6, pc}
 8006622:	2280      	movs	r2, #128	@ 0x80
 8006624:	0152      	lsls	r2, r2, #5
 8006626:	4313      	orrs	r3, r2
 8006628:	81a3      	strh	r3, [r4, #12]
 800662a:	6560      	str	r0, [r4, #84]	@ 0x54
 800662c:	e7f8      	b.n	8006620 <__sseek+0x18>
 800662e:	46c0      	nop			@ (mov r8, r8)
 8006630:	ffffefff 	.word	0xffffefff

08006634 <__sclose>:
 8006634:	b510      	push	{r4, lr}
 8006636:	230e      	movs	r3, #14
 8006638:	5ec9      	ldrsh	r1, [r1, r3]
 800663a:	f000 f8ad 	bl	8006798 <_close_r>
 800663e:	bd10      	pop	{r4, pc}

08006640 <__swbuf_r>:
 8006640:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006642:	0006      	movs	r6, r0
 8006644:	000d      	movs	r5, r1
 8006646:	0014      	movs	r4, r2
 8006648:	2800      	cmp	r0, #0
 800664a:	d004      	beq.n	8006656 <__swbuf_r+0x16>
 800664c:	6a03      	ldr	r3, [r0, #32]
 800664e:	2b00      	cmp	r3, #0
 8006650:	d101      	bne.n	8006656 <__swbuf_r+0x16>
 8006652:	f7ff febd 	bl	80063d0 <__sinit>
 8006656:	69a3      	ldr	r3, [r4, #24]
 8006658:	60a3      	str	r3, [r4, #8]
 800665a:	89a3      	ldrh	r3, [r4, #12]
 800665c:	071b      	lsls	r3, r3, #28
 800665e:	d502      	bpl.n	8006666 <__swbuf_r+0x26>
 8006660:	6923      	ldr	r3, [r4, #16]
 8006662:	2b00      	cmp	r3, #0
 8006664:	d109      	bne.n	800667a <__swbuf_r+0x3a>
 8006666:	0021      	movs	r1, r4
 8006668:	0030      	movs	r0, r6
 800666a:	f000 f82b 	bl	80066c4 <__swsetup_r>
 800666e:	2800      	cmp	r0, #0
 8006670:	d003      	beq.n	800667a <__swbuf_r+0x3a>
 8006672:	2501      	movs	r5, #1
 8006674:	426d      	negs	r5, r5
 8006676:	0028      	movs	r0, r5
 8006678:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800667a:	6923      	ldr	r3, [r4, #16]
 800667c:	6820      	ldr	r0, [r4, #0]
 800667e:	b2ef      	uxtb	r7, r5
 8006680:	1ac0      	subs	r0, r0, r3
 8006682:	6963      	ldr	r3, [r4, #20]
 8006684:	b2ed      	uxtb	r5, r5
 8006686:	4283      	cmp	r3, r0
 8006688:	dc05      	bgt.n	8006696 <__swbuf_r+0x56>
 800668a:	0021      	movs	r1, r4
 800668c:	0030      	movs	r0, r6
 800668e:	f002 fddb 	bl	8009248 <_fflush_r>
 8006692:	2800      	cmp	r0, #0
 8006694:	d1ed      	bne.n	8006672 <__swbuf_r+0x32>
 8006696:	68a3      	ldr	r3, [r4, #8]
 8006698:	3001      	adds	r0, #1
 800669a:	3b01      	subs	r3, #1
 800669c:	60a3      	str	r3, [r4, #8]
 800669e:	6823      	ldr	r3, [r4, #0]
 80066a0:	1c5a      	adds	r2, r3, #1
 80066a2:	6022      	str	r2, [r4, #0]
 80066a4:	701f      	strb	r7, [r3, #0]
 80066a6:	6963      	ldr	r3, [r4, #20]
 80066a8:	4283      	cmp	r3, r0
 80066aa:	d004      	beq.n	80066b6 <__swbuf_r+0x76>
 80066ac:	89a3      	ldrh	r3, [r4, #12]
 80066ae:	07db      	lsls	r3, r3, #31
 80066b0:	d5e1      	bpl.n	8006676 <__swbuf_r+0x36>
 80066b2:	2d0a      	cmp	r5, #10
 80066b4:	d1df      	bne.n	8006676 <__swbuf_r+0x36>
 80066b6:	0021      	movs	r1, r4
 80066b8:	0030      	movs	r0, r6
 80066ba:	f002 fdc5 	bl	8009248 <_fflush_r>
 80066be:	2800      	cmp	r0, #0
 80066c0:	d0d9      	beq.n	8006676 <__swbuf_r+0x36>
 80066c2:	e7d6      	b.n	8006672 <__swbuf_r+0x32>

080066c4 <__swsetup_r>:
 80066c4:	4b2d      	ldr	r3, [pc, #180]	@ (800677c <__swsetup_r+0xb8>)
 80066c6:	b570      	push	{r4, r5, r6, lr}
 80066c8:	0005      	movs	r5, r0
 80066ca:	6818      	ldr	r0, [r3, #0]
 80066cc:	000c      	movs	r4, r1
 80066ce:	2800      	cmp	r0, #0
 80066d0:	d004      	beq.n	80066dc <__swsetup_r+0x18>
 80066d2:	6a03      	ldr	r3, [r0, #32]
 80066d4:	2b00      	cmp	r3, #0
 80066d6:	d101      	bne.n	80066dc <__swsetup_r+0x18>
 80066d8:	f7ff fe7a 	bl	80063d0 <__sinit>
 80066dc:	220c      	movs	r2, #12
 80066de:	5ea3      	ldrsh	r3, [r4, r2]
 80066e0:	071a      	lsls	r2, r3, #28
 80066e2:	d423      	bmi.n	800672c <__swsetup_r+0x68>
 80066e4:	06da      	lsls	r2, r3, #27
 80066e6:	d407      	bmi.n	80066f8 <__swsetup_r+0x34>
 80066e8:	2209      	movs	r2, #9
 80066ea:	602a      	str	r2, [r5, #0]
 80066ec:	2240      	movs	r2, #64	@ 0x40
 80066ee:	2001      	movs	r0, #1
 80066f0:	4313      	orrs	r3, r2
 80066f2:	81a3      	strh	r3, [r4, #12]
 80066f4:	4240      	negs	r0, r0
 80066f6:	e03a      	b.n	800676e <__swsetup_r+0xaa>
 80066f8:	075b      	lsls	r3, r3, #29
 80066fa:	d513      	bpl.n	8006724 <__swsetup_r+0x60>
 80066fc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80066fe:	2900      	cmp	r1, #0
 8006700:	d008      	beq.n	8006714 <__swsetup_r+0x50>
 8006702:	0023      	movs	r3, r4
 8006704:	3344      	adds	r3, #68	@ 0x44
 8006706:	4299      	cmp	r1, r3
 8006708:	d002      	beq.n	8006710 <__swsetup_r+0x4c>
 800670a:	0028      	movs	r0, r5
 800670c:	f000 ff44 	bl	8007598 <_free_r>
 8006710:	2300      	movs	r3, #0
 8006712:	6363      	str	r3, [r4, #52]	@ 0x34
 8006714:	2224      	movs	r2, #36	@ 0x24
 8006716:	89a3      	ldrh	r3, [r4, #12]
 8006718:	4393      	bics	r3, r2
 800671a:	81a3      	strh	r3, [r4, #12]
 800671c:	2300      	movs	r3, #0
 800671e:	6063      	str	r3, [r4, #4]
 8006720:	6923      	ldr	r3, [r4, #16]
 8006722:	6023      	str	r3, [r4, #0]
 8006724:	2308      	movs	r3, #8
 8006726:	89a2      	ldrh	r2, [r4, #12]
 8006728:	4313      	orrs	r3, r2
 800672a:	81a3      	strh	r3, [r4, #12]
 800672c:	6923      	ldr	r3, [r4, #16]
 800672e:	2b00      	cmp	r3, #0
 8006730:	d10b      	bne.n	800674a <__swsetup_r+0x86>
 8006732:	21a0      	movs	r1, #160	@ 0xa0
 8006734:	2280      	movs	r2, #128	@ 0x80
 8006736:	89a3      	ldrh	r3, [r4, #12]
 8006738:	0089      	lsls	r1, r1, #2
 800673a:	0092      	lsls	r2, r2, #2
 800673c:	400b      	ands	r3, r1
 800673e:	4293      	cmp	r3, r2
 8006740:	d003      	beq.n	800674a <__swsetup_r+0x86>
 8006742:	0021      	movs	r1, r4
 8006744:	0028      	movs	r0, r5
 8006746:	f002 fdd5 	bl	80092f4 <__smakebuf_r>
 800674a:	220c      	movs	r2, #12
 800674c:	5ea3      	ldrsh	r3, [r4, r2]
 800674e:	2101      	movs	r1, #1
 8006750:	001a      	movs	r2, r3
 8006752:	400a      	ands	r2, r1
 8006754:	420b      	tst	r3, r1
 8006756:	d00b      	beq.n	8006770 <__swsetup_r+0xac>
 8006758:	2200      	movs	r2, #0
 800675a:	60a2      	str	r2, [r4, #8]
 800675c:	6962      	ldr	r2, [r4, #20]
 800675e:	4252      	negs	r2, r2
 8006760:	61a2      	str	r2, [r4, #24]
 8006762:	2000      	movs	r0, #0
 8006764:	6922      	ldr	r2, [r4, #16]
 8006766:	4282      	cmp	r2, r0
 8006768:	d101      	bne.n	800676e <__swsetup_r+0xaa>
 800676a:	061a      	lsls	r2, r3, #24
 800676c:	d4be      	bmi.n	80066ec <__swsetup_r+0x28>
 800676e:	bd70      	pop	{r4, r5, r6, pc}
 8006770:	0799      	lsls	r1, r3, #30
 8006772:	d400      	bmi.n	8006776 <__swsetup_r+0xb2>
 8006774:	6962      	ldr	r2, [r4, #20]
 8006776:	60a2      	str	r2, [r4, #8]
 8006778:	e7f3      	b.n	8006762 <__swsetup_r+0x9e>
 800677a:	46c0      	nop			@ (mov r8, r8)
 800677c:	20000018 	.word	0x20000018

08006780 <memset>:
 8006780:	0003      	movs	r3, r0
 8006782:	1882      	adds	r2, r0, r2
 8006784:	4293      	cmp	r3, r2
 8006786:	d100      	bne.n	800678a <memset+0xa>
 8006788:	4770      	bx	lr
 800678a:	7019      	strb	r1, [r3, #0]
 800678c:	3301      	adds	r3, #1
 800678e:	e7f9      	b.n	8006784 <memset+0x4>

08006790 <_localeconv_r>:
 8006790:	4800      	ldr	r0, [pc, #0]	@ (8006794 <_localeconv_r+0x4>)
 8006792:	4770      	bx	lr
 8006794:	20000158 	.word	0x20000158

08006798 <_close_r>:
 8006798:	2300      	movs	r3, #0
 800679a:	b570      	push	{r4, r5, r6, lr}
 800679c:	4d06      	ldr	r5, [pc, #24]	@ (80067b8 <_close_r+0x20>)
 800679e:	0004      	movs	r4, r0
 80067a0:	0008      	movs	r0, r1
 80067a2:	602b      	str	r3, [r5, #0]
 80067a4:	f7fc fd21 	bl	80031ea <_close>
 80067a8:	1c43      	adds	r3, r0, #1
 80067aa:	d103      	bne.n	80067b4 <_close_r+0x1c>
 80067ac:	682b      	ldr	r3, [r5, #0]
 80067ae:	2b00      	cmp	r3, #0
 80067b0:	d000      	beq.n	80067b4 <_close_r+0x1c>
 80067b2:	6023      	str	r3, [r4, #0]
 80067b4:	bd70      	pop	{r4, r5, r6, pc}
 80067b6:	46c0      	nop			@ (mov r8, r8)
 80067b8:	20000410 	.word	0x20000410

080067bc <_lseek_r>:
 80067bc:	b570      	push	{r4, r5, r6, lr}
 80067be:	0004      	movs	r4, r0
 80067c0:	0008      	movs	r0, r1
 80067c2:	0011      	movs	r1, r2
 80067c4:	001a      	movs	r2, r3
 80067c6:	2300      	movs	r3, #0
 80067c8:	4d05      	ldr	r5, [pc, #20]	@ (80067e0 <_lseek_r+0x24>)
 80067ca:	602b      	str	r3, [r5, #0]
 80067cc:	f7fc fd2e 	bl	800322c <_lseek>
 80067d0:	1c43      	adds	r3, r0, #1
 80067d2:	d103      	bne.n	80067dc <_lseek_r+0x20>
 80067d4:	682b      	ldr	r3, [r5, #0]
 80067d6:	2b00      	cmp	r3, #0
 80067d8:	d000      	beq.n	80067dc <_lseek_r+0x20>
 80067da:	6023      	str	r3, [r4, #0]
 80067dc:	bd70      	pop	{r4, r5, r6, pc}
 80067de:	46c0      	nop			@ (mov r8, r8)
 80067e0:	20000410 	.word	0x20000410

080067e4 <_read_r>:
 80067e4:	b570      	push	{r4, r5, r6, lr}
 80067e6:	0004      	movs	r4, r0
 80067e8:	0008      	movs	r0, r1
 80067ea:	0011      	movs	r1, r2
 80067ec:	001a      	movs	r2, r3
 80067ee:	2300      	movs	r3, #0
 80067f0:	4d05      	ldr	r5, [pc, #20]	@ (8006808 <_read_r+0x24>)
 80067f2:	602b      	str	r3, [r5, #0]
 80067f4:	f7fc fcc0 	bl	8003178 <_read>
 80067f8:	1c43      	adds	r3, r0, #1
 80067fa:	d103      	bne.n	8006804 <_read_r+0x20>
 80067fc:	682b      	ldr	r3, [r5, #0]
 80067fe:	2b00      	cmp	r3, #0
 8006800:	d000      	beq.n	8006804 <_read_r+0x20>
 8006802:	6023      	str	r3, [r4, #0]
 8006804:	bd70      	pop	{r4, r5, r6, pc}
 8006806:	46c0      	nop			@ (mov r8, r8)
 8006808:	20000410 	.word	0x20000410

0800680c <_write_r>:
 800680c:	b570      	push	{r4, r5, r6, lr}
 800680e:	0004      	movs	r4, r0
 8006810:	0008      	movs	r0, r1
 8006812:	0011      	movs	r1, r2
 8006814:	001a      	movs	r2, r3
 8006816:	2300      	movs	r3, #0
 8006818:	4d05      	ldr	r5, [pc, #20]	@ (8006830 <_write_r+0x24>)
 800681a:	602b      	str	r3, [r5, #0]
 800681c:	f7fc fcc9 	bl	80031b2 <_write>
 8006820:	1c43      	adds	r3, r0, #1
 8006822:	d103      	bne.n	800682c <_write_r+0x20>
 8006824:	682b      	ldr	r3, [r5, #0]
 8006826:	2b00      	cmp	r3, #0
 8006828:	d000      	beq.n	800682c <_write_r+0x20>
 800682a:	6023      	str	r3, [r4, #0]
 800682c:	bd70      	pop	{r4, r5, r6, pc}
 800682e:	46c0      	nop			@ (mov r8, r8)
 8006830:	20000410 	.word	0x20000410

08006834 <__errno>:
 8006834:	4b01      	ldr	r3, [pc, #4]	@ (800683c <__errno+0x8>)
 8006836:	6818      	ldr	r0, [r3, #0]
 8006838:	4770      	bx	lr
 800683a:	46c0      	nop			@ (mov r8, r8)
 800683c:	20000018 	.word	0x20000018

08006840 <__libc_init_array>:
 8006840:	b570      	push	{r4, r5, r6, lr}
 8006842:	2600      	movs	r6, #0
 8006844:	4c0c      	ldr	r4, [pc, #48]	@ (8006878 <__libc_init_array+0x38>)
 8006846:	4d0d      	ldr	r5, [pc, #52]	@ (800687c <__libc_init_array+0x3c>)
 8006848:	1b64      	subs	r4, r4, r5
 800684a:	10a4      	asrs	r4, r4, #2
 800684c:	42a6      	cmp	r6, r4
 800684e:	d109      	bne.n	8006864 <__libc_init_array+0x24>
 8006850:	2600      	movs	r6, #0
 8006852:	f003 fb9b 	bl	8009f8c <_init>
 8006856:	4c0a      	ldr	r4, [pc, #40]	@ (8006880 <__libc_init_array+0x40>)
 8006858:	4d0a      	ldr	r5, [pc, #40]	@ (8006884 <__libc_init_array+0x44>)
 800685a:	1b64      	subs	r4, r4, r5
 800685c:	10a4      	asrs	r4, r4, #2
 800685e:	42a6      	cmp	r6, r4
 8006860:	d105      	bne.n	800686e <__libc_init_array+0x2e>
 8006862:	bd70      	pop	{r4, r5, r6, pc}
 8006864:	00b3      	lsls	r3, r6, #2
 8006866:	58eb      	ldr	r3, [r5, r3]
 8006868:	4798      	blx	r3
 800686a:	3601      	adds	r6, #1
 800686c:	e7ee      	b.n	800684c <__libc_init_array+0xc>
 800686e:	00b3      	lsls	r3, r6, #2
 8006870:	58eb      	ldr	r3, [r5, r3]
 8006872:	4798      	blx	r3
 8006874:	3601      	adds	r6, #1
 8006876:	e7f2      	b.n	800685e <__libc_init_array+0x1e>
 8006878:	0800a464 	.word	0x0800a464
 800687c:	0800a464 	.word	0x0800a464
 8006880:	0800a468 	.word	0x0800a468
 8006884:	0800a464 	.word	0x0800a464

08006888 <__retarget_lock_init_recursive>:
 8006888:	4770      	bx	lr

0800688a <__retarget_lock_acquire_recursive>:
 800688a:	4770      	bx	lr

0800688c <__retarget_lock_release_recursive>:
 800688c:	4770      	bx	lr

0800688e <memchr>:
 800688e:	b2c9      	uxtb	r1, r1
 8006890:	1882      	adds	r2, r0, r2
 8006892:	4290      	cmp	r0, r2
 8006894:	d101      	bne.n	800689a <memchr+0xc>
 8006896:	2000      	movs	r0, #0
 8006898:	4770      	bx	lr
 800689a:	7803      	ldrb	r3, [r0, #0]
 800689c:	428b      	cmp	r3, r1
 800689e:	d0fb      	beq.n	8006898 <memchr+0xa>
 80068a0:	3001      	adds	r0, #1
 80068a2:	e7f6      	b.n	8006892 <memchr+0x4>

080068a4 <nanf>:
 80068a4:	4800      	ldr	r0, [pc, #0]	@ (80068a8 <nanf+0x4>)
 80068a6:	4770      	bx	lr
 80068a8:	7fc00000 	.word	0x7fc00000

080068ac <quorem>:
 80068ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80068ae:	6903      	ldr	r3, [r0, #16]
 80068b0:	690c      	ldr	r4, [r1, #16]
 80068b2:	b089      	sub	sp, #36	@ 0x24
 80068b4:	9003      	str	r0, [sp, #12]
 80068b6:	9106      	str	r1, [sp, #24]
 80068b8:	2000      	movs	r0, #0
 80068ba:	42a3      	cmp	r3, r4
 80068bc:	db63      	blt.n	8006986 <quorem+0xda>
 80068be:	000b      	movs	r3, r1
 80068c0:	3c01      	subs	r4, #1
 80068c2:	3314      	adds	r3, #20
 80068c4:	00a5      	lsls	r5, r4, #2
 80068c6:	9304      	str	r3, [sp, #16]
 80068c8:	195b      	adds	r3, r3, r5
 80068ca:	9305      	str	r3, [sp, #20]
 80068cc:	9b03      	ldr	r3, [sp, #12]
 80068ce:	3314      	adds	r3, #20
 80068d0:	9301      	str	r3, [sp, #4]
 80068d2:	195d      	adds	r5, r3, r5
 80068d4:	9b05      	ldr	r3, [sp, #20]
 80068d6:	682f      	ldr	r7, [r5, #0]
 80068d8:	681e      	ldr	r6, [r3, #0]
 80068da:	0038      	movs	r0, r7
 80068dc:	3601      	adds	r6, #1
 80068de:	0031      	movs	r1, r6
 80068e0:	f7f9 fc2e 	bl	8000140 <__udivsi3>
 80068e4:	9002      	str	r0, [sp, #8]
 80068e6:	42b7      	cmp	r7, r6
 80068e8:	d327      	bcc.n	800693a <quorem+0x8e>
 80068ea:	9b04      	ldr	r3, [sp, #16]
 80068ec:	2700      	movs	r7, #0
 80068ee:	469c      	mov	ip, r3
 80068f0:	9e01      	ldr	r6, [sp, #4]
 80068f2:	9707      	str	r7, [sp, #28]
 80068f4:	4662      	mov	r2, ip
 80068f6:	ca08      	ldmia	r2!, {r3}
 80068f8:	6830      	ldr	r0, [r6, #0]
 80068fa:	4694      	mov	ip, r2
 80068fc:	9a02      	ldr	r2, [sp, #8]
 80068fe:	b299      	uxth	r1, r3
 8006900:	4351      	muls	r1, r2
 8006902:	0c1b      	lsrs	r3, r3, #16
 8006904:	4353      	muls	r3, r2
 8006906:	19c9      	adds	r1, r1, r7
 8006908:	0c0a      	lsrs	r2, r1, #16
 800690a:	189b      	adds	r3, r3, r2
 800690c:	b289      	uxth	r1, r1
 800690e:	b282      	uxth	r2, r0
 8006910:	1a52      	subs	r2, r2, r1
 8006912:	9907      	ldr	r1, [sp, #28]
 8006914:	0c1f      	lsrs	r7, r3, #16
 8006916:	1852      	adds	r2, r2, r1
 8006918:	0c00      	lsrs	r0, r0, #16
 800691a:	b29b      	uxth	r3, r3
 800691c:	1411      	asrs	r1, r2, #16
 800691e:	1ac3      	subs	r3, r0, r3
 8006920:	185b      	adds	r3, r3, r1
 8006922:	1419      	asrs	r1, r3, #16
 8006924:	b292      	uxth	r2, r2
 8006926:	041b      	lsls	r3, r3, #16
 8006928:	431a      	orrs	r2, r3
 800692a:	9b05      	ldr	r3, [sp, #20]
 800692c:	9107      	str	r1, [sp, #28]
 800692e:	c604      	stmia	r6!, {r2}
 8006930:	4563      	cmp	r3, ip
 8006932:	d2df      	bcs.n	80068f4 <quorem+0x48>
 8006934:	682b      	ldr	r3, [r5, #0]
 8006936:	2b00      	cmp	r3, #0
 8006938:	d02b      	beq.n	8006992 <quorem+0xe6>
 800693a:	9906      	ldr	r1, [sp, #24]
 800693c:	9803      	ldr	r0, [sp, #12]
 800693e:	f001 fa03 	bl	8007d48 <__mcmp>
 8006942:	2800      	cmp	r0, #0
 8006944:	db1e      	blt.n	8006984 <quorem+0xd8>
 8006946:	2600      	movs	r6, #0
 8006948:	9d01      	ldr	r5, [sp, #4]
 800694a:	9904      	ldr	r1, [sp, #16]
 800694c:	c901      	ldmia	r1!, {r0}
 800694e:	682b      	ldr	r3, [r5, #0]
 8006950:	b287      	uxth	r7, r0
 8006952:	b29a      	uxth	r2, r3
 8006954:	1bd2      	subs	r2, r2, r7
 8006956:	1992      	adds	r2, r2, r6
 8006958:	0c00      	lsrs	r0, r0, #16
 800695a:	0c1b      	lsrs	r3, r3, #16
 800695c:	1a1b      	subs	r3, r3, r0
 800695e:	1410      	asrs	r0, r2, #16
 8006960:	181b      	adds	r3, r3, r0
 8006962:	141e      	asrs	r6, r3, #16
 8006964:	b292      	uxth	r2, r2
 8006966:	041b      	lsls	r3, r3, #16
 8006968:	431a      	orrs	r2, r3
 800696a:	9b05      	ldr	r3, [sp, #20]
 800696c:	c504      	stmia	r5!, {r2}
 800696e:	428b      	cmp	r3, r1
 8006970:	d2ec      	bcs.n	800694c <quorem+0xa0>
 8006972:	9a01      	ldr	r2, [sp, #4]
 8006974:	00a3      	lsls	r3, r4, #2
 8006976:	18d3      	adds	r3, r2, r3
 8006978:	681a      	ldr	r2, [r3, #0]
 800697a:	2a00      	cmp	r2, #0
 800697c:	d014      	beq.n	80069a8 <quorem+0xfc>
 800697e:	9b02      	ldr	r3, [sp, #8]
 8006980:	3301      	adds	r3, #1
 8006982:	9302      	str	r3, [sp, #8]
 8006984:	9802      	ldr	r0, [sp, #8]
 8006986:	b009      	add	sp, #36	@ 0x24
 8006988:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800698a:	682b      	ldr	r3, [r5, #0]
 800698c:	2b00      	cmp	r3, #0
 800698e:	d104      	bne.n	800699a <quorem+0xee>
 8006990:	3c01      	subs	r4, #1
 8006992:	9b01      	ldr	r3, [sp, #4]
 8006994:	3d04      	subs	r5, #4
 8006996:	42ab      	cmp	r3, r5
 8006998:	d3f7      	bcc.n	800698a <quorem+0xde>
 800699a:	9b03      	ldr	r3, [sp, #12]
 800699c:	611c      	str	r4, [r3, #16]
 800699e:	e7cc      	b.n	800693a <quorem+0x8e>
 80069a0:	681a      	ldr	r2, [r3, #0]
 80069a2:	2a00      	cmp	r2, #0
 80069a4:	d104      	bne.n	80069b0 <quorem+0x104>
 80069a6:	3c01      	subs	r4, #1
 80069a8:	9a01      	ldr	r2, [sp, #4]
 80069aa:	3b04      	subs	r3, #4
 80069ac:	429a      	cmp	r2, r3
 80069ae:	d3f7      	bcc.n	80069a0 <quorem+0xf4>
 80069b0:	9b03      	ldr	r3, [sp, #12]
 80069b2:	611c      	str	r4, [r3, #16]
 80069b4:	e7e3      	b.n	800697e <quorem+0xd2>
	...

080069b8 <_dtoa_r>:
 80069b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80069ba:	0014      	movs	r4, r2
 80069bc:	001d      	movs	r5, r3
 80069be:	69c6      	ldr	r6, [r0, #28]
 80069c0:	b09d      	sub	sp, #116	@ 0x74
 80069c2:	940a      	str	r4, [sp, #40]	@ 0x28
 80069c4:	950b      	str	r5, [sp, #44]	@ 0x2c
 80069c6:	9f25      	ldr	r7, [sp, #148]	@ 0x94
 80069c8:	9003      	str	r0, [sp, #12]
 80069ca:	2e00      	cmp	r6, #0
 80069cc:	d10f      	bne.n	80069ee <_dtoa_r+0x36>
 80069ce:	2010      	movs	r0, #16
 80069d0:	f000 fe2c 	bl	800762c <malloc>
 80069d4:	9b03      	ldr	r3, [sp, #12]
 80069d6:	1e02      	subs	r2, r0, #0
 80069d8:	61d8      	str	r0, [r3, #28]
 80069da:	d104      	bne.n	80069e6 <_dtoa_r+0x2e>
 80069dc:	21ef      	movs	r1, #239	@ 0xef
 80069de:	4bc7      	ldr	r3, [pc, #796]	@ (8006cfc <_dtoa_r+0x344>)
 80069e0:	48c7      	ldr	r0, [pc, #796]	@ (8006d00 <_dtoa_r+0x348>)
 80069e2:	f002 fd31 	bl	8009448 <__assert_func>
 80069e6:	6046      	str	r6, [r0, #4]
 80069e8:	6086      	str	r6, [r0, #8]
 80069ea:	6006      	str	r6, [r0, #0]
 80069ec:	60c6      	str	r6, [r0, #12]
 80069ee:	9b03      	ldr	r3, [sp, #12]
 80069f0:	69db      	ldr	r3, [r3, #28]
 80069f2:	6819      	ldr	r1, [r3, #0]
 80069f4:	2900      	cmp	r1, #0
 80069f6:	d00b      	beq.n	8006a10 <_dtoa_r+0x58>
 80069f8:	685a      	ldr	r2, [r3, #4]
 80069fa:	2301      	movs	r3, #1
 80069fc:	4093      	lsls	r3, r2
 80069fe:	604a      	str	r2, [r1, #4]
 8006a00:	608b      	str	r3, [r1, #8]
 8006a02:	9803      	ldr	r0, [sp, #12]
 8006a04:	f000 ff12 	bl	800782c <_Bfree>
 8006a08:	2200      	movs	r2, #0
 8006a0a:	9b03      	ldr	r3, [sp, #12]
 8006a0c:	69db      	ldr	r3, [r3, #28]
 8006a0e:	601a      	str	r2, [r3, #0]
 8006a10:	2d00      	cmp	r5, #0
 8006a12:	da1e      	bge.n	8006a52 <_dtoa_r+0x9a>
 8006a14:	2301      	movs	r3, #1
 8006a16:	603b      	str	r3, [r7, #0]
 8006a18:	006b      	lsls	r3, r5, #1
 8006a1a:	085b      	lsrs	r3, r3, #1
 8006a1c:	930b      	str	r3, [sp, #44]	@ 0x2c
 8006a1e:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8006a20:	4bb8      	ldr	r3, [pc, #736]	@ (8006d04 <_dtoa_r+0x34c>)
 8006a22:	4ab8      	ldr	r2, [pc, #736]	@ (8006d04 <_dtoa_r+0x34c>)
 8006a24:	403b      	ands	r3, r7
 8006a26:	4293      	cmp	r3, r2
 8006a28:	d116      	bne.n	8006a58 <_dtoa_r+0xa0>
 8006a2a:	4bb7      	ldr	r3, [pc, #732]	@ (8006d08 <_dtoa_r+0x350>)
 8006a2c:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8006a2e:	6013      	str	r3, [r2, #0]
 8006a30:	033b      	lsls	r3, r7, #12
 8006a32:	0b1b      	lsrs	r3, r3, #12
 8006a34:	4323      	orrs	r3, r4
 8006a36:	d101      	bne.n	8006a3c <_dtoa_r+0x84>
 8006a38:	f000 fd80 	bl	800753c <_dtoa_r+0xb84>
 8006a3c:	4bb3      	ldr	r3, [pc, #716]	@ (8006d0c <_dtoa_r+0x354>)
 8006a3e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8006a40:	9308      	str	r3, [sp, #32]
 8006a42:	2a00      	cmp	r2, #0
 8006a44:	d002      	beq.n	8006a4c <_dtoa_r+0x94>
 8006a46:	4bb2      	ldr	r3, [pc, #712]	@ (8006d10 <_dtoa_r+0x358>)
 8006a48:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8006a4a:	6013      	str	r3, [r2, #0]
 8006a4c:	9808      	ldr	r0, [sp, #32]
 8006a4e:	b01d      	add	sp, #116	@ 0x74
 8006a50:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006a52:	2300      	movs	r3, #0
 8006a54:	603b      	str	r3, [r7, #0]
 8006a56:	e7e2      	b.n	8006a1e <_dtoa_r+0x66>
 8006a58:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8006a5a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006a5c:	9212      	str	r2, [sp, #72]	@ 0x48
 8006a5e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8006a60:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8006a62:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8006a64:	2200      	movs	r2, #0
 8006a66:	2300      	movs	r3, #0
 8006a68:	f7f9 fcf0 	bl	800044c <__aeabi_dcmpeq>
 8006a6c:	1e06      	subs	r6, r0, #0
 8006a6e:	d00b      	beq.n	8006a88 <_dtoa_r+0xd0>
 8006a70:	2301      	movs	r3, #1
 8006a72:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8006a74:	6013      	str	r3, [r2, #0]
 8006a76:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8006a78:	2b00      	cmp	r3, #0
 8006a7a:	d002      	beq.n	8006a82 <_dtoa_r+0xca>
 8006a7c:	4ba5      	ldr	r3, [pc, #660]	@ (8006d14 <_dtoa_r+0x35c>)
 8006a7e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8006a80:	6013      	str	r3, [r2, #0]
 8006a82:	4ba5      	ldr	r3, [pc, #660]	@ (8006d18 <_dtoa_r+0x360>)
 8006a84:	9308      	str	r3, [sp, #32]
 8006a86:	e7e1      	b.n	8006a4c <_dtoa_r+0x94>
 8006a88:	ab1a      	add	r3, sp, #104	@ 0x68
 8006a8a:	9301      	str	r3, [sp, #4]
 8006a8c:	ab1b      	add	r3, sp, #108	@ 0x6c
 8006a8e:	9300      	str	r3, [sp, #0]
 8006a90:	9803      	ldr	r0, [sp, #12]
 8006a92:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8006a94:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8006a96:	f001 fa79 	bl	8007f8c <__d2b>
 8006a9a:	007a      	lsls	r2, r7, #1
 8006a9c:	9005      	str	r0, [sp, #20]
 8006a9e:	0d52      	lsrs	r2, r2, #21
 8006aa0:	d100      	bne.n	8006aa4 <_dtoa_r+0xec>
 8006aa2:	e07b      	b.n	8006b9c <_dtoa_r+0x1e4>
 8006aa4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8006aa6:	9618      	str	r6, [sp, #96]	@ 0x60
 8006aa8:	0319      	lsls	r1, r3, #12
 8006aaa:	4b9c      	ldr	r3, [pc, #624]	@ (8006d1c <_dtoa_r+0x364>)
 8006aac:	0b09      	lsrs	r1, r1, #12
 8006aae:	430b      	orrs	r3, r1
 8006ab0:	499b      	ldr	r1, [pc, #620]	@ (8006d20 <_dtoa_r+0x368>)
 8006ab2:	1857      	adds	r7, r2, r1
 8006ab4:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8006ab6:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8006ab8:	0019      	movs	r1, r3
 8006aba:	2200      	movs	r2, #0
 8006abc:	4b99      	ldr	r3, [pc, #612]	@ (8006d24 <_dtoa_r+0x36c>)
 8006abe:	f7fb fae3 	bl	8002088 <__aeabi_dsub>
 8006ac2:	4a99      	ldr	r2, [pc, #612]	@ (8006d28 <_dtoa_r+0x370>)
 8006ac4:	4b99      	ldr	r3, [pc, #612]	@ (8006d2c <_dtoa_r+0x374>)
 8006ac6:	f7fa fff9 	bl	8001abc <__aeabi_dmul>
 8006aca:	4a99      	ldr	r2, [pc, #612]	@ (8006d30 <_dtoa_r+0x378>)
 8006acc:	4b99      	ldr	r3, [pc, #612]	@ (8006d34 <_dtoa_r+0x37c>)
 8006ace:	f7f9 fff5 	bl	8000abc <__aeabi_dadd>
 8006ad2:	0004      	movs	r4, r0
 8006ad4:	0038      	movs	r0, r7
 8006ad6:	000d      	movs	r5, r1
 8006ad8:	f7fb ff3e 	bl	8002958 <__aeabi_i2d>
 8006adc:	4a96      	ldr	r2, [pc, #600]	@ (8006d38 <_dtoa_r+0x380>)
 8006ade:	4b97      	ldr	r3, [pc, #604]	@ (8006d3c <_dtoa_r+0x384>)
 8006ae0:	f7fa ffec 	bl	8001abc <__aeabi_dmul>
 8006ae4:	0002      	movs	r2, r0
 8006ae6:	000b      	movs	r3, r1
 8006ae8:	0020      	movs	r0, r4
 8006aea:	0029      	movs	r1, r5
 8006aec:	f7f9 ffe6 	bl	8000abc <__aeabi_dadd>
 8006af0:	0004      	movs	r4, r0
 8006af2:	000d      	movs	r5, r1
 8006af4:	f7fb fef4 	bl	80028e0 <__aeabi_d2iz>
 8006af8:	2200      	movs	r2, #0
 8006afa:	9004      	str	r0, [sp, #16]
 8006afc:	2300      	movs	r3, #0
 8006afe:	0020      	movs	r0, r4
 8006b00:	0029      	movs	r1, r5
 8006b02:	f7f9 fca9 	bl	8000458 <__aeabi_dcmplt>
 8006b06:	2800      	cmp	r0, #0
 8006b08:	d00b      	beq.n	8006b22 <_dtoa_r+0x16a>
 8006b0a:	9804      	ldr	r0, [sp, #16]
 8006b0c:	f7fb ff24 	bl	8002958 <__aeabi_i2d>
 8006b10:	002b      	movs	r3, r5
 8006b12:	0022      	movs	r2, r4
 8006b14:	f7f9 fc9a 	bl	800044c <__aeabi_dcmpeq>
 8006b18:	4243      	negs	r3, r0
 8006b1a:	4158      	adcs	r0, r3
 8006b1c:	9b04      	ldr	r3, [sp, #16]
 8006b1e:	1a1b      	subs	r3, r3, r0
 8006b20:	9304      	str	r3, [sp, #16]
 8006b22:	2301      	movs	r3, #1
 8006b24:	9315      	str	r3, [sp, #84]	@ 0x54
 8006b26:	9b04      	ldr	r3, [sp, #16]
 8006b28:	2b16      	cmp	r3, #22
 8006b2a:	d810      	bhi.n	8006b4e <_dtoa_r+0x196>
 8006b2c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8006b2e:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8006b30:	9a04      	ldr	r2, [sp, #16]
 8006b32:	4b83      	ldr	r3, [pc, #524]	@ (8006d40 <_dtoa_r+0x388>)
 8006b34:	00d2      	lsls	r2, r2, #3
 8006b36:	189b      	adds	r3, r3, r2
 8006b38:	681a      	ldr	r2, [r3, #0]
 8006b3a:	685b      	ldr	r3, [r3, #4]
 8006b3c:	f7f9 fc8c 	bl	8000458 <__aeabi_dcmplt>
 8006b40:	2800      	cmp	r0, #0
 8006b42:	d047      	beq.n	8006bd4 <_dtoa_r+0x21c>
 8006b44:	9b04      	ldr	r3, [sp, #16]
 8006b46:	3b01      	subs	r3, #1
 8006b48:	9304      	str	r3, [sp, #16]
 8006b4a:	2300      	movs	r3, #0
 8006b4c:	9315      	str	r3, [sp, #84]	@ 0x54
 8006b4e:	2200      	movs	r2, #0
 8006b50:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8006b52:	9206      	str	r2, [sp, #24]
 8006b54:	1bdb      	subs	r3, r3, r7
 8006b56:	1e5a      	subs	r2, r3, #1
 8006b58:	d53e      	bpl.n	8006bd8 <_dtoa_r+0x220>
 8006b5a:	2201      	movs	r2, #1
 8006b5c:	1ad3      	subs	r3, r2, r3
 8006b5e:	9306      	str	r3, [sp, #24]
 8006b60:	2300      	movs	r3, #0
 8006b62:	930d      	str	r3, [sp, #52]	@ 0x34
 8006b64:	9b04      	ldr	r3, [sp, #16]
 8006b66:	2b00      	cmp	r3, #0
 8006b68:	db38      	blt.n	8006bdc <_dtoa_r+0x224>
 8006b6a:	9a04      	ldr	r2, [sp, #16]
 8006b6c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8006b6e:	4694      	mov	ip, r2
 8006b70:	4463      	add	r3, ip
 8006b72:	930d      	str	r3, [sp, #52]	@ 0x34
 8006b74:	2300      	movs	r3, #0
 8006b76:	9214      	str	r2, [sp, #80]	@ 0x50
 8006b78:	930f      	str	r3, [sp, #60]	@ 0x3c
 8006b7a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8006b7c:	2401      	movs	r4, #1
 8006b7e:	2b09      	cmp	r3, #9
 8006b80:	d862      	bhi.n	8006c48 <_dtoa_r+0x290>
 8006b82:	2b05      	cmp	r3, #5
 8006b84:	dd02      	ble.n	8006b8c <_dtoa_r+0x1d4>
 8006b86:	2400      	movs	r4, #0
 8006b88:	3b04      	subs	r3, #4
 8006b8a:	9322      	str	r3, [sp, #136]	@ 0x88
 8006b8c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8006b8e:	1e98      	subs	r0, r3, #2
 8006b90:	2803      	cmp	r0, #3
 8006b92:	d863      	bhi.n	8006c5c <_dtoa_r+0x2a4>
 8006b94:	f7f9 fac0 	bl	8000118 <__gnu_thumb1_case_uqi>
 8006b98:	2b385654 	.word	0x2b385654
 8006b9c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8006b9e:	9e1a      	ldr	r6, [sp, #104]	@ 0x68
 8006ba0:	18f6      	adds	r6, r6, r3
 8006ba2:	4b68      	ldr	r3, [pc, #416]	@ (8006d44 <_dtoa_r+0x38c>)
 8006ba4:	18f2      	adds	r2, r6, r3
 8006ba6:	2a20      	cmp	r2, #32
 8006ba8:	dd0f      	ble.n	8006bca <_dtoa_r+0x212>
 8006baa:	2340      	movs	r3, #64	@ 0x40
 8006bac:	1a9b      	subs	r3, r3, r2
 8006bae:	409f      	lsls	r7, r3
 8006bb0:	4b65      	ldr	r3, [pc, #404]	@ (8006d48 <_dtoa_r+0x390>)
 8006bb2:	0038      	movs	r0, r7
 8006bb4:	18f3      	adds	r3, r6, r3
 8006bb6:	40dc      	lsrs	r4, r3
 8006bb8:	4320      	orrs	r0, r4
 8006bba:	f7fb fefb 	bl	80029b4 <__aeabi_ui2d>
 8006bbe:	2201      	movs	r2, #1
 8006bc0:	4b62      	ldr	r3, [pc, #392]	@ (8006d4c <_dtoa_r+0x394>)
 8006bc2:	1e77      	subs	r7, r6, #1
 8006bc4:	18cb      	adds	r3, r1, r3
 8006bc6:	9218      	str	r2, [sp, #96]	@ 0x60
 8006bc8:	e776      	b.n	8006ab8 <_dtoa_r+0x100>
 8006bca:	2320      	movs	r3, #32
 8006bcc:	0020      	movs	r0, r4
 8006bce:	1a9b      	subs	r3, r3, r2
 8006bd0:	4098      	lsls	r0, r3
 8006bd2:	e7f2      	b.n	8006bba <_dtoa_r+0x202>
 8006bd4:	9015      	str	r0, [sp, #84]	@ 0x54
 8006bd6:	e7ba      	b.n	8006b4e <_dtoa_r+0x196>
 8006bd8:	920d      	str	r2, [sp, #52]	@ 0x34
 8006bda:	e7c3      	b.n	8006b64 <_dtoa_r+0x1ac>
 8006bdc:	9b06      	ldr	r3, [sp, #24]
 8006bde:	9a04      	ldr	r2, [sp, #16]
 8006be0:	1a9b      	subs	r3, r3, r2
 8006be2:	9306      	str	r3, [sp, #24]
 8006be4:	4253      	negs	r3, r2
 8006be6:	930f      	str	r3, [sp, #60]	@ 0x3c
 8006be8:	2300      	movs	r3, #0
 8006bea:	9314      	str	r3, [sp, #80]	@ 0x50
 8006bec:	e7c5      	b.n	8006b7a <_dtoa_r+0x1c2>
 8006bee:	2301      	movs	r3, #1
 8006bf0:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8006bf2:	9310      	str	r3, [sp, #64]	@ 0x40
 8006bf4:	4694      	mov	ip, r2
 8006bf6:	9b04      	ldr	r3, [sp, #16]
 8006bf8:	4463      	add	r3, ip
 8006bfa:	930e      	str	r3, [sp, #56]	@ 0x38
 8006bfc:	3301      	adds	r3, #1
 8006bfe:	9309      	str	r3, [sp, #36]	@ 0x24
 8006c00:	2b00      	cmp	r3, #0
 8006c02:	dc08      	bgt.n	8006c16 <_dtoa_r+0x25e>
 8006c04:	2301      	movs	r3, #1
 8006c06:	e006      	b.n	8006c16 <_dtoa_r+0x25e>
 8006c08:	2301      	movs	r3, #1
 8006c0a:	9310      	str	r3, [sp, #64]	@ 0x40
 8006c0c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8006c0e:	2b00      	cmp	r3, #0
 8006c10:	dd28      	ble.n	8006c64 <_dtoa_r+0x2ac>
 8006c12:	930e      	str	r3, [sp, #56]	@ 0x38
 8006c14:	9309      	str	r3, [sp, #36]	@ 0x24
 8006c16:	9a03      	ldr	r2, [sp, #12]
 8006c18:	2100      	movs	r1, #0
 8006c1a:	69d0      	ldr	r0, [r2, #28]
 8006c1c:	2204      	movs	r2, #4
 8006c1e:	0015      	movs	r5, r2
 8006c20:	3514      	adds	r5, #20
 8006c22:	429d      	cmp	r5, r3
 8006c24:	d923      	bls.n	8006c6e <_dtoa_r+0x2b6>
 8006c26:	6041      	str	r1, [r0, #4]
 8006c28:	9803      	ldr	r0, [sp, #12]
 8006c2a:	f000 fdbb 	bl	80077a4 <_Balloc>
 8006c2e:	9008      	str	r0, [sp, #32]
 8006c30:	2800      	cmp	r0, #0
 8006c32:	d11f      	bne.n	8006c74 <_dtoa_r+0x2bc>
 8006c34:	21b0      	movs	r1, #176	@ 0xb0
 8006c36:	4b46      	ldr	r3, [pc, #280]	@ (8006d50 <_dtoa_r+0x398>)
 8006c38:	4831      	ldr	r0, [pc, #196]	@ (8006d00 <_dtoa_r+0x348>)
 8006c3a:	9a08      	ldr	r2, [sp, #32]
 8006c3c:	31ff      	adds	r1, #255	@ 0xff
 8006c3e:	e6d0      	b.n	80069e2 <_dtoa_r+0x2a>
 8006c40:	2300      	movs	r3, #0
 8006c42:	e7e2      	b.n	8006c0a <_dtoa_r+0x252>
 8006c44:	2300      	movs	r3, #0
 8006c46:	e7d3      	b.n	8006bf0 <_dtoa_r+0x238>
 8006c48:	2300      	movs	r3, #0
 8006c4a:	9410      	str	r4, [sp, #64]	@ 0x40
 8006c4c:	9322      	str	r3, [sp, #136]	@ 0x88
 8006c4e:	3b01      	subs	r3, #1
 8006c50:	2200      	movs	r2, #0
 8006c52:	930e      	str	r3, [sp, #56]	@ 0x38
 8006c54:	9309      	str	r3, [sp, #36]	@ 0x24
 8006c56:	3313      	adds	r3, #19
 8006c58:	9223      	str	r2, [sp, #140]	@ 0x8c
 8006c5a:	e7dc      	b.n	8006c16 <_dtoa_r+0x25e>
 8006c5c:	2301      	movs	r3, #1
 8006c5e:	9310      	str	r3, [sp, #64]	@ 0x40
 8006c60:	3b02      	subs	r3, #2
 8006c62:	e7f5      	b.n	8006c50 <_dtoa_r+0x298>
 8006c64:	2301      	movs	r3, #1
 8006c66:	001a      	movs	r2, r3
 8006c68:	930e      	str	r3, [sp, #56]	@ 0x38
 8006c6a:	9309      	str	r3, [sp, #36]	@ 0x24
 8006c6c:	e7f4      	b.n	8006c58 <_dtoa_r+0x2a0>
 8006c6e:	3101      	adds	r1, #1
 8006c70:	0052      	lsls	r2, r2, #1
 8006c72:	e7d4      	b.n	8006c1e <_dtoa_r+0x266>
 8006c74:	9b03      	ldr	r3, [sp, #12]
 8006c76:	9a08      	ldr	r2, [sp, #32]
 8006c78:	69db      	ldr	r3, [r3, #28]
 8006c7a:	601a      	str	r2, [r3, #0]
 8006c7c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006c7e:	2b0e      	cmp	r3, #14
 8006c80:	d900      	bls.n	8006c84 <_dtoa_r+0x2cc>
 8006c82:	e0d6      	b.n	8006e32 <_dtoa_r+0x47a>
 8006c84:	2c00      	cmp	r4, #0
 8006c86:	d100      	bne.n	8006c8a <_dtoa_r+0x2d2>
 8006c88:	e0d3      	b.n	8006e32 <_dtoa_r+0x47a>
 8006c8a:	9b04      	ldr	r3, [sp, #16]
 8006c8c:	2b00      	cmp	r3, #0
 8006c8e:	dd63      	ble.n	8006d58 <_dtoa_r+0x3a0>
 8006c90:	210f      	movs	r1, #15
 8006c92:	9a04      	ldr	r2, [sp, #16]
 8006c94:	4b2a      	ldr	r3, [pc, #168]	@ (8006d40 <_dtoa_r+0x388>)
 8006c96:	400a      	ands	r2, r1
 8006c98:	00d2      	lsls	r2, r2, #3
 8006c9a:	189b      	adds	r3, r3, r2
 8006c9c:	681e      	ldr	r6, [r3, #0]
 8006c9e:	685f      	ldr	r7, [r3, #4]
 8006ca0:	9b04      	ldr	r3, [sp, #16]
 8006ca2:	2402      	movs	r4, #2
 8006ca4:	111d      	asrs	r5, r3, #4
 8006ca6:	05db      	lsls	r3, r3, #23
 8006ca8:	d50a      	bpl.n	8006cc0 <_dtoa_r+0x308>
 8006caa:	4b2a      	ldr	r3, [pc, #168]	@ (8006d54 <_dtoa_r+0x39c>)
 8006cac:	400d      	ands	r5, r1
 8006cae:	6a1a      	ldr	r2, [r3, #32]
 8006cb0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006cb2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8006cb4:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8006cb6:	f7fa fac7 	bl	8001248 <__aeabi_ddiv>
 8006cba:	900a      	str	r0, [sp, #40]	@ 0x28
 8006cbc:	910b      	str	r1, [sp, #44]	@ 0x2c
 8006cbe:	3401      	adds	r4, #1
 8006cc0:	4b24      	ldr	r3, [pc, #144]	@ (8006d54 <_dtoa_r+0x39c>)
 8006cc2:	930c      	str	r3, [sp, #48]	@ 0x30
 8006cc4:	2d00      	cmp	r5, #0
 8006cc6:	d108      	bne.n	8006cda <_dtoa_r+0x322>
 8006cc8:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8006cca:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8006ccc:	0032      	movs	r2, r6
 8006cce:	003b      	movs	r3, r7
 8006cd0:	f7fa faba 	bl	8001248 <__aeabi_ddiv>
 8006cd4:	900a      	str	r0, [sp, #40]	@ 0x28
 8006cd6:	910b      	str	r1, [sp, #44]	@ 0x2c
 8006cd8:	e059      	b.n	8006d8e <_dtoa_r+0x3d6>
 8006cda:	2301      	movs	r3, #1
 8006cdc:	421d      	tst	r5, r3
 8006cde:	d009      	beq.n	8006cf4 <_dtoa_r+0x33c>
 8006ce0:	18e4      	adds	r4, r4, r3
 8006ce2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8006ce4:	0030      	movs	r0, r6
 8006ce6:	681a      	ldr	r2, [r3, #0]
 8006ce8:	685b      	ldr	r3, [r3, #4]
 8006cea:	0039      	movs	r1, r7
 8006cec:	f7fa fee6 	bl	8001abc <__aeabi_dmul>
 8006cf0:	0006      	movs	r6, r0
 8006cf2:	000f      	movs	r7, r1
 8006cf4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8006cf6:	106d      	asrs	r5, r5, #1
 8006cf8:	3308      	adds	r3, #8
 8006cfa:	e7e2      	b.n	8006cc2 <_dtoa_r+0x30a>
 8006cfc:	0800a082 	.word	0x0800a082
 8006d00:	0800a099 	.word	0x0800a099
 8006d04:	7ff00000 	.word	0x7ff00000
 8006d08:	0000270f 	.word	0x0000270f
 8006d0c:	0800a07e 	.word	0x0800a07e
 8006d10:	0800a081 	.word	0x0800a081
 8006d14:	0800a04d 	.word	0x0800a04d
 8006d18:	0800a04c 	.word	0x0800a04c
 8006d1c:	3ff00000 	.word	0x3ff00000
 8006d20:	fffffc01 	.word	0xfffffc01
 8006d24:	3ff80000 	.word	0x3ff80000
 8006d28:	636f4361 	.word	0x636f4361
 8006d2c:	3fd287a7 	.word	0x3fd287a7
 8006d30:	8b60c8b3 	.word	0x8b60c8b3
 8006d34:	3fc68a28 	.word	0x3fc68a28
 8006d38:	509f79fb 	.word	0x509f79fb
 8006d3c:	3fd34413 	.word	0x3fd34413
 8006d40:	0800a248 	.word	0x0800a248
 8006d44:	00000432 	.word	0x00000432
 8006d48:	00000412 	.word	0x00000412
 8006d4c:	fe100000 	.word	0xfe100000
 8006d50:	0800a0f1 	.word	0x0800a0f1
 8006d54:	0800a220 	.word	0x0800a220
 8006d58:	9b04      	ldr	r3, [sp, #16]
 8006d5a:	2402      	movs	r4, #2
 8006d5c:	2b00      	cmp	r3, #0
 8006d5e:	d016      	beq.n	8006d8e <_dtoa_r+0x3d6>
 8006d60:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8006d62:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8006d64:	220f      	movs	r2, #15
 8006d66:	425d      	negs	r5, r3
 8006d68:	402a      	ands	r2, r5
 8006d6a:	4bd5      	ldr	r3, [pc, #852]	@ (80070c0 <_dtoa_r+0x708>)
 8006d6c:	00d2      	lsls	r2, r2, #3
 8006d6e:	189b      	adds	r3, r3, r2
 8006d70:	681a      	ldr	r2, [r3, #0]
 8006d72:	685b      	ldr	r3, [r3, #4]
 8006d74:	f7fa fea2 	bl	8001abc <__aeabi_dmul>
 8006d78:	2701      	movs	r7, #1
 8006d7a:	2300      	movs	r3, #0
 8006d7c:	900a      	str	r0, [sp, #40]	@ 0x28
 8006d7e:	910b      	str	r1, [sp, #44]	@ 0x2c
 8006d80:	4ed0      	ldr	r6, [pc, #832]	@ (80070c4 <_dtoa_r+0x70c>)
 8006d82:	112d      	asrs	r5, r5, #4
 8006d84:	2d00      	cmp	r5, #0
 8006d86:	d000      	beq.n	8006d8a <_dtoa_r+0x3d2>
 8006d88:	e095      	b.n	8006eb6 <_dtoa_r+0x4fe>
 8006d8a:	2b00      	cmp	r3, #0
 8006d8c:	d1a2      	bne.n	8006cd4 <_dtoa_r+0x31c>
 8006d8e:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8006d90:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8006d92:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8006d94:	2b00      	cmp	r3, #0
 8006d96:	d100      	bne.n	8006d9a <_dtoa_r+0x3e2>
 8006d98:	e098      	b.n	8006ecc <_dtoa_r+0x514>
 8006d9a:	2200      	movs	r2, #0
 8006d9c:	0030      	movs	r0, r6
 8006d9e:	0039      	movs	r1, r7
 8006da0:	4bc9      	ldr	r3, [pc, #804]	@ (80070c8 <_dtoa_r+0x710>)
 8006da2:	f7f9 fb59 	bl	8000458 <__aeabi_dcmplt>
 8006da6:	2800      	cmp	r0, #0
 8006da8:	d100      	bne.n	8006dac <_dtoa_r+0x3f4>
 8006daa:	e08f      	b.n	8006ecc <_dtoa_r+0x514>
 8006dac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006dae:	2b00      	cmp	r3, #0
 8006db0:	d100      	bne.n	8006db4 <_dtoa_r+0x3fc>
 8006db2:	e08b      	b.n	8006ecc <_dtoa_r+0x514>
 8006db4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006db6:	2b00      	cmp	r3, #0
 8006db8:	dd37      	ble.n	8006e2a <_dtoa_r+0x472>
 8006dba:	9b04      	ldr	r3, [sp, #16]
 8006dbc:	2200      	movs	r2, #0
 8006dbe:	3b01      	subs	r3, #1
 8006dc0:	930c      	str	r3, [sp, #48]	@ 0x30
 8006dc2:	0030      	movs	r0, r6
 8006dc4:	4bc1      	ldr	r3, [pc, #772]	@ (80070cc <_dtoa_r+0x714>)
 8006dc6:	0039      	movs	r1, r7
 8006dc8:	f7fa fe78 	bl	8001abc <__aeabi_dmul>
 8006dcc:	900a      	str	r0, [sp, #40]	@ 0x28
 8006dce:	910b      	str	r1, [sp, #44]	@ 0x2c
 8006dd0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006dd2:	3401      	adds	r4, #1
 8006dd4:	0020      	movs	r0, r4
 8006dd6:	9311      	str	r3, [sp, #68]	@ 0x44
 8006dd8:	f7fb fdbe 	bl	8002958 <__aeabi_i2d>
 8006ddc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8006dde:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006de0:	f7fa fe6c 	bl	8001abc <__aeabi_dmul>
 8006de4:	4bba      	ldr	r3, [pc, #744]	@ (80070d0 <_dtoa_r+0x718>)
 8006de6:	2200      	movs	r2, #0
 8006de8:	f7f9 fe68 	bl	8000abc <__aeabi_dadd>
 8006dec:	4bb9      	ldr	r3, [pc, #740]	@ (80070d4 <_dtoa_r+0x71c>)
 8006dee:	0006      	movs	r6, r0
 8006df0:	18cf      	adds	r7, r1, r3
 8006df2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8006df4:	2b00      	cmp	r3, #0
 8006df6:	d16d      	bne.n	8006ed4 <_dtoa_r+0x51c>
 8006df8:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8006dfa:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8006dfc:	2200      	movs	r2, #0
 8006dfe:	4bb6      	ldr	r3, [pc, #728]	@ (80070d8 <_dtoa_r+0x720>)
 8006e00:	f7fb f942 	bl	8002088 <__aeabi_dsub>
 8006e04:	0032      	movs	r2, r6
 8006e06:	003b      	movs	r3, r7
 8006e08:	0004      	movs	r4, r0
 8006e0a:	000d      	movs	r5, r1
 8006e0c:	f7f9 fb38 	bl	8000480 <__aeabi_dcmpgt>
 8006e10:	2800      	cmp	r0, #0
 8006e12:	d000      	beq.n	8006e16 <_dtoa_r+0x45e>
 8006e14:	e2b6      	b.n	8007384 <_dtoa_r+0x9cc>
 8006e16:	2180      	movs	r1, #128	@ 0x80
 8006e18:	0609      	lsls	r1, r1, #24
 8006e1a:	187b      	adds	r3, r7, r1
 8006e1c:	0032      	movs	r2, r6
 8006e1e:	0020      	movs	r0, r4
 8006e20:	0029      	movs	r1, r5
 8006e22:	f7f9 fb19 	bl	8000458 <__aeabi_dcmplt>
 8006e26:	2800      	cmp	r0, #0
 8006e28:	d128      	bne.n	8006e7c <_dtoa_r+0x4c4>
 8006e2a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8006e2c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8006e2e:	930a      	str	r3, [sp, #40]	@ 0x28
 8006e30:	940b      	str	r4, [sp, #44]	@ 0x2c
 8006e32:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8006e34:	2b00      	cmp	r3, #0
 8006e36:	da00      	bge.n	8006e3a <_dtoa_r+0x482>
 8006e38:	e174      	b.n	8007124 <_dtoa_r+0x76c>
 8006e3a:	9a04      	ldr	r2, [sp, #16]
 8006e3c:	2a0e      	cmp	r2, #14
 8006e3e:	dd00      	ble.n	8006e42 <_dtoa_r+0x48a>
 8006e40:	e170      	b.n	8007124 <_dtoa_r+0x76c>
 8006e42:	4b9f      	ldr	r3, [pc, #636]	@ (80070c0 <_dtoa_r+0x708>)
 8006e44:	00d2      	lsls	r2, r2, #3
 8006e46:	189b      	adds	r3, r3, r2
 8006e48:	685c      	ldr	r4, [r3, #4]
 8006e4a:	681b      	ldr	r3, [r3, #0]
 8006e4c:	9306      	str	r3, [sp, #24]
 8006e4e:	9407      	str	r4, [sp, #28]
 8006e50:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8006e52:	2b00      	cmp	r3, #0
 8006e54:	db00      	blt.n	8006e58 <_dtoa_r+0x4a0>
 8006e56:	e0e7      	b.n	8007028 <_dtoa_r+0x670>
 8006e58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006e5a:	2b00      	cmp	r3, #0
 8006e5c:	dd00      	ble.n	8006e60 <_dtoa_r+0x4a8>
 8006e5e:	e0e3      	b.n	8007028 <_dtoa_r+0x670>
 8006e60:	d10c      	bne.n	8006e7c <_dtoa_r+0x4c4>
 8006e62:	9806      	ldr	r0, [sp, #24]
 8006e64:	9907      	ldr	r1, [sp, #28]
 8006e66:	2200      	movs	r2, #0
 8006e68:	4b9b      	ldr	r3, [pc, #620]	@ (80070d8 <_dtoa_r+0x720>)
 8006e6a:	f7fa fe27 	bl	8001abc <__aeabi_dmul>
 8006e6e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8006e70:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006e72:	f7f9 fb0f 	bl	8000494 <__aeabi_dcmpge>
 8006e76:	2800      	cmp	r0, #0
 8006e78:	d100      	bne.n	8006e7c <_dtoa_r+0x4c4>
 8006e7a:	e286      	b.n	800738a <_dtoa_r+0x9d2>
 8006e7c:	2600      	movs	r6, #0
 8006e7e:	0037      	movs	r7, r6
 8006e80:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8006e82:	9c08      	ldr	r4, [sp, #32]
 8006e84:	43db      	mvns	r3, r3
 8006e86:	930c      	str	r3, [sp, #48]	@ 0x30
 8006e88:	9704      	str	r7, [sp, #16]
 8006e8a:	2700      	movs	r7, #0
 8006e8c:	0031      	movs	r1, r6
 8006e8e:	9803      	ldr	r0, [sp, #12]
 8006e90:	f000 fccc 	bl	800782c <_Bfree>
 8006e94:	9b04      	ldr	r3, [sp, #16]
 8006e96:	2b00      	cmp	r3, #0
 8006e98:	d100      	bne.n	8006e9c <_dtoa_r+0x4e4>
 8006e9a:	e0bb      	b.n	8007014 <_dtoa_r+0x65c>
 8006e9c:	2f00      	cmp	r7, #0
 8006e9e:	d005      	beq.n	8006eac <_dtoa_r+0x4f4>
 8006ea0:	429f      	cmp	r7, r3
 8006ea2:	d003      	beq.n	8006eac <_dtoa_r+0x4f4>
 8006ea4:	0039      	movs	r1, r7
 8006ea6:	9803      	ldr	r0, [sp, #12]
 8006ea8:	f000 fcc0 	bl	800782c <_Bfree>
 8006eac:	9904      	ldr	r1, [sp, #16]
 8006eae:	9803      	ldr	r0, [sp, #12]
 8006eb0:	f000 fcbc 	bl	800782c <_Bfree>
 8006eb4:	e0ae      	b.n	8007014 <_dtoa_r+0x65c>
 8006eb6:	423d      	tst	r5, r7
 8006eb8:	d005      	beq.n	8006ec6 <_dtoa_r+0x50e>
 8006eba:	6832      	ldr	r2, [r6, #0]
 8006ebc:	6873      	ldr	r3, [r6, #4]
 8006ebe:	f7fa fdfd 	bl	8001abc <__aeabi_dmul>
 8006ec2:	003b      	movs	r3, r7
 8006ec4:	3401      	adds	r4, #1
 8006ec6:	106d      	asrs	r5, r5, #1
 8006ec8:	3608      	adds	r6, #8
 8006eca:	e75b      	b.n	8006d84 <_dtoa_r+0x3cc>
 8006ecc:	9b04      	ldr	r3, [sp, #16]
 8006ece:	930c      	str	r3, [sp, #48]	@ 0x30
 8006ed0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006ed2:	e77f      	b.n	8006dd4 <_dtoa_r+0x41c>
 8006ed4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8006ed6:	4b7a      	ldr	r3, [pc, #488]	@ (80070c0 <_dtoa_r+0x708>)
 8006ed8:	3a01      	subs	r2, #1
 8006eda:	00d2      	lsls	r2, r2, #3
 8006edc:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8006ede:	189b      	adds	r3, r3, r2
 8006ee0:	681a      	ldr	r2, [r3, #0]
 8006ee2:	685b      	ldr	r3, [r3, #4]
 8006ee4:	2900      	cmp	r1, #0
 8006ee6:	d04c      	beq.n	8006f82 <_dtoa_r+0x5ca>
 8006ee8:	2000      	movs	r0, #0
 8006eea:	497c      	ldr	r1, [pc, #496]	@ (80070dc <_dtoa_r+0x724>)
 8006eec:	f7fa f9ac 	bl	8001248 <__aeabi_ddiv>
 8006ef0:	0032      	movs	r2, r6
 8006ef2:	003b      	movs	r3, r7
 8006ef4:	f7fb f8c8 	bl	8002088 <__aeabi_dsub>
 8006ef8:	9a08      	ldr	r2, [sp, #32]
 8006efa:	0006      	movs	r6, r0
 8006efc:	4694      	mov	ip, r2
 8006efe:	000f      	movs	r7, r1
 8006f00:	9b08      	ldr	r3, [sp, #32]
 8006f02:	9316      	str	r3, [sp, #88]	@ 0x58
 8006f04:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8006f06:	4463      	add	r3, ip
 8006f08:	9311      	str	r3, [sp, #68]	@ 0x44
 8006f0a:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8006f0c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8006f0e:	f7fb fce7 	bl	80028e0 <__aeabi_d2iz>
 8006f12:	0005      	movs	r5, r0
 8006f14:	f7fb fd20 	bl	8002958 <__aeabi_i2d>
 8006f18:	0002      	movs	r2, r0
 8006f1a:	000b      	movs	r3, r1
 8006f1c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8006f1e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8006f20:	f7fb f8b2 	bl	8002088 <__aeabi_dsub>
 8006f24:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8006f26:	3530      	adds	r5, #48	@ 0x30
 8006f28:	1c5c      	adds	r4, r3, #1
 8006f2a:	701d      	strb	r5, [r3, #0]
 8006f2c:	0032      	movs	r2, r6
 8006f2e:	003b      	movs	r3, r7
 8006f30:	900a      	str	r0, [sp, #40]	@ 0x28
 8006f32:	910b      	str	r1, [sp, #44]	@ 0x2c
 8006f34:	f7f9 fa90 	bl	8000458 <__aeabi_dcmplt>
 8006f38:	2800      	cmp	r0, #0
 8006f3a:	d16b      	bne.n	8007014 <_dtoa_r+0x65c>
 8006f3c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8006f3e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006f40:	2000      	movs	r0, #0
 8006f42:	4961      	ldr	r1, [pc, #388]	@ (80070c8 <_dtoa_r+0x710>)
 8006f44:	f7fb f8a0 	bl	8002088 <__aeabi_dsub>
 8006f48:	0032      	movs	r2, r6
 8006f4a:	003b      	movs	r3, r7
 8006f4c:	f7f9 fa84 	bl	8000458 <__aeabi_dcmplt>
 8006f50:	2800      	cmp	r0, #0
 8006f52:	d000      	beq.n	8006f56 <_dtoa_r+0x59e>
 8006f54:	e0c6      	b.n	80070e4 <_dtoa_r+0x72c>
 8006f56:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8006f58:	42a3      	cmp	r3, r4
 8006f5a:	d100      	bne.n	8006f5e <_dtoa_r+0x5a6>
 8006f5c:	e765      	b.n	8006e2a <_dtoa_r+0x472>
 8006f5e:	2200      	movs	r2, #0
 8006f60:	0030      	movs	r0, r6
 8006f62:	0039      	movs	r1, r7
 8006f64:	4b59      	ldr	r3, [pc, #356]	@ (80070cc <_dtoa_r+0x714>)
 8006f66:	f7fa fda9 	bl	8001abc <__aeabi_dmul>
 8006f6a:	2200      	movs	r2, #0
 8006f6c:	0006      	movs	r6, r0
 8006f6e:	000f      	movs	r7, r1
 8006f70:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8006f72:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8006f74:	4b55      	ldr	r3, [pc, #340]	@ (80070cc <_dtoa_r+0x714>)
 8006f76:	f7fa fda1 	bl	8001abc <__aeabi_dmul>
 8006f7a:	9416      	str	r4, [sp, #88]	@ 0x58
 8006f7c:	900a      	str	r0, [sp, #40]	@ 0x28
 8006f7e:	910b      	str	r1, [sp, #44]	@ 0x2c
 8006f80:	e7c3      	b.n	8006f0a <_dtoa_r+0x552>
 8006f82:	0030      	movs	r0, r6
 8006f84:	0039      	movs	r1, r7
 8006f86:	f7fa fd99 	bl	8001abc <__aeabi_dmul>
 8006f8a:	9d08      	ldr	r5, [sp, #32]
 8006f8c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8006f8e:	002b      	movs	r3, r5
 8006f90:	4694      	mov	ip, r2
 8006f92:	9016      	str	r0, [sp, #88]	@ 0x58
 8006f94:	9117      	str	r1, [sp, #92]	@ 0x5c
 8006f96:	4463      	add	r3, ip
 8006f98:	9319      	str	r3, [sp, #100]	@ 0x64
 8006f9a:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8006f9c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8006f9e:	f7fb fc9f 	bl	80028e0 <__aeabi_d2iz>
 8006fa2:	0004      	movs	r4, r0
 8006fa4:	f7fb fcd8 	bl	8002958 <__aeabi_i2d>
 8006fa8:	000b      	movs	r3, r1
 8006faa:	0002      	movs	r2, r0
 8006fac:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8006fae:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8006fb0:	f7fb f86a 	bl	8002088 <__aeabi_dsub>
 8006fb4:	3430      	adds	r4, #48	@ 0x30
 8006fb6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8006fb8:	702c      	strb	r4, [r5, #0]
 8006fba:	3501      	adds	r5, #1
 8006fbc:	0006      	movs	r6, r0
 8006fbe:	000f      	movs	r7, r1
 8006fc0:	42ab      	cmp	r3, r5
 8006fc2:	d12a      	bne.n	800701a <_dtoa_r+0x662>
 8006fc4:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8006fc6:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8006fc8:	9b08      	ldr	r3, [sp, #32]
 8006fca:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8006fcc:	469c      	mov	ip, r3
 8006fce:	2200      	movs	r2, #0
 8006fd0:	4b42      	ldr	r3, [pc, #264]	@ (80070dc <_dtoa_r+0x724>)
 8006fd2:	4464      	add	r4, ip
 8006fd4:	f7f9 fd72 	bl	8000abc <__aeabi_dadd>
 8006fd8:	0002      	movs	r2, r0
 8006fda:	000b      	movs	r3, r1
 8006fdc:	0030      	movs	r0, r6
 8006fde:	0039      	movs	r1, r7
 8006fe0:	f7f9 fa4e 	bl	8000480 <__aeabi_dcmpgt>
 8006fe4:	2800      	cmp	r0, #0
 8006fe6:	d000      	beq.n	8006fea <_dtoa_r+0x632>
 8006fe8:	e07c      	b.n	80070e4 <_dtoa_r+0x72c>
 8006fea:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8006fec:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8006fee:	2000      	movs	r0, #0
 8006ff0:	493a      	ldr	r1, [pc, #232]	@ (80070dc <_dtoa_r+0x724>)
 8006ff2:	f7fb f849 	bl	8002088 <__aeabi_dsub>
 8006ff6:	0002      	movs	r2, r0
 8006ff8:	000b      	movs	r3, r1
 8006ffa:	0030      	movs	r0, r6
 8006ffc:	0039      	movs	r1, r7
 8006ffe:	f7f9 fa2b 	bl	8000458 <__aeabi_dcmplt>
 8007002:	2800      	cmp	r0, #0
 8007004:	d100      	bne.n	8007008 <_dtoa_r+0x650>
 8007006:	e710      	b.n	8006e2a <_dtoa_r+0x472>
 8007008:	0023      	movs	r3, r4
 800700a:	3c01      	subs	r4, #1
 800700c:	7822      	ldrb	r2, [r4, #0]
 800700e:	2a30      	cmp	r2, #48	@ 0x30
 8007010:	d0fa      	beq.n	8007008 <_dtoa_r+0x650>
 8007012:	001c      	movs	r4, r3
 8007014:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8007016:	9304      	str	r3, [sp, #16]
 8007018:	e042      	b.n	80070a0 <_dtoa_r+0x6e8>
 800701a:	2200      	movs	r2, #0
 800701c:	4b2b      	ldr	r3, [pc, #172]	@ (80070cc <_dtoa_r+0x714>)
 800701e:	f7fa fd4d 	bl	8001abc <__aeabi_dmul>
 8007022:	900a      	str	r0, [sp, #40]	@ 0x28
 8007024:	910b      	str	r1, [sp, #44]	@ 0x2c
 8007026:	e7b8      	b.n	8006f9a <_dtoa_r+0x5e2>
 8007028:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800702a:	9d08      	ldr	r5, [sp, #32]
 800702c:	3b01      	subs	r3, #1
 800702e:	195b      	adds	r3, r3, r5
 8007030:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8007032:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8007034:	930a      	str	r3, [sp, #40]	@ 0x28
 8007036:	9a06      	ldr	r2, [sp, #24]
 8007038:	9b07      	ldr	r3, [sp, #28]
 800703a:	0030      	movs	r0, r6
 800703c:	0039      	movs	r1, r7
 800703e:	f7fa f903 	bl	8001248 <__aeabi_ddiv>
 8007042:	f7fb fc4d 	bl	80028e0 <__aeabi_d2iz>
 8007046:	9009      	str	r0, [sp, #36]	@ 0x24
 8007048:	f7fb fc86 	bl	8002958 <__aeabi_i2d>
 800704c:	9a06      	ldr	r2, [sp, #24]
 800704e:	9b07      	ldr	r3, [sp, #28]
 8007050:	f7fa fd34 	bl	8001abc <__aeabi_dmul>
 8007054:	0002      	movs	r2, r0
 8007056:	000b      	movs	r3, r1
 8007058:	0030      	movs	r0, r6
 800705a:	0039      	movs	r1, r7
 800705c:	f7fb f814 	bl	8002088 <__aeabi_dsub>
 8007060:	002b      	movs	r3, r5
 8007062:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8007064:	3501      	adds	r5, #1
 8007066:	3230      	adds	r2, #48	@ 0x30
 8007068:	701a      	strb	r2, [r3, #0]
 800706a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800706c:	002c      	movs	r4, r5
 800706e:	429a      	cmp	r2, r3
 8007070:	d14b      	bne.n	800710a <_dtoa_r+0x752>
 8007072:	0002      	movs	r2, r0
 8007074:	000b      	movs	r3, r1
 8007076:	f7f9 fd21 	bl	8000abc <__aeabi_dadd>
 800707a:	9a06      	ldr	r2, [sp, #24]
 800707c:	9b07      	ldr	r3, [sp, #28]
 800707e:	0006      	movs	r6, r0
 8007080:	000f      	movs	r7, r1
 8007082:	f7f9 f9fd 	bl	8000480 <__aeabi_dcmpgt>
 8007086:	2800      	cmp	r0, #0
 8007088:	d12a      	bne.n	80070e0 <_dtoa_r+0x728>
 800708a:	9a06      	ldr	r2, [sp, #24]
 800708c:	9b07      	ldr	r3, [sp, #28]
 800708e:	0030      	movs	r0, r6
 8007090:	0039      	movs	r1, r7
 8007092:	f7f9 f9db 	bl	800044c <__aeabi_dcmpeq>
 8007096:	2800      	cmp	r0, #0
 8007098:	d002      	beq.n	80070a0 <_dtoa_r+0x6e8>
 800709a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800709c:	07dd      	lsls	r5, r3, #31
 800709e:	d41f      	bmi.n	80070e0 <_dtoa_r+0x728>
 80070a0:	9905      	ldr	r1, [sp, #20]
 80070a2:	9803      	ldr	r0, [sp, #12]
 80070a4:	f000 fbc2 	bl	800782c <_Bfree>
 80070a8:	2300      	movs	r3, #0
 80070aa:	7023      	strb	r3, [r4, #0]
 80070ac:	9b04      	ldr	r3, [sp, #16]
 80070ae:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80070b0:	3301      	adds	r3, #1
 80070b2:	6013      	str	r3, [r2, #0]
 80070b4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80070b6:	2b00      	cmp	r3, #0
 80070b8:	d100      	bne.n	80070bc <_dtoa_r+0x704>
 80070ba:	e4c7      	b.n	8006a4c <_dtoa_r+0x94>
 80070bc:	601c      	str	r4, [r3, #0]
 80070be:	e4c5      	b.n	8006a4c <_dtoa_r+0x94>
 80070c0:	0800a248 	.word	0x0800a248
 80070c4:	0800a220 	.word	0x0800a220
 80070c8:	3ff00000 	.word	0x3ff00000
 80070cc:	40240000 	.word	0x40240000
 80070d0:	401c0000 	.word	0x401c0000
 80070d4:	fcc00000 	.word	0xfcc00000
 80070d8:	40140000 	.word	0x40140000
 80070dc:	3fe00000 	.word	0x3fe00000
 80070e0:	9b04      	ldr	r3, [sp, #16]
 80070e2:	930c      	str	r3, [sp, #48]	@ 0x30
 80070e4:	0023      	movs	r3, r4
 80070e6:	001c      	movs	r4, r3
 80070e8:	3b01      	subs	r3, #1
 80070ea:	781a      	ldrb	r2, [r3, #0]
 80070ec:	2a39      	cmp	r2, #57	@ 0x39
 80070ee:	d108      	bne.n	8007102 <_dtoa_r+0x74a>
 80070f0:	9a08      	ldr	r2, [sp, #32]
 80070f2:	429a      	cmp	r2, r3
 80070f4:	d1f7      	bne.n	80070e6 <_dtoa_r+0x72e>
 80070f6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80070f8:	9908      	ldr	r1, [sp, #32]
 80070fa:	3201      	adds	r2, #1
 80070fc:	920c      	str	r2, [sp, #48]	@ 0x30
 80070fe:	2230      	movs	r2, #48	@ 0x30
 8007100:	700a      	strb	r2, [r1, #0]
 8007102:	781a      	ldrb	r2, [r3, #0]
 8007104:	3201      	adds	r2, #1
 8007106:	701a      	strb	r2, [r3, #0]
 8007108:	e784      	b.n	8007014 <_dtoa_r+0x65c>
 800710a:	2200      	movs	r2, #0
 800710c:	4bc6      	ldr	r3, [pc, #792]	@ (8007428 <_dtoa_r+0xa70>)
 800710e:	f7fa fcd5 	bl	8001abc <__aeabi_dmul>
 8007112:	2200      	movs	r2, #0
 8007114:	2300      	movs	r3, #0
 8007116:	0006      	movs	r6, r0
 8007118:	000f      	movs	r7, r1
 800711a:	f7f9 f997 	bl	800044c <__aeabi_dcmpeq>
 800711e:	2800      	cmp	r0, #0
 8007120:	d089      	beq.n	8007036 <_dtoa_r+0x67e>
 8007122:	e7bd      	b.n	80070a0 <_dtoa_r+0x6e8>
 8007124:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 8007126:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8007128:	9c06      	ldr	r4, [sp, #24]
 800712a:	2f00      	cmp	r7, #0
 800712c:	d014      	beq.n	8007158 <_dtoa_r+0x7a0>
 800712e:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8007130:	2a01      	cmp	r2, #1
 8007132:	dd00      	ble.n	8007136 <_dtoa_r+0x77e>
 8007134:	e0e4      	b.n	8007300 <_dtoa_r+0x948>
 8007136:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8007138:	2a00      	cmp	r2, #0
 800713a:	d100      	bne.n	800713e <_dtoa_r+0x786>
 800713c:	e0da      	b.n	80072f4 <_dtoa_r+0x93c>
 800713e:	4abb      	ldr	r2, [pc, #748]	@ (800742c <_dtoa_r+0xa74>)
 8007140:	189b      	adds	r3, r3, r2
 8007142:	9a06      	ldr	r2, [sp, #24]
 8007144:	2101      	movs	r1, #1
 8007146:	18d2      	adds	r2, r2, r3
 8007148:	9206      	str	r2, [sp, #24]
 800714a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800714c:	9803      	ldr	r0, [sp, #12]
 800714e:	18d3      	adds	r3, r2, r3
 8007150:	930d      	str	r3, [sp, #52]	@ 0x34
 8007152:	f000 fc6f 	bl	8007a34 <__i2b>
 8007156:	0007      	movs	r7, r0
 8007158:	2c00      	cmp	r4, #0
 800715a:	d00e      	beq.n	800717a <_dtoa_r+0x7c2>
 800715c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800715e:	2b00      	cmp	r3, #0
 8007160:	dd0b      	ble.n	800717a <_dtoa_r+0x7c2>
 8007162:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8007164:	0023      	movs	r3, r4
 8007166:	4294      	cmp	r4, r2
 8007168:	dd00      	ble.n	800716c <_dtoa_r+0x7b4>
 800716a:	0013      	movs	r3, r2
 800716c:	9a06      	ldr	r2, [sp, #24]
 800716e:	1ae4      	subs	r4, r4, r3
 8007170:	1ad2      	subs	r2, r2, r3
 8007172:	9206      	str	r2, [sp, #24]
 8007174:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8007176:	1ad3      	subs	r3, r2, r3
 8007178:	930d      	str	r3, [sp, #52]	@ 0x34
 800717a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800717c:	2b00      	cmp	r3, #0
 800717e:	d021      	beq.n	80071c4 <_dtoa_r+0x80c>
 8007180:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8007182:	2b00      	cmp	r3, #0
 8007184:	d100      	bne.n	8007188 <_dtoa_r+0x7d0>
 8007186:	e0d3      	b.n	8007330 <_dtoa_r+0x978>
 8007188:	9e05      	ldr	r6, [sp, #20]
 800718a:	2d00      	cmp	r5, #0
 800718c:	d014      	beq.n	80071b8 <_dtoa_r+0x800>
 800718e:	0039      	movs	r1, r7
 8007190:	002a      	movs	r2, r5
 8007192:	9803      	ldr	r0, [sp, #12]
 8007194:	f000 fd10 	bl	8007bb8 <__pow5mult>
 8007198:	9a05      	ldr	r2, [sp, #20]
 800719a:	0001      	movs	r1, r0
 800719c:	0007      	movs	r7, r0
 800719e:	9803      	ldr	r0, [sp, #12]
 80071a0:	f000 fc60 	bl	8007a64 <__multiply>
 80071a4:	0006      	movs	r6, r0
 80071a6:	9905      	ldr	r1, [sp, #20]
 80071a8:	9803      	ldr	r0, [sp, #12]
 80071aa:	f000 fb3f 	bl	800782c <_Bfree>
 80071ae:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80071b0:	9605      	str	r6, [sp, #20]
 80071b2:	1b5b      	subs	r3, r3, r5
 80071b4:	930f      	str	r3, [sp, #60]	@ 0x3c
 80071b6:	d005      	beq.n	80071c4 <_dtoa_r+0x80c>
 80071b8:	0031      	movs	r1, r6
 80071ba:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80071bc:	9803      	ldr	r0, [sp, #12]
 80071be:	f000 fcfb 	bl	8007bb8 <__pow5mult>
 80071c2:	9005      	str	r0, [sp, #20]
 80071c4:	2101      	movs	r1, #1
 80071c6:	9803      	ldr	r0, [sp, #12]
 80071c8:	f000 fc34 	bl	8007a34 <__i2b>
 80071cc:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80071ce:	0006      	movs	r6, r0
 80071d0:	2b00      	cmp	r3, #0
 80071d2:	d100      	bne.n	80071d6 <_dtoa_r+0x81e>
 80071d4:	e1bc      	b.n	8007550 <_dtoa_r+0xb98>
 80071d6:	001a      	movs	r2, r3
 80071d8:	0001      	movs	r1, r0
 80071da:	9803      	ldr	r0, [sp, #12]
 80071dc:	f000 fcec 	bl	8007bb8 <__pow5mult>
 80071e0:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80071e2:	0006      	movs	r6, r0
 80071e4:	2500      	movs	r5, #0
 80071e6:	2b01      	cmp	r3, #1
 80071e8:	dc16      	bgt.n	8007218 <_dtoa_r+0x860>
 80071ea:	2500      	movs	r5, #0
 80071ec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80071ee:	42ab      	cmp	r3, r5
 80071f0:	d10e      	bne.n	8007210 <_dtoa_r+0x858>
 80071f2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80071f4:	031b      	lsls	r3, r3, #12
 80071f6:	42ab      	cmp	r3, r5
 80071f8:	d10a      	bne.n	8007210 <_dtoa_r+0x858>
 80071fa:	4b8d      	ldr	r3, [pc, #564]	@ (8007430 <_dtoa_r+0xa78>)
 80071fc:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80071fe:	4213      	tst	r3, r2
 8007200:	d006      	beq.n	8007210 <_dtoa_r+0x858>
 8007202:	9b06      	ldr	r3, [sp, #24]
 8007204:	3501      	adds	r5, #1
 8007206:	3301      	adds	r3, #1
 8007208:	9306      	str	r3, [sp, #24]
 800720a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800720c:	3301      	adds	r3, #1
 800720e:	930d      	str	r3, [sp, #52]	@ 0x34
 8007210:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8007212:	2001      	movs	r0, #1
 8007214:	2b00      	cmp	r3, #0
 8007216:	d008      	beq.n	800722a <_dtoa_r+0x872>
 8007218:	6933      	ldr	r3, [r6, #16]
 800721a:	3303      	adds	r3, #3
 800721c:	009b      	lsls	r3, r3, #2
 800721e:	18f3      	adds	r3, r6, r3
 8007220:	6858      	ldr	r0, [r3, #4]
 8007222:	f000 fbb7 	bl	8007994 <__hi0bits>
 8007226:	2320      	movs	r3, #32
 8007228:	1a18      	subs	r0, r3, r0
 800722a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800722c:	1818      	adds	r0, r3, r0
 800722e:	0002      	movs	r2, r0
 8007230:	231f      	movs	r3, #31
 8007232:	401a      	ands	r2, r3
 8007234:	4218      	tst	r0, r3
 8007236:	d100      	bne.n	800723a <_dtoa_r+0x882>
 8007238:	e081      	b.n	800733e <_dtoa_r+0x986>
 800723a:	3301      	adds	r3, #1
 800723c:	1a9b      	subs	r3, r3, r2
 800723e:	2b04      	cmp	r3, #4
 8007240:	dd79      	ble.n	8007336 <_dtoa_r+0x97e>
 8007242:	231c      	movs	r3, #28
 8007244:	1a9b      	subs	r3, r3, r2
 8007246:	9a06      	ldr	r2, [sp, #24]
 8007248:	18e4      	adds	r4, r4, r3
 800724a:	18d2      	adds	r2, r2, r3
 800724c:	9206      	str	r2, [sp, #24]
 800724e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8007250:	18d3      	adds	r3, r2, r3
 8007252:	930d      	str	r3, [sp, #52]	@ 0x34
 8007254:	9b06      	ldr	r3, [sp, #24]
 8007256:	2b00      	cmp	r3, #0
 8007258:	dd05      	ble.n	8007266 <_dtoa_r+0x8ae>
 800725a:	001a      	movs	r2, r3
 800725c:	9905      	ldr	r1, [sp, #20]
 800725e:	9803      	ldr	r0, [sp, #12]
 8007260:	f000 fd06 	bl	8007c70 <__lshift>
 8007264:	9005      	str	r0, [sp, #20]
 8007266:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007268:	2b00      	cmp	r3, #0
 800726a:	dd05      	ble.n	8007278 <_dtoa_r+0x8c0>
 800726c:	0031      	movs	r1, r6
 800726e:	001a      	movs	r2, r3
 8007270:	9803      	ldr	r0, [sp, #12]
 8007272:	f000 fcfd 	bl	8007c70 <__lshift>
 8007276:	0006      	movs	r6, r0
 8007278:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 800727a:	2b00      	cmp	r3, #0
 800727c:	d061      	beq.n	8007342 <_dtoa_r+0x98a>
 800727e:	0031      	movs	r1, r6
 8007280:	9805      	ldr	r0, [sp, #20]
 8007282:	f000 fd61 	bl	8007d48 <__mcmp>
 8007286:	2800      	cmp	r0, #0
 8007288:	da5b      	bge.n	8007342 <_dtoa_r+0x98a>
 800728a:	9b04      	ldr	r3, [sp, #16]
 800728c:	220a      	movs	r2, #10
 800728e:	3b01      	subs	r3, #1
 8007290:	930c      	str	r3, [sp, #48]	@ 0x30
 8007292:	9905      	ldr	r1, [sp, #20]
 8007294:	2300      	movs	r3, #0
 8007296:	9803      	ldr	r0, [sp, #12]
 8007298:	f000 faec 	bl	8007874 <__multadd>
 800729c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800729e:	9005      	str	r0, [sp, #20]
 80072a0:	2b00      	cmp	r3, #0
 80072a2:	d100      	bne.n	80072a6 <_dtoa_r+0x8ee>
 80072a4:	e15b      	b.n	800755e <_dtoa_r+0xba6>
 80072a6:	2300      	movs	r3, #0
 80072a8:	0039      	movs	r1, r7
 80072aa:	220a      	movs	r2, #10
 80072ac:	9803      	ldr	r0, [sp, #12]
 80072ae:	f000 fae1 	bl	8007874 <__multadd>
 80072b2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80072b4:	0007      	movs	r7, r0
 80072b6:	2b00      	cmp	r3, #0
 80072b8:	dc4d      	bgt.n	8007356 <_dtoa_r+0x99e>
 80072ba:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80072bc:	2b02      	cmp	r3, #2
 80072be:	dd46      	ble.n	800734e <_dtoa_r+0x996>
 80072c0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80072c2:	2b00      	cmp	r3, #0
 80072c4:	d000      	beq.n	80072c8 <_dtoa_r+0x910>
 80072c6:	e5db      	b.n	8006e80 <_dtoa_r+0x4c8>
 80072c8:	0031      	movs	r1, r6
 80072ca:	2205      	movs	r2, #5
 80072cc:	9803      	ldr	r0, [sp, #12]
 80072ce:	f000 fad1 	bl	8007874 <__multadd>
 80072d2:	0006      	movs	r6, r0
 80072d4:	0001      	movs	r1, r0
 80072d6:	9805      	ldr	r0, [sp, #20]
 80072d8:	f000 fd36 	bl	8007d48 <__mcmp>
 80072dc:	2800      	cmp	r0, #0
 80072de:	dc00      	bgt.n	80072e2 <_dtoa_r+0x92a>
 80072e0:	e5ce      	b.n	8006e80 <_dtoa_r+0x4c8>
 80072e2:	9b08      	ldr	r3, [sp, #32]
 80072e4:	9a08      	ldr	r2, [sp, #32]
 80072e6:	1c5c      	adds	r4, r3, #1
 80072e8:	2331      	movs	r3, #49	@ 0x31
 80072ea:	7013      	strb	r3, [r2, #0]
 80072ec:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80072ee:	3301      	adds	r3, #1
 80072f0:	930c      	str	r3, [sp, #48]	@ 0x30
 80072f2:	e5c9      	b.n	8006e88 <_dtoa_r+0x4d0>
 80072f4:	2336      	movs	r3, #54	@ 0x36
 80072f6:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 80072f8:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80072fa:	1a9b      	subs	r3, r3, r2
 80072fc:	9c06      	ldr	r4, [sp, #24]
 80072fe:	e720      	b.n	8007142 <_dtoa_r+0x78a>
 8007300:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007302:	1e5d      	subs	r5, r3, #1
 8007304:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8007306:	42ab      	cmp	r3, r5
 8007308:	db08      	blt.n	800731c <_dtoa_r+0x964>
 800730a:	1b5d      	subs	r5, r3, r5
 800730c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800730e:	2b00      	cmp	r3, #0
 8007310:	daf4      	bge.n	80072fc <_dtoa_r+0x944>
 8007312:	9b06      	ldr	r3, [sp, #24]
 8007314:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8007316:	1a9c      	subs	r4, r3, r2
 8007318:	2300      	movs	r3, #0
 800731a:	e712      	b.n	8007142 <_dtoa_r+0x78a>
 800731c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800731e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8007320:	1aeb      	subs	r3, r5, r3
 8007322:	18d3      	adds	r3, r2, r3
 8007324:	9314      	str	r3, [sp, #80]	@ 0x50
 8007326:	950f      	str	r5, [sp, #60]	@ 0x3c
 8007328:	9c06      	ldr	r4, [sp, #24]
 800732a:	2500      	movs	r5, #0
 800732c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800732e:	e708      	b.n	8007142 <_dtoa_r+0x78a>
 8007330:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8007332:	9905      	ldr	r1, [sp, #20]
 8007334:	e742      	b.n	80071bc <_dtoa_r+0x804>
 8007336:	2b04      	cmp	r3, #4
 8007338:	d08c      	beq.n	8007254 <_dtoa_r+0x89c>
 800733a:	331c      	adds	r3, #28
 800733c:	e783      	b.n	8007246 <_dtoa_r+0x88e>
 800733e:	0013      	movs	r3, r2
 8007340:	e7fb      	b.n	800733a <_dtoa_r+0x982>
 8007342:	9b04      	ldr	r3, [sp, #16]
 8007344:	930c      	str	r3, [sp, #48]	@ 0x30
 8007346:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007348:	930e      	str	r3, [sp, #56]	@ 0x38
 800734a:	2b00      	cmp	r3, #0
 800734c:	ddb5      	ble.n	80072ba <_dtoa_r+0x902>
 800734e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8007350:	2b00      	cmp	r3, #0
 8007352:	d100      	bne.n	8007356 <_dtoa_r+0x99e>
 8007354:	e107      	b.n	8007566 <_dtoa_r+0xbae>
 8007356:	2c00      	cmp	r4, #0
 8007358:	dd05      	ble.n	8007366 <_dtoa_r+0x9ae>
 800735a:	0039      	movs	r1, r7
 800735c:	0022      	movs	r2, r4
 800735e:	9803      	ldr	r0, [sp, #12]
 8007360:	f000 fc86 	bl	8007c70 <__lshift>
 8007364:	0007      	movs	r7, r0
 8007366:	9704      	str	r7, [sp, #16]
 8007368:	2d00      	cmp	r5, #0
 800736a:	d020      	beq.n	80073ae <_dtoa_r+0x9f6>
 800736c:	6879      	ldr	r1, [r7, #4]
 800736e:	9803      	ldr	r0, [sp, #12]
 8007370:	f000 fa18 	bl	80077a4 <_Balloc>
 8007374:	1e04      	subs	r4, r0, #0
 8007376:	d10c      	bne.n	8007392 <_dtoa_r+0x9da>
 8007378:	0022      	movs	r2, r4
 800737a:	4b2e      	ldr	r3, [pc, #184]	@ (8007434 <_dtoa_r+0xa7c>)
 800737c:	482e      	ldr	r0, [pc, #184]	@ (8007438 <_dtoa_r+0xa80>)
 800737e:	492f      	ldr	r1, [pc, #188]	@ (800743c <_dtoa_r+0xa84>)
 8007380:	f7ff fb2f 	bl	80069e2 <_dtoa_r+0x2a>
 8007384:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8007386:	0037      	movs	r7, r6
 8007388:	e7ab      	b.n	80072e2 <_dtoa_r+0x92a>
 800738a:	9b04      	ldr	r3, [sp, #16]
 800738c:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 800738e:	930c      	str	r3, [sp, #48]	@ 0x30
 8007390:	e7f9      	b.n	8007386 <_dtoa_r+0x9ce>
 8007392:	0039      	movs	r1, r7
 8007394:	693a      	ldr	r2, [r7, #16]
 8007396:	310c      	adds	r1, #12
 8007398:	3202      	adds	r2, #2
 800739a:	0092      	lsls	r2, r2, #2
 800739c:	300c      	adds	r0, #12
 800739e:	f002 f843 	bl	8009428 <memcpy>
 80073a2:	2201      	movs	r2, #1
 80073a4:	0021      	movs	r1, r4
 80073a6:	9803      	ldr	r0, [sp, #12]
 80073a8:	f000 fc62 	bl	8007c70 <__lshift>
 80073ac:	9004      	str	r0, [sp, #16]
 80073ae:	9b08      	ldr	r3, [sp, #32]
 80073b0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80073b2:	9306      	str	r3, [sp, #24]
 80073b4:	3b01      	subs	r3, #1
 80073b6:	189b      	adds	r3, r3, r2
 80073b8:	2201      	movs	r2, #1
 80073ba:	930f      	str	r3, [sp, #60]	@ 0x3c
 80073bc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80073be:	4013      	ands	r3, r2
 80073c0:	930e      	str	r3, [sp, #56]	@ 0x38
 80073c2:	0031      	movs	r1, r6
 80073c4:	9805      	ldr	r0, [sp, #20]
 80073c6:	f7ff fa71 	bl	80068ac <quorem>
 80073ca:	0039      	movs	r1, r7
 80073cc:	0005      	movs	r5, r0
 80073ce:	900a      	str	r0, [sp, #40]	@ 0x28
 80073d0:	9805      	ldr	r0, [sp, #20]
 80073d2:	f000 fcb9 	bl	8007d48 <__mcmp>
 80073d6:	9a04      	ldr	r2, [sp, #16]
 80073d8:	900d      	str	r0, [sp, #52]	@ 0x34
 80073da:	0031      	movs	r1, r6
 80073dc:	9803      	ldr	r0, [sp, #12]
 80073de:	f000 fccf 	bl	8007d80 <__mdiff>
 80073e2:	2201      	movs	r2, #1
 80073e4:	68c3      	ldr	r3, [r0, #12]
 80073e6:	0004      	movs	r4, r0
 80073e8:	3530      	adds	r5, #48	@ 0x30
 80073ea:	9209      	str	r2, [sp, #36]	@ 0x24
 80073ec:	2b00      	cmp	r3, #0
 80073ee:	d104      	bne.n	80073fa <_dtoa_r+0xa42>
 80073f0:	0001      	movs	r1, r0
 80073f2:	9805      	ldr	r0, [sp, #20]
 80073f4:	f000 fca8 	bl	8007d48 <__mcmp>
 80073f8:	9009      	str	r0, [sp, #36]	@ 0x24
 80073fa:	0021      	movs	r1, r4
 80073fc:	9803      	ldr	r0, [sp, #12]
 80073fe:	f000 fa15 	bl	800782c <_Bfree>
 8007402:	9b06      	ldr	r3, [sp, #24]
 8007404:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8007406:	1c5c      	adds	r4, r3, #1
 8007408:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800740a:	4313      	orrs	r3, r2
 800740c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800740e:	4313      	orrs	r3, r2
 8007410:	d116      	bne.n	8007440 <_dtoa_r+0xa88>
 8007412:	2d39      	cmp	r5, #57	@ 0x39
 8007414:	d02f      	beq.n	8007476 <_dtoa_r+0xabe>
 8007416:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007418:	2b00      	cmp	r3, #0
 800741a:	dd01      	ble.n	8007420 <_dtoa_r+0xa68>
 800741c:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 800741e:	3531      	adds	r5, #49	@ 0x31
 8007420:	9b06      	ldr	r3, [sp, #24]
 8007422:	701d      	strb	r5, [r3, #0]
 8007424:	e532      	b.n	8006e8c <_dtoa_r+0x4d4>
 8007426:	46c0      	nop			@ (mov r8, r8)
 8007428:	40240000 	.word	0x40240000
 800742c:	00000433 	.word	0x00000433
 8007430:	7ff00000 	.word	0x7ff00000
 8007434:	0800a0f1 	.word	0x0800a0f1
 8007438:	0800a099 	.word	0x0800a099
 800743c:	000002ef 	.word	0x000002ef
 8007440:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007442:	2b00      	cmp	r3, #0
 8007444:	db04      	blt.n	8007450 <_dtoa_r+0xa98>
 8007446:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8007448:	4313      	orrs	r3, r2
 800744a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800744c:	4313      	orrs	r3, r2
 800744e:	d11e      	bne.n	800748e <_dtoa_r+0xad6>
 8007450:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007452:	2b00      	cmp	r3, #0
 8007454:	dde4      	ble.n	8007420 <_dtoa_r+0xa68>
 8007456:	9905      	ldr	r1, [sp, #20]
 8007458:	2201      	movs	r2, #1
 800745a:	9803      	ldr	r0, [sp, #12]
 800745c:	f000 fc08 	bl	8007c70 <__lshift>
 8007460:	0031      	movs	r1, r6
 8007462:	9005      	str	r0, [sp, #20]
 8007464:	f000 fc70 	bl	8007d48 <__mcmp>
 8007468:	2800      	cmp	r0, #0
 800746a:	dc02      	bgt.n	8007472 <_dtoa_r+0xaba>
 800746c:	d1d8      	bne.n	8007420 <_dtoa_r+0xa68>
 800746e:	07eb      	lsls	r3, r5, #31
 8007470:	d5d6      	bpl.n	8007420 <_dtoa_r+0xa68>
 8007472:	2d39      	cmp	r5, #57	@ 0x39
 8007474:	d1d2      	bne.n	800741c <_dtoa_r+0xa64>
 8007476:	2339      	movs	r3, #57	@ 0x39
 8007478:	9a06      	ldr	r2, [sp, #24]
 800747a:	7013      	strb	r3, [r2, #0]
 800747c:	0023      	movs	r3, r4
 800747e:	001c      	movs	r4, r3
 8007480:	3b01      	subs	r3, #1
 8007482:	781a      	ldrb	r2, [r3, #0]
 8007484:	2a39      	cmp	r2, #57	@ 0x39
 8007486:	d050      	beq.n	800752a <_dtoa_r+0xb72>
 8007488:	3201      	adds	r2, #1
 800748a:	701a      	strb	r2, [r3, #0]
 800748c:	e4fe      	b.n	8006e8c <_dtoa_r+0x4d4>
 800748e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007490:	2b00      	cmp	r3, #0
 8007492:	dd03      	ble.n	800749c <_dtoa_r+0xae4>
 8007494:	2d39      	cmp	r5, #57	@ 0x39
 8007496:	d0ee      	beq.n	8007476 <_dtoa_r+0xabe>
 8007498:	3501      	adds	r5, #1
 800749a:	e7c1      	b.n	8007420 <_dtoa_r+0xa68>
 800749c:	9b06      	ldr	r3, [sp, #24]
 800749e:	9a06      	ldr	r2, [sp, #24]
 80074a0:	701d      	strb	r5, [r3, #0]
 80074a2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80074a4:	4293      	cmp	r3, r2
 80074a6:	d02b      	beq.n	8007500 <_dtoa_r+0xb48>
 80074a8:	2300      	movs	r3, #0
 80074aa:	220a      	movs	r2, #10
 80074ac:	9905      	ldr	r1, [sp, #20]
 80074ae:	9803      	ldr	r0, [sp, #12]
 80074b0:	f000 f9e0 	bl	8007874 <__multadd>
 80074b4:	9b04      	ldr	r3, [sp, #16]
 80074b6:	9005      	str	r0, [sp, #20]
 80074b8:	429f      	cmp	r7, r3
 80074ba:	d109      	bne.n	80074d0 <_dtoa_r+0xb18>
 80074bc:	0039      	movs	r1, r7
 80074be:	2300      	movs	r3, #0
 80074c0:	220a      	movs	r2, #10
 80074c2:	9803      	ldr	r0, [sp, #12]
 80074c4:	f000 f9d6 	bl	8007874 <__multadd>
 80074c8:	0007      	movs	r7, r0
 80074ca:	9004      	str	r0, [sp, #16]
 80074cc:	9406      	str	r4, [sp, #24]
 80074ce:	e778      	b.n	80073c2 <_dtoa_r+0xa0a>
 80074d0:	0039      	movs	r1, r7
 80074d2:	2300      	movs	r3, #0
 80074d4:	220a      	movs	r2, #10
 80074d6:	9803      	ldr	r0, [sp, #12]
 80074d8:	f000 f9cc 	bl	8007874 <__multadd>
 80074dc:	2300      	movs	r3, #0
 80074de:	0007      	movs	r7, r0
 80074e0:	220a      	movs	r2, #10
 80074e2:	9904      	ldr	r1, [sp, #16]
 80074e4:	9803      	ldr	r0, [sp, #12]
 80074e6:	f000 f9c5 	bl	8007874 <__multadd>
 80074ea:	9004      	str	r0, [sp, #16]
 80074ec:	e7ee      	b.n	80074cc <_dtoa_r+0xb14>
 80074ee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80074f0:	2401      	movs	r4, #1
 80074f2:	2b00      	cmp	r3, #0
 80074f4:	dd00      	ble.n	80074f8 <_dtoa_r+0xb40>
 80074f6:	001c      	movs	r4, r3
 80074f8:	9704      	str	r7, [sp, #16]
 80074fa:	2700      	movs	r7, #0
 80074fc:	9b08      	ldr	r3, [sp, #32]
 80074fe:	191c      	adds	r4, r3, r4
 8007500:	9905      	ldr	r1, [sp, #20]
 8007502:	2201      	movs	r2, #1
 8007504:	9803      	ldr	r0, [sp, #12]
 8007506:	f000 fbb3 	bl	8007c70 <__lshift>
 800750a:	0031      	movs	r1, r6
 800750c:	9005      	str	r0, [sp, #20]
 800750e:	f000 fc1b 	bl	8007d48 <__mcmp>
 8007512:	2800      	cmp	r0, #0
 8007514:	dcb2      	bgt.n	800747c <_dtoa_r+0xac4>
 8007516:	d101      	bne.n	800751c <_dtoa_r+0xb64>
 8007518:	07ed      	lsls	r5, r5, #31
 800751a:	d4af      	bmi.n	800747c <_dtoa_r+0xac4>
 800751c:	0023      	movs	r3, r4
 800751e:	001c      	movs	r4, r3
 8007520:	3b01      	subs	r3, #1
 8007522:	781a      	ldrb	r2, [r3, #0]
 8007524:	2a30      	cmp	r2, #48	@ 0x30
 8007526:	d0fa      	beq.n	800751e <_dtoa_r+0xb66>
 8007528:	e4b0      	b.n	8006e8c <_dtoa_r+0x4d4>
 800752a:	9a08      	ldr	r2, [sp, #32]
 800752c:	429a      	cmp	r2, r3
 800752e:	d1a6      	bne.n	800747e <_dtoa_r+0xac6>
 8007530:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8007532:	3301      	adds	r3, #1
 8007534:	930c      	str	r3, [sp, #48]	@ 0x30
 8007536:	2331      	movs	r3, #49	@ 0x31
 8007538:	7013      	strb	r3, [r2, #0]
 800753a:	e4a7      	b.n	8006e8c <_dtoa_r+0x4d4>
 800753c:	4b14      	ldr	r3, [pc, #80]	@ (8007590 <_dtoa_r+0xbd8>)
 800753e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8007540:	9308      	str	r3, [sp, #32]
 8007542:	4b14      	ldr	r3, [pc, #80]	@ (8007594 <_dtoa_r+0xbdc>)
 8007544:	2a00      	cmp	r2, #0
 8007546:	d001      	beq.n	800754c <_dtoa_r+0xb94>
 8007548:	f7ff fa7e 	bl	8006a48 <_dtoa_r+0x90>
 800754c:	f7ff fa7e 	bl	8006a4c <_dtoa_r+0x94>
 8007550:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8007552:	2b01      	cmp	r3, #1
 8007554:	dc00      	bgt.n	8007558 <_dtoa_r+0xba0>
 8007556:	e648      	b.n	80071ea <_dtoa_r+0x832>
 8007558:	2001      	movs	r0, #1
 800755a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 800755c:	e665      	b.n	800722a <_dtoa_r+0x872>
 800755e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8007560:	2b00      	cmp	r3, #0
 8007562:	dc00      	bgt.n	8007566 <_dtoa_r+0xbae>
 8007564:	e6a9      	b.n	80072ba <_dtoa_r+0x902>
 8007566:	2400      	movs	r4, #0
 8007568:	0031      	movs	r1, r6
 800756a:	9805      	ldr	r0, [sp, #20]
 800756c:	f7ff f99e 	bl	80068ac <quorem>
 8007570:	9b08      	ldr	r3, [sp, #32]
 8007572:	3030      	adds	r0, #48	@ 0x30
 8007574:	5518      	strb	r0, [r3, r4]
 8007576:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8007578:	3401      	adds	r4, #1
 800757a:	0005      	movs	r5, r0
 800757c:	42a3      	cmp	r3, r4
 800757e:	ddb6      	ble.n	80074ee <_dtoa_r+0xb36>
 8007580:	2300      	movs	r3, #0
 8007582:	220a      	movs	r2, #10
 8007584:	9905      	ldr	r1, [sp, #20]
 8007586:	9803      	ldr	r0, [sp, #12]
 8007588:	f000 f974 	bl	8007874 <__multadd>
 800758c:	9005      	str	r0, [sp, #20]
 800758e:	e7eb      	b.n	8007568 <_dtoa_r+0xbb0>
 8007590:	0800a075 	.word	0x0800a075
 8007594:	0800a07d 	.word	0x0800a07d

08007598 <_free_r>:
 8007598:	b570      	push	{r4, r5, r6, lr}
 800759a:	0005      	movs	r5, r0
 800759c:	1e0c      	subs	r4, r1, #0
 800759e:	d010      	beq.n	80075c2 <_free_r+0x2a>
 80075a0:	3c04      	subs	r4, #4
 80075a2:	6823      	ldr	r3, [r4, #0]
 80075a4:	2b00      	cmp	r3, #0
 80075a6:	da00      	bge.n	80075aa <_free_r+0x12>
 80075a8:	18e4      	adds	r4, r4, r3
 80075aa:	0028      	movs	r0, r5
 80075ac:	f000 f8ea 	bl	8007784 <__malloc_lock>
 80075b0:	4a1d      	ldr	r2, [pc, #116]	@ (8007628 <_free_r+0x90>)
 80075b2:	6813      	ldr	r3, [r2, #0]
 80075b4:	2b00      	cmp	r3, #0
 80075b6:	d105      	bne.n	80075c4 <_free_r+0x2c>
 80075b8:	6063      	str	r3, [r4, #4]
 80075ba:	6014      	str	r4, [r2, #0]
 80075bc:	0028      	movs	r0, r5
 80075be:	f000 f8e9 	bl	8007794 <__malloc_unlock>
 80075c2:	bd70      	pop	{r4, r5, r6, pc}
 80075c4:	42a3      	cmp	r3, r4
 80075c6:	d908      	bls.n	80075da <_free_r+0x42>
 80075c8:	6820      	ldr	r0, [r4, #0]
 80075ca:	1821      	adds	r1, r4, r0
 80075cc:	428b      	cmp	r3, r1
 80075ce:	d1f3      	bne.n	80075b8 <_free_r+0x20>
 80075d0:	6819      	ldr	r1, [r3, #0]
 80075d2:	685b      	ldr	r3, [r3, #4]
 80075d4:	1809      	adds	r1, r1, r0
 80075d6:	6021      	str	r1, [r4, #0]
 80075d8:	e7ee      	b.n	80075b8 <_free_r+0x20>
 80075da:	001a      	movs	r2, r3
 80075dc:	685b      	ldr	r3, [r3, #4]
 80075de:	2b00      	cmp	r3, #0
 80075e0:	d001      	beq.n	80075e6 <_free_r+0x4e>
 80075e2:	42a3      	cmp	r3, r4
 80075e4:	d9f9      	bls.n	80075da <_free_r+0x42>
 80075e6:	6811      	ldr	r1, [r2, #0]
 80075e8:	1850      	adds	r0, r2, r1
 80075ea:	42a0      	cmp	r0, r4
 80075ec:	d10b      	bne.n	8007606 <_free_r+0x6e>
 80075ee:	6820      	ldr	r0, [r4, #0]
 80075f0:	1809      	adds	r1, r1, r0
 80075f2:	1850      	adds	r0, r2, r1
 80075f4:	6011      	str	r1, [r2, #0]
 80075f6:	4283      	cmp	r3, r0
 80075f8:	d1e0      	bne.n	80075bc <_free_r+0x24>
 80075fa:	6818      	ldr	r0, [r3, #0]
 80075fc:	685b      	ldr	r3, [r3, #4]
 80075fe:	1841      	adds	r1, r0, r1
 8007600:	6011      	str	r1, [r2, #0]
 8007602:	6053      	str	r3, [r2, #4]
 8007604:	e7da      	b.n	80075bc <_free_r+0x24>
 8007606:	42a0      	cmp	r0, r4
 8007608:	d902      	bls.n	8007610 <_free_r+0x78>
 800760a:	230c      	movs	r3, #12
 800760c:	602b      	str	r3, [r5, #0]
 800760e:	e7d5      	b.n	80075bc <_free_r+0x24>
 8007610:	6820      	ldr	r0, [r4, #0]
 8007612:	1821      	adds	r1, r4, r0
 8007614:	428b      	cmp	r3, r1
 8007616:	d103      	bne.n	8007620 <_free_r+0x88>
 8007618:	6819      	ldr	r1, [r3, #0]
 800761a:	685b      	ldr	r3, [r3, #4]
 800761c:	1809      	adds	r1, r1, r0
 800761e:	6021      	str	r1, [r4, #0]
 8007620:	6063      	str	r3, [r4, #4]
 8007622:	6054      	str	r4, [r2, #4]
 8007624:	e7ca      	b.n	80075bc <_free_r+0x24>
 8007626:	46c0      	nop			@ (mov r8, r8)
 8007628:	2000041c 	.word	0x2000041c

0800762c <malloc>:
 800762c:	b510      	push	{r4, lr}
 800762e:	4b03      	ldr	r3, [pc, #12]	@ (800763c <malloc+0x10>)
 8007630:	0001      	movs	r1, r0
 8007632:	6818      	ldr	r0, [r3, #0]
 8007634:	f000 f826 	bl	8007684 <_malloc_r>
 8007638:	bd10      	pop	{r4, pc}
 800763a:	46c0      	nop			@ (mov r8, r8)
 800763c:	20000018 	.word	0x20000018

08007640 <sbrk_aligned>:
 8007640:	b570      	push	{r4, r5, r6, lr}
 8007642:	4e0f      	ldr	r6, [pc, #60]	@ (8007680 <sbrk_aligned+0x40>)
 8007644:	000d      	movs	r5, r1
 8007646:	6831      	ldr	r1, [r6, #0]
 8007648:	0004      	movs	r4, r0
 800764a:	2900      	cmp	r1, #0
 800764c:	d102      	bne.n	8007654 <sbrk_aligned+0x14>
 800764e:	f001 fed9 	bl	8009404 <_sbrk_r>
 8007652:	6030      	str	r0, [r6, #0]
 8007654:	0029      	movs	r1, r5
 8007656:	0020      	movs	r0, r4
 8007658:	f001 fed4 	bl	8009404 <_sbrk_r>
 800765c:	1c43      	adds	r3, r0, #1
 800765e:	d103      	bne.n	8007668 <sbrk_aligned+0x28>
 8007660:	2501      	movs	r5, #1
 8007662:	426d      	negs	r5, r5
 8007664:	0028      	movs	r0, r5
 8007666:	bd70      	pop	{r4, r5, r6, pc}
 8007668:	2303      	movs	r3, #3
 800766a:	1cc5      	adds	r5, r0, #3
 800766c:	439d      	bics	r5, r3
 800766e:	42a8      	cmp	r0, r5
 8007670:	d0f8      	beq.n	8007664 <sbrk_aligned+0x24>
 8007672:	1a29      	subs	r1, r5, r0
 8007674:	0020      	movs	r0, r4
 8007676:	f001 fec5 	bl	8009404 <_sbrk_r>
 800767a:	3001      	adds	r0, #1
 800767c:	d1f2      	bne.n	8007664 <sbrk_aligned+0x24>
 800767e:	e7ef      	b.n	8007660 <sbrk_aligned+0x20>
 8007680:	20000418 	.word	0x20000418

08007684 <_malloc_r>:
 8007684:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007686:	2203      	movs	r2, #3
 8007688:	1ccb      	adds	r3, r1, #3
 800768a:	4393      	bics	r3, r2
 800768c:	3308      	adds	r3, #8
 800768e:	0005      	movs	r5, r0
 8007690:	001f      	movs	r7, r3
 8007692:	2b0c      	cmp	r3, #12
 8007694:	d234      	bcs.n	8007700 <_malloc_r+0x7c>
 8007696:	270c      	movs	r7, #12
 8007698:	42b9      	cmp	r1, r7
 800769a:	d833      	bhi.n	8007704 <_malloc_r+0x80>
 800769c:	0028      	movs	r0, r5
 800769e:	f000 f871 	bl	8007784 <__malloc_lock>
 80076a2:	4e37      	ldr	r6, [pc, #220]	@ (8007780 <_malloc_r+0xfc>)
 80076a4:	6833      	ldr	r3, [r6, #0]
 80076a6:	001c      	movs	r4, r3
 80076a8:	2c00      	cmp	r4, #0
 80076aa:	d12f      	bne.n	800770c <_malloc_r+0x88>
 80076ac:	0039      	movs	r1, r7
 80076ae:	0028      	movs	r0, r5
 80076b0:	f7ff ffc6 	bl	8007640 <sbrk_aligned>
 80076b4:	0004      	movs	r4, r0
 80076b6:	1c43      	adds	r3, r0, #1
 80076b8:	d15f      	bne.n	800777a <_malloc_r+0xf6>
 80076ba:	6834      	ldr	r4, [r6, #0]
 80076bc:	9400      	str	r4, [sp, #0]
 80076be:	9b00      	ldr	r3, [sp, #0]
 80076c0:	2b00      	cmp	r3, #0
 80076c2:	d14a      	bne.n	800775a <_malloc_r+0xd6>
 80076c4:	2c00      	cmp	r4, #0
 80076c6:	d052      	beq.n	800776e <_malloc_r+0xea>
 80076c8:	6823      	ldr	r3, [r4, #0]
 80076ca:	0028      	movs	r0, r5
 80076cc:	18e3      	adds	r3, r4, r3
 80076ce:	9900      	ldr	r1, [sp, #0]
 80076d0:	9301      	str	r3, [sp, #4]
 80076d2:	f001 fe97 	bl	8009404 <_sbrk_r>
 80076d6:	9b01      	ldr	r3, [sp, #4]
 80076d8:	4283      	cmp	r3, r0
 80076da:	d148      	bne.n	800776e <_malloc_r+0xea>
 80076dc:	6823      	ldr	r3, [r4, #0]
 80076de:	0028      	movs	r0, r5
 80076e0:	1aff      	subs	r7, r7, r3
 80076e2:	0039      	movs	r1, r7
 80076e4:	f7ff ffac 	bl	8007640 <sbrk_aligned>
 80076e8:	3001      	adds	r0, #1
 80076ea:	d040      	beq.n	800776e <_malloc_r+0xea>
 80076ec:	6823      	ldr	r3, [r4, #0]
 80076ee:	19db      	adds	r3, r3, r7
 80076f0:	6023      	str	r3, [r4, #0]
 80076f2:	6833      	ldr	r3, [r6, #0]
 80076f4:	685a      	ldr	r2, [r3, #4]
 80076f6:	2a00      	cmp	r2, #0
 80076f8:	d133      	bne.n	8007762 <_malloc_r+0xde>
 80076fa:	9b00      	ldr	r3, [sp, #0]
 80076fc:	6033      	str	r3, [r6, #0]
 80076fe:	e019      	b.n	8007734 <_malloc_r+0xb0>
 8007700:	2b00      	cmp	r3, #0
 8007702:	dac9      	bge.n	8007698 <_malloc_r+0x14>
 8007704:	230c      	movs	r3, #12
 8007706:	602b      	str	r3, [r5, #0]
 8007708:	2000      	movs	r0, #0
 800770a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800770c:	6821      	ldr	r1, [r4, #0]
 800770e:	1bc9      	subs	r1, r1, r7
 8007710:	d420      	bmi.n	8007754 <_malloc_r+0xd0>
 8007712:	290b      	cmp	r1, #11
 8007714:	d90a      	bls.n	800772c <_malloc_r+0xa8>
 8007716:	19e2      	adds	r2, r4, r7
 8007718:	6027      	str	r7, [r4, #0]
 800771a:	42a3      	cmp	r3, r4
 800771c:	d104      	bne.n	8007728 <_malloc_r+0xa4>
 800771e:	6032      	str	r2, [r6, #0]
 8007720:	6863      	ldr	r3, [r4, #4]
 8007722:	6011      	str	r1, [r2, #0]
 8007724:	6053      	str	r3, [r2, #4]
 8007726:	e005      	b.n	8007734 <_malloc_r+0xb0>
 8007728:	605a      	str	r2, [r3, #4]
 800772a:	e7f9      	b.n	8007720 <_malloc_r+0x9c>
 800772c:	6862      	ldr	r2, [r4, #4]
 800772e:	42a3      	cmp	r3, r4
 8007730:	d10e      	bne.n	8007750 <_malloc_r+0xcc>
 8007732:	6032      	str	r2, [r6, #0]
 8007734:	0028      	movs	r0, r5
 8007736:	f000 f82d 	bl	8007794 <__malloc_unlock>
 800773a:	0020      	movs	r0, r4
 800773c:	2207      	movs	r2, #7
 800773e:	300b      	adds	r0, #11
 8007740:	1d23      	adds	r3, r4, #4
 8007742:	4390      	bics	r0, r2
 8007744:	1ac2      	subs	r2, r0, r3
 8007746:	4298      	cmp	r0, r3
 8007748:	d0df      	beq.n	800770a <_malloc_r+0x86>
 800774a:	1a1b      	subs	r3, r3, r0
 800774c:	50a3      	str	r3, [r4, r2]
 800774e:	e7dc      	b.n	800770a <_malloc_r+0x86>
 8007750:	605a      	str	r2, [r3, #4]
 8007752:	e7ef      	b.n	8007734 <_malloc_r+0xb0>
 8007754:	0023      	movs	r3, r4
 8007756:	6864      	ldr	r4, [r4, #4]
 8007758:	e7a6      	b.n	80076a8 <_malloc_r+0x24>
 800775a:	9c00      	ldr	r4, [sp, #0]
 800775c:	6863      	ldr	r3, [r4, #4]
 800775e:	9300      	str	r3, [sp, #0]
 8007760:	e7ad      	b.n	80076be <_malloc_r+0x3a>
 8007762:	001a      	movs	r2, r3
 8007764:	685b      	ldr	r3, [r3, #4]
 8007766:	42a3      	cmp	r3, r4
 8007768:	d1fb      	bne.n	8007762 <_malloc_r+0xde>
 800776a:	2300      	movs	r3, #0
 800776c:	e7da      	b.n	8007724 <_malloc_r+0xa0>
 800776e:	230c      	movs	r3, #12
 8007770:	0028      	movs	r0, r5
 8007772:	602b      	str	r3, [r5, #0]
 8007774:	f000 f80e 	bl	8007794 <__malloc_unlock>
 8007778:	e7c6      	b.n	8007708 <_malloc_r+0x84>
 800777a:	6007      	str	r7, [r0, #0]
 800777c:	e7da      	b.n	8007734 <_malloc_r+0xb0>
 800777e:	46c0      	nop			@ (mov r8, r8)
 8007780:	2000041c 	.word	0x2000041c

08007784 <__malloc_lock>:
 8007784:	b510      	push	{r4, lr}
 8007786:	4802      	ldr	r0, [pc, #8]	@ (8007790 <__malloc_lock+0xc>)
 8007788:	f7ff f87f 	bl	800688a <__retarget_lock_acquire_recursive>
 800778c:	bd10      	pop	{r4, pc}
 800778e:	46c0      	nop			@ (mov r8, r8)
 8007790:	20000414 	.word	0x20000414

08007794 <__malloc_unlock>:
 8007794:	b510      	push	{r4, lr}
 8007796:	4802      	ldr	r0, [pc, #8]	@ (80077a0 <__malloc_unlock+0xc>)
 8007798:	f7ff f878 	bl	800688c <__retarget_lock_release_recursive>
 800779c:	bd10      	pop	{r4, pc}
 800779e:	46c0      	nop			@ (mov r8, r8)
 80077a0:	20000414 	.word	0x20000414

080077a4 <_Balloc>:
 80077a4:	b570      	push	{r4, r5, r6, lr}
 80077a6:	69c5      	ldr	r5, [r0, #28]
 80077a8:	0006      	movs	r6, r0
 80077aa:	000c      	movs	r4, r1
 80077ac:	2d00      	cmp	r5, #0
 80077ae:	d10e      	bne.n	80077ce <_Balloc+0x2a>
 80077b0:	2010      	movs	r0, #16
 80077b2:	f7ff ff3b 	bl	800762c <malloc>
 80077b6:	1e02      	subs	r2, r0, #0
 80077b8:	61f0      	str	r0, [r6, #28]
 80077ba:	d104      	bne.n	80077c6 <_Balloc+0x22>
 80077bc:	216b      	movs	r1, #107	@ 0x6b
 80077be:	4b19      	ldr	r3, [pc, #100]	@ (8007824 <_Balloc+0x80>)
 80077c0:	4819      	ldr	r0, [pc, #100]	@ (8007828 <_Balloc+0x84>)
 80077c2:	f001 fe41 	bl	8009448 <__assert_func>
 80077c6:	6045      	str	r5, [r0, #4]
 80077c8:	6085      	str	r5, [r0, #8]
 80077ca:	6005      	str	r5, [r0, #0]
 80077cc:	60c5      	str	r5, [r0, #12]
 80077ce:	69f5      	ldr	r5, [r6, #28]
 80077d0:	68eb      	ldr	r3, [r5, #12]
 80077d2:	2b00      	cmp	r3, #0
 80077d4:	d013      	beq.n	80077fe <_Balloc+0x5a>
 80077d6:	69f3      	ldr	r3, [r6, #28]
 80077d8:	00a2      	lsls	r2, r4, #2
 80077da:	68db      	ldr	r3, [r3, #12]
 80077dc:	189b      	adds	r3, r3, r2
 80077de:	6818      	ldr	r0, [r3, #0]
 80077e0:	2800      	cmp	r0, #0
 80077e2:	d118      	bne.n	8007816 <_Balloc+0x72>
 80077e4:	2101      	movs	r1, #1
 80077e6:	000d      	movs	r5, r1
 80077e8:	40a5      	lsls	r5, r4
 80077ea:	1d6a      	adds	r2, r5, #5
 80077ec:	0030      	movs	r0, r6
 80077ee:	0092      	lsls	r2, r2, #2
 80077f0:	f001 fe48 	bl	8009484 <_calloc_r>
 80077f4:	2800      	cmp	r0, #0
 80077f6:	d00c      	beq.n	8007812 <_Balloc+0x6e>
 80077f8:	6044      	str	r4, [r0, #4]
 80077fa:	6085      	str	r5, [r0, #8]
 80077fc:	e00d      	b.n	800781a <_Balloc+0x76>
 80077fe:	2221      	movs	r2, #33	@ 0x21
 8007800:	2104      	movs	r1, #4
 8007802:	0030      	movs	r0, r6
 8007804:	f001 fe3e 	bl	8009484 <_calloc_r>
 8007808:	69f3      	ldr	r3, [r6, #28]
 800780a:	60e8      	str	r0, [r5, #12]
 800780c:	68db      	ldr	r3, [r3, #12]
 800780e:	2b00      	cmp	r3, #0
 8007810:	d1e1      	bne.n	80077d6 <_Balloc+0x32>
 8007812:	2000      	movs	r0, #0
 8007814:	bd70      	pop	{r4, r5, r6, pc}
 8007816:	6802      	ldr	r2, [r0, #0]
 8007818:	601a      	str	r2, [r3, #0]
 800781a:	2300      	movs	r3, #0
 800781c:	6103      	str	r3, [r0, #16]
 800781e:	60c3      	str	r3, [r0, #12]
 8007820:	e7f8      	b.n	8007814 <_Balloc+0x70>
 8007822:	46c0      	nop			@ (mov r8, r8)
 8007824:	0800a082 	.word	0x0800a082
 8007828:	0800a102 	.word	0x0800a102

0800782c <_Bfree>:
 800782c:	b570      	push	{r4, r5, r6, lr}
 800782e:	69c6      	ldr	r6, [r0, #28]
 8007830:	0005      	movs	r5, r0
 8007832:	000c      	movs	r4, r1
 8007834:	2e00      	cmp	r6, #0
 8007836:	d10e      	bne.n	8007856 <_Bfree+0x2a>
 8007838:	2010      	movs	r0, #16
 800783a:	f7ff fef7 	bl	800762c <malloc>
 800783e:	1e02      	subs	r2, r0, #0
 8007840:	61e8      	str	r0, [r5, #28]
 8007842:	d104      	bne.n	800784e <_Bfree+0x22>
 8007844:	218f      	movs	r1, #143	@ 0x8f
 8007846:	4b09      	ldr	r3, [pc, #36]	@ (800786c <_Bfree+0x40>)
 8007848:	4809      	ldr	r0, [pc, #36]	@ (8007870 <_Bfree+0x44>)
 800784a:	f001 fdfd 	bl	8009448 <__assert_func>
 800784e:	6046      	str	r6, [r0, #4]
 8007850:	6086      	str	r6, [r0, #8]
 8007852:	6006      	str	r6, [r0, #0]
 8007854:	60c6      	str	r6, [r0, #12]
 8007856:	2c00      	cmp	r4, #0
 8007858:	d007      	beq.n	800786a <_Bfree+0x3e>
 800785a:	69eb      	ldr	r3, [r5, #28]
 800785c:	6862      	ldr	r2, [r4, #4]
 800785e:	68db      	ldr	r3, [r3, #12]
 8007860:	0092      	lsls	r2, r2, #2
 8007862:	189b      	adds	r3, r3, r2
 8007864:	681a      	ldr	r2, [r3, #0]
 8007866:	6022      	str	r2, [r4, #0]
 8007868:	601c      	str	r4, [r3, #0]
 800786a:	bd70      	pop	{r4, r5, r6, pc}
 800786c:	0800a082 	.word	0x0800a082
 8007870:	0800a102 	.word	0x0800a102

08007874 <__multadd>:
 8007874:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007876:	000f      	movs	r7, r1
 8007878:	9001      	str	r0, [sp, #4]
 800787a:	000c      	movs	r4, r1
 800787c:	001e      	movs	r6, r3
 800787e:	2000      	movs	r0, #0
 8007880:	690d      	ldr	r5, [r1, #16]
 8007882:	3714      	adds	r7, #20
 8007884:	683b      	ldr	r3, [r7, #0]
 8007886:	3001      	adds	r0, #1
 8007888:	b299      	uxth	r1, r3
 800788a:	4351      	muls	r1, r2
 800788c:	0c1b      	lsrs	r3, r3, #16
 800788e:	4353      	muls	r3, r2
 8007890:	1989      	adds	r1, r1, r6
 8007892:	0c0e      	lsrs	r6, r1, #16
 8007894:	199b      	adds	r3, r3, r6
 8007896:	0c1e      	lsrs	r6, r3, #16
 8007898:	b289      	uxth	r1, r1
 800789a:	041b      	lsls	r3, r3, #16
 800789c:	185b      	adds	r3, r3, r1
 800789e:	c708      	stmia	r7!, {r3}
 80078a0:	4285      	cmp	r5, r0
 80078a2:	dcef      	bgt.n	8007884 <__multadd+0x10>
 80078a4:	2e00      	cmp	r6, #0
 80078a6:	d022      	beq.n	80078ee <__multadd+0x7a>
 80078a8:	68a3      	ldr	r3, [r4, #8]
 80078aa:	42ab      	cmp	r3, r5
 80078ac:	dc19      	bgt.n	80078e2 <__multadd+0x6e>
 80078ae:	6861      	ldr	r1, [r4, #4]
 80078b0:	9801      	ldr	r0, [sp, #4]
 80078b2:	3101      	adds	r1, #1
 80078b4:	f7ff ff76 	bl	80077a4 <_Balloc>
 80078b8:	1e07      	subs	r7, r0, #0
 80078ba:	d105      	bne.n	80078c8 <__multadd+0x54>
 80078bc:	003a      	movs	r2, r7
 80078be:	21ba      	movs	r1, #186	@ 0xba
 80078c0:	4b0c      	ldr	r3, [pc, #48]	@ (80078f4 <__multadd+0x80>)
 80078c2:	480d      	ldr	r0, [pc, #52]	@ (80078f8 <__multadd+0x84>)
 80078c4:	f001 fdc0 	bl	8009448 <__assert_func>
 80078c8:	0021      	movs	r1, r4
 80078ca:	6922      	ldr	r2, [r4, #16]
 80078cc:	310c      	adds	r1, #12
 80078ce:	3202      	adds	r2, #2
 80078d0:	0092      	lsls	r2, r2, #2
 80078d2:	300c      	adds	r0, #12
 80078d4:	f001 fda8 	bl	8009428 <memcpy>
 80078d8:	0021      	movs	r1, r4
 80078da:	9801      	ldr	r0, [sp, #4]
 80078dc:	f7ff ffa6 	bl	800782c <_Bfree>
 80078e0:	003c      	movs	r4, r7
 80078e2:	1d2b      	adds	r3, r5, #4
 80078e4:	009b      	lsls	r3, r3, #2
 80078e6:	18e3      	adds	r3, r4, r3
 80078e8:	3501      	adds	r5, #1
 80078ea:	605e      	str	r6, [r3, #4]
 80078ec:	6125      	str	r5, [r4, #16]
 80078ee:	0020      	movs	r0, r4
 80078f0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80078f2:	46c0      	nop			@ (mov r8, r8)
 80078f4:	0800a0f1 	.word	0x0800a0f1
 80078f8:	0800a102 	.word	0x0800a102

080078fc <__s2b>:
 80078fc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80078fe:	0007      	movs	r7, r0
 8007900:	0018      	movs	r0, r3
 8007902:	000c      	movs	r4, r1
 8007904:	3008      	adds	r0, #8
 8007906:	2109      	movs	r1, #9
 8007908:	9301      	str	r3, [sp, #4]
 800790a:	0015      	movs	r5, r2
 800790c:	f7f8 fca2 	bl	8000254 <__divsi3>
 8007910:	2301      	movs	r3, #1
 8007912:	2100      	movs	r1, #0
 8007914:	4283      	cmp	r3, r0
 8007916:	db0a      	blt.n	800792e <__s2b+0x32>
 8007918:	0038      	movs	r0, r7
 800791a:	f7ff ff43 	bl	80077a4 <_Balloc>
 800791e:	1e01      	subs	r1, r0, #0
 8007920:	d108      	bne.n	8007934 <__s2b+0x38>
 8007922:	000a      	movs	r2, r1
 8007924:	4b19      	ldr	r3, [pc, #100]	@ (800798c <__s2b+0x90>)
 8007926:	481a      	ldr	r0, [pc, #104]	@ (8007990 <__s2b+0x94>)
 8007928:	31d3      	adds	r1, #211	@ 0xd3
 800792a:	f001 fd8d 	bl	8009448 <__assert_func>
 800792e:	005b      	lsls	r3, r3, #1
 8007930:	3101      	adds	r1, #1
 8007932:	e7ef      	b.n	8007914 <__s2b+0x18>
 8007934:	9b08      	ldr	r3, [sp, #32]
 8007936:	6143      	str	r3, [r0, #20]
 8007938:	2301      	movs	r3, #1
 800793a:	6103      	str	r3, [r0, #16]
 800793c:	2d09      	cmp	r5, #9
 800793e:	dd18      	ble.n	8007972 <__s2b+0x76>
 8007940:	0023      	movs	r3, r4
 8007942:	3309      	adds	r3, #9
 8007944:	001e      	movs	r6, r3
 8007946:	9300      	str	r3, [sp, #0]
 8007948:	1964      	adds	r4, r4, r5
 800794a:	7833      	ldrb	r3, [r6, #0]
 800794c:	220a      	movs	r2, #10
 800794e:	0038      	movs	r0, r7
 8007950:	3b30      	subs	r3, #48	@ 0x30
 8007952:	f7ff ff8f 	bl	8007874 <__multadd>
 8007956:	3601      	adds	r6, #1
 8007958:	0001      	movs	r1, r0
 800795a:	42a6      	cmp	r6, r4
 800795c:	d1f5      	bne.n	800794a <__s2b+0x4e>
 800795e:	002c      	movs	r4, r5
 8007960:	9b00      	ldr	r3, [sp, #0]
 8007962:	3c08      	subs	r4, #8
 8007964:	191c      	adds	r4, r3, r4
 8007966:	002e      	movs	r6, r5
 8007968:	9b01      	ldr	r3, [sp, #4]
 800796a:	429e      	cmp	r6, r3
 800796c:	db04      	blt.n	8007978 <__s2b+0x7c>
 800796e:	0008      	movs	r0, r1
 8007970:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8007972:	2509      	movs	r5, #9
 8007974:	340a      	adds	r4, #10
 8007976:	e7f6      	b.n	8007966 <__s2b+0x6a>
 8007978:	1b63      	subs	r3, r4, r5
 800797a:	5d9b      	ldrb	r3, [r3, r6]
 800797c:	220a      	movs	r2, #10
 800797e:	0038      	movs	r0, r7
 8007980:	3b30      	subs	r3, #48	@ 0x30
 8007982:	f7ff ff77 	bl	8007874 <__multadd>
 8007986:	3601      	adds	r6, #1
 8007988:	0001      	movs	r1, r0
 800798a:	e7ed      	b.n	8007968 <__s2b+0x6c>
 800798c:	0800a0f1 	.word	0x0800a0f1
 8007990:	0800a102 	.word	0x0800a102

08007994 <__hi0bits>:
 8007994:	2280      	movs	r2, #128	@ 0x80
 8007996:	0003      	movs	r3, r0
 8007998:	0252      	lsls	r2, r2, #9
 800799a:	2000      	movs	r0, #0
 800799c:	4293      	cmp	r3, r2
 800799e:	d201      	bcs.n	80079a4 <__hi0bits+0x10>
 80079a0:	041b      	lsls	r3, r3, #16
 80079a2:	3010      	adds	r0, #16
 80079a4:	2280      	movs	r2, #128	@ 0x80
 80079a6:	0452      	lsls	r2, r2, #17
 80079a8:	4293      	cmp	r3, r2
 80079aa:	d201      	bcs.n	80079b0 <__hi0bits+0x1c>
 80079ac:	3008      	adds	r0, #8
 80079ae:	021b      	lsls	r3, r3, #8
 80079b0:	2280      	movs	r2, #128	@ 0x80
 80079b2:	0552      	lsls	r2, r2, #21
 80079b4:	4293      	cmp	r3, r2
 80079b6:	d201      	bcs.n	80079bc <__hi0bits+0x28>
 80079b8:	3004      	adds	r0, #4
 80079ba:	011b      	lsls	r3, r3, #4
 80079bc:	2280      	movs	r2, #128	@ 0x80
 80079be:	05d2      	lsls	r2, r2, #23
 80079c0:	4293      	cmp	r3, r2
 80079c2:	d201      	bcs.n	80079c8 <__hi0bits+0x34>
 80079c4:	3002      	adds	r0, #2
 80079c6:	009b      	lsls	r3, r3, #2
 80079c8:	2b00      	cmp	r3, #0
 80079ca:	db03      	blt.n	80079d4 <__hi0bits+0x40>
 80079cc:	3001      	adds	r0, #1
 80079ce:	4213      	tst	r3, r2
 80079d0:	d100      	bne.n	80079d4 <__hi0bits+0x40>
 80079d2:	2020      	movs	r0, #32
 80079d4:	4770      	bx	lr

080079d6 <__lo0bits>:
 80079d6:	6803      	ldr	r3, [r0, #0]
 80079d8:	0001      	movs	r1, r0
 80079da:	2207      	movs	r2, #7
 80079dc:	0018      	movs	r0, r3
 80079de:	4010      	ands	r0, r2
 80079e0:	4213      	tst	r3, r2
 80079e2:	d00d      	beq.n	8007a00 <__lo0bits+0x2a>
 80079e4:	3a06      	subs	r2, #6
 80079e6:	2000      	movs	r0, #0
 80079e8:	4213      	tst	r3, r2
 80079ea:	d105      	bne.n	80079f8 <__lo0bits+0x22>
 80079ec:	3002      	adds	r0, #2
 80079ee:	4203      	tst	r3, r0
 80079f0:	d003      	beq.n	80079fa <__lo0bits+0x24>
 80079f2:	40d3      	lsrs	r3, r2
 80079f4:	0010      	movs	r0, r2
 80079f6:	600b      	str	r3, [r1, #0]
 80079f8:	4770      	bx	lr
 80079fa:	089b      	lsrs	r3, r3, #2
 80079fc:	600b      	str	r3, [r1, #0]
 80079fe:	e7fb      	b.n	80079f8 <__lo0bits+0x22>
 8007a00:	b29a      	uxth	r2, r3
 8007a02:	2a00      	cmp	r2, #0
 8007a04:	d101      	bne.n	8007a0a <__lo0bits+0x34>
 8007a06:	2010      	movs	r0, #16
 8007a08:	0c1b      	lsrs	r3, r3, #16
 8007a0a:	b2da      	uxtb	r2, r3
 8007a0c:	2a00      	cmp	r2, #0
 8007a0e:	d101      	bne.n	8007a14 <__lo0bits+0x3e>
 8007a10:	3008      	adds	r0, #8
 8007a12:	0a1b      	lsrs	r3, r3, #8
 8007a14:	071a      	lsls	r2, r3, #28
 8007a16:	d101      	bne.n	8007a1c <__lo0bits+0x46>
 8007a18:	3004      	adds	r0, #4
 8007a1a:	091b      	lsrs	r3, r3, #4
 8007a1c:	079a      	lsls	r2, r3, #30
 8007a1e:	d101      	bne.n	8007a24 <__lo0bits+0x4e>
 8007a20:	3002      	adds	r0, #2
 8007a22:	089b      	lsrs	r3, r3, #2
 8007a24:	07da      	lsls	r2, r3, #31
 8007a26:	d4e9      	bmi.n	80079fc <__lo0bits+0x26>
 8007a28:	3001      	adds	r0, #1
 8007a2a:	085b      	lsrs	r3, r3, #1
 8007a2c:	d1e6      	bne.n	80079fc <__lo0bits+0x26>
 8007a2e:	2020      	movs	r0, #32
 8007a30:	e7e2      	b.n	80079f8 <__lo0bits+0x22>
	...

08007a34 <__i2b>:
 8007a34:	b510      	push	{r4, lr}
 8007a36:	000c      	movs	r4, r1
 8007a38:	2101      	movs	r1, #1
 8007a3a:	f7ff feb3 	bl	80077a4 <_Balloc>
 8007a3e:	2800      	cmp	r0, #0
 8007a40:	d107      	bne.n	8007a52 <__i2b+0x1e>
 8007a42:	2146      	movs	r1, #70	@ 0x46
 8007a44:	4c05      	ldr	r4, [pc, #20]	@ (8007a5c <__i2b+0x28>)
 8007a46:	0002      	movs	r2, r0
 8007a48:	4b05      	ldr	r3, [pc, #20]	@ (8007a60 <__i2b+0x2c>)
 8007a4a:	0020      	movs	r0, r4
 8007a4c:	31ff      	adds	r1, #255	@ 0xff
 8007a4e:	f001 fcfb 	bl	8009448 <__assert_func>
 8007a52:	2301      	movs	r3, #1
 8007a54:	6144      	str	r4, [r0, #20]
 8007a56:	6103      	str	r3, [r0, #16]
 8007a58:	bd10      	pop	{r4, pc}
 8007a5a:	46c0      	nop			@ (mov r8, r8)
 8007a5c:	0800a102 	.word	0x0800a102
 8007a60:	0800a0f1 	.word	0x0800a0f1

08007a64 <__multiply>:
 8007a64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007a66:	0014      	movs	r4, r2
 8007a68:	690a      	ldr	r2, [r1, #16]
 8007a6a:	6923      	ldr	r3, [r4, #16]
 8007a6c:	000d      	movs	r5, r1
 8007a6e:	b089      	sub	sp, #36	@ 0x24
 8007a70:	429a      	cmp	r2, r3
 8007a72:	db02      	blt.n	8007a7a <__multiply+0x16>
 8007a74:	0023      	movs	r3, r4
 8007a76:	000c      	movs	r4, r1
 8007a78:	001d      	movs	r5, r3
 8007a7a:	6927      	ldr	r7, [r4, #16]
 8007a7c:	692e      	ldr	r6, [r5, #16]
 8007a7e:	6861      	ldr	r1, [r4, #4]
 8007a80:	19bb      	adds	r3, r7, r6
 8007a82:	9300      	str	r3, [sp, #0]
 8007a84:	68a3      	ldr	r3, [r4, #8]
 8007a86:	19ba      	adds	r2, r7, r6
 8007a88:	4293      	cmp	r3, r2
 8007a8a:	da00      	bge.n	8007a8e <__multiply+0x2a>
 8007a8c:	3101      	adds	r1, #1
 8007a8e:	f7ff fe89 	bl	80077a4 <_Balloc>
 8007a92:	4684      	mov	ip, r0
 8007a94:	2800      	cmp	r0, #0
 8007a96:	d106      	bne.n	8007aa6 <__multiply+0x42>
 8007a98:	21b1      	movs	r1, #177	@ 0xb1
 8007a9a:	4662      	mov	r2, ip
 8007a9c:	4b44      	ldr	r3, [pc, #272]	@ (8007bb0 <__multiply+0x14c>)
 8007a9e:	4845      	ldr	r0, [pc, #276]	@ (8007bb4 <__multiply+0x150>)
 8007aa0:	0049      	lsls	r1, r1, #1
 8007aa2:	f001 fcd1 	bl	8009448 <__assert_func>
 8007aa6:	0002      	movs	r2, r0
 8007aa8:	19bb      	adds	r3, r7, r6
 8007aaa:	3214      	adds	r2, #20
 8007aac:	009b      	lsls	r3, r3, #2
 8007aae:	18d3      	adds	r3, r2, r3
 8007ab0:	9301      	str	r3, [sp, #4]
 8007ab2:	2100      	movs	r1, #0
 8007ab4:	0013      	movs	r3, r2
 8007ab6:	9801      	ldr	r0, [sp, #4]
 8007ab8:	4283      	cmp	r3, r0
 8007aba:	d328      	bcc.n	8007b0e <__multiply+0xaa>
 8007abc:	0023      	movs	r3, r4
 8007abe:	00bf      	lsls	r7, r7, #2
 8007ac0:	3314      	adds	r3, #20
 8007ac2:	9304      	str	r3, [sp, #16]
 8007ac4:	3514      	adds	r5, #20
 8007ac6:	19db      	adds	r3, r3, r7
 8007ac8:	00b6      	lsls	r6, r6, #2
 8007aca:	9302      	str	r3, [sp, #8]
 8007acc:	19ab      	adds	r3, r5, r6
 8007ace:	9307      	str	r3, [sp, #28]
 8007ad0:	2304      	movs	r3, #4
 8007ad2:	9305      	str	r3, [sp, #20]
 8007ad4:	0023      	movs	r3, r4
 8007ad6:	9902      	ldr	r1, [sp, #8]
 8007ad8:	3315      	adds	r3, #21
 8007ada:	4299      	cmp	r1, r3
 8007adc:	d305      	bcc.n	8007aea <__multiply+0x86>
 8007ade:	1b0c      	subs	r4, r1, r4
 8007ae0:	3c15      	subs	r4, #21
 8007ae2:	08a4      	lsrs	r4, r4, #2
 8007ae4:	3401      	adds	r4, #1
 8007ae6:	00a3      	lsls	r3, r4, #2
 8007ae8:	9305      	str	r3, [sp, #20]
 8007aea:	9b07      	ldr	r3, [sp, #28]
 8007aec:	429d      	cmp	r5, r3
 8007aee:	d310      	bcc.n	8007b12 <__multiply+0xae>
 8007af0:	9b00      	ldr	r3, [sp, #0]
 8007af2:	2b00      	cmp	r3, #0
 8007af4:	dd05      	ble.n	8007b02 <__multiply+0x9e>
 8007af6:	9b01      	ldr	r3, [sp, #4]
 8007af8:	3b04      	subs	r3, #4
 8007afa:	9301      	str	r3, [sp, #4]
 8007afc:	681b      	ldr	r3, [r3, #0]
 8007afe:	2b00      	cmp	r3, #0
 8007b00:	d052      	beq.n	8007ba8 <__multiply+0x144>
 8007b02:	4663      	mov	r3, ip
 8007b04:	4660      	mov	r0, ip
 8007b06:	9a00      	ldr	r2, [sp, #0]
 8007b08:	611a      	str	r2, [r3, #16]
 8007b0a:	b009      	add	sp, #36	@ 0x24
 8007b0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007b0e:	c302      	stmia	r3!, {r1}
 8007b10:	e7d1      	b.n	8007ab6 <__multiply+0x52>
 8007b12:	682c      	ldr	r4, [r5, #0]
 8007b14:	b2a4      	uxth	r4, r4
 8007b16:	2c00      	cmp	r4, #0
 8007b18:	d01f      	beq.n	8007b5a <__multiply+0xf6>
 8007b1a:	2300      	movs	r3, #0
 8007b1c:	0017      	movs	r7, r2
 8007b1e:	9e04      	ldr	r6, [sp, #16]
 8007b20:	9303      	str	r3, [sp, #12]
 8007b22:	ce08      	ldmia	r6!, {r3}
 8007b24:	6839      	ldr	r1, [r7, #0]
 8007b26:	9306      	str	r3, [sp, #24]
 8007b28:	466b      	mov	r3, sp
 8007b2a:	8b1b      	ldrh	r3, [r3, #24]
 8007b2c:	b288      	uxth	r0, r1
 8007b2e:	4363      	muls	r3, r4
 8007b30:	181b      	adds	r3, r3, r0
 8007b32:	9803      	ldr	r0, [sp, #12]
 8007b34:	0c09      	lsrs	r1, r1, #16
 8007b36:	181b      	adds	r3, r3, r0
 8007b38:	9806      	ldr	r0, [sp, #24]
 8007b3a:	0c00      	lsrs	r0, r0, #16
 8007b3c:	4360      	muls	r0, r4
 8007b3e:	1840      	adds	r0, r0, r1
 8007b40:	0c19      	lsrs	r1, r3, #16
 8007b42:	1841      	adds	r1, r0, r1
 8007b44:	0c08      	lsrs	r0, r1, #16
 8007b46:	b29b      	uxth	r3, r3
 8007b48:	0409      	lsls	r1, r1, #16
 8007b4a:	4319      	orrs	r1, r3
 8007b4c:	9b02      	ldr	r3, [sp, #8]
 8007b4e:	9003      	str	r0, [sp, #12]
 8007b50:	c702      	stmia	r7!, {r1}
 8007b52:	42b3      	cmp	r3, r6
 8007b54:	d8e5      	bhi.n	8007b22 <__multiply+0xbe>
 8007b56:	9b05      	ldr	r3, [sp, #20]
 8007b58:	50d0      	str	r0, [r2, r3]
 8007b5a:	682c      	ldr	r4, [r5, #0]
 8007b5c:	0c24      	lsrs	r4, r4, #16
 8007b5e:	d020      	beq.n	8007ba2 <__multiply+0x13e>
 8007b60:	2100      	movs	r1, #0
 8007b62:	0010      	movs	r0, r2
 8007b64:	6813      	ldr	r3, [r2, #0]
 8007b66:	9e04      	ldr	r6, [sp, #16]
 8007b68:	9103      	str	r1, [sp, #12]
 8007b6a:	6831      	ldr	r1, [r6, #0]
 8007b6c:	6807      	ldr	r7, [r0, #0]
 8007b6e:	b289      	uxth	r1, r1
 8007b70:	4361      	muls	r1, r4
 8007b72:	0c3f      	lsrs	r7, r7, #16
 8007b74:	19c9      	adds	r1, r1, r7
 8007b76:	9f03      	ldr	r7, [sp, #12]
 8007b78:	b29b      	uxth	r3, r3
 8007b7a:	19c9      	adds	r1, r1, r7
 8007b7c:	040f      	lsls	r7, r1, #16
 8007b7e:	431f      	orrs	r7, r3
 8007b80:	6007      	str	r7, [r0, #0]
 8007b82:	ce80      	ldmia	r6!, {r7}
 8007b84:	6843      	ldr	r3, [r0, #4]
 8007b86:	0c3f      	lsrs	r7, r7, #16
 8007b88:	4367      	muls	r7, r4
 8007b8a:	b29b      	uxth	r3, r3
 8007b8c:	0c09      	lsrs	r1, r1, #16
 8007b8e:	18fb      	adds	r3, r7, r3
 8007b90:	185b      	adds	r3, r3, r1
 8007b92:	0c19      	lsrs	r1, r3, #16
 8007b94:	9103      	str	r1, [sp, #12]
 8007b96:	9902      	ldr	r1, [sp, #8]
 8007b98:	3004      	adds	r0, #4
 8007b9a:	42b1      	cmp	r1, r6
 8007b9c:	d8e5      	bhi.n	8007b6a <__multiply+0x106>
 8007b9e:	9905      	ldr	r1, [sp, #20]
 8007ba0:	5053      	str	r3, [r2, r1]
 8007ba2:	3504      	adds	r5, #4
 8007ba4:	3204      	adds	r2, #4
 8007ba6:	e7a0      	b.n	8007aea <__multiply+0x86>
 8007ba8:	9b00      	ldr	r3, [sp, #0]
 8007baa:	3b01      	subs	r3, #1
 8007bac:	9300      	str	r3, [sp, #0]
 8007bae:	e79f      	b.n	8007af0 <__multiply+0x8c>
 8007bb0:	0800a0f1 	.word	0x0800a0f1
 8007bb4:	0800a102 	.word	0x0800a102

08007bb8 <__pow5mult>:
 8007bb8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007bba:	2303      	movs	r3, #3
 8007bbc:	0015      	movs	r5, r2
 8007bbe:	0007      	movs	r7, r0
 8007bc0:	000e      	movs	r6, r1
 8007bc2:	401a      	ands	r2, r3
 8007bc4:	421d      	tst	r5, r3
 8007bc6:	d008      	beq.n	8007bda <__pow5mult+0x22>
 8007bc8:	4925      	ldr	r1, [pc, #148]	@ (8007c60 <__pow5mult+0xa8>)
 8007bca:	3a01      	subs	r2, #1
 8007bcc:	0092      	lsls	r2, r2, #2
 8007bce:	5852      	ldr	r2, [r2, r1]
 8007bd0:	2300      	movs	r3, #0
 8007bd2:	0031      	movs	r1, r6
 8007bd4:	f7ff fe4e 	bl	8007874 <__multadd>
 8007bd8:	0006      	movs	r6, r0
 8007bda:	10ad      	asrs	r5, r5, #2
 8007bdc:	d03d      	beq.n	8007c5a <__pow5mult+0xa2>
 8007bde:	69fc      	ldr	r4, [r7, #28]
 8007be0:	2c00      	cmp	r4, #0
 8007be2:	d10f      	bne.n	8007c04 <__pow5mult+0x4c>
 8007be4:	2010      	movs	r0, #16
 8007be6:	f7ff fd21 	bl	800762c <malloc>
 8007bea:	1e02      	subs	r2, r0, #0
 8007bec:	61f8      	str	r0, [r7, #28]
 8007bee:	d105      	bne.n	8007bfc <__pow5mult+0x44>
 8007bf0:	21b4      	movs	r1, #180	@ 0xb4
 8007bf2:	4b1c      	ldr	r3, [pc, #112]	@ (8007c64 <__pow5mult+0xac>)
 8007bf4:	481c      	ldr	r0, [pc, #112]	@ (8007c68 <__pow5mult+0xb0>)
 8007bf6:	31ff      	adds	r1, #255	@ 0xff
 8007bf8:	f001 fc26 	bl	8009448 <__assert_func>
 8007bfc:	6044      	str	r4, [r0, #4]
 8007bfe:	6084      	str	r4, [r0, #8]
 8007c00:	6004      	str	r4, [r0, #0]
 8007c02:	60c4      	str	r4, [r0, #12]
 8007c04:	69fb      	ldr	r3, [r7, #28]
 8007c06:	689c      	ldr	r4, [r3, #8]
 8007c08:	9301      	str	r3, [sp, #4]
 8007c0a:	2c00      	cmp	r4, #0
 8007c0c:	d108      	bne.n	8007c20 <__pow5mult+0x68>
 8007c0e:	0038      	movs	r0, r7
 8007c10:	4916      	ldr	r1, [pc, #88]	@ (8007c6c <__pow5mult+0xb4>)
 8007c12:	f7ff ff0f 	bl	8007a34 <__i2b>
 8007c16:	9b01      	ldr	r3, [sp, #4]
 8007c18:	0004      	movs	r4, r0
 8007c1a:	6098      	str	r0, [r3, #8]
 8007c1c:	2300      	movs	r3, #0
 8007c1e:	6003      	str	r3, [r0, #0]
 8007c20:	2301      	movs	r3, #1
 8007c22:	421d      	tst	r5, r3
 8007c24:	d00a      	beq.n	8007c3c <__pow5mult+0x84>
 8007c26:	0031      	movs	r1, r6
 8007c28:	0022      	movs	r2, r4
 8007c2a:	0038      	movs	r0, r7
 8007c2c:	f7ff ff1a 	bl	8007a64 <__multiply>
 8007c30:	0031      	movs	r1, r6
 8007c32:	9001      	str	r0, [sp, #4]
 8007c34:	0038      	movs	r0, r7
 8007c36:	f7ff fdf9 	bl	800782c <_Bfree>
 8007c3a:	9e01      	ldr	r6, [sp, #4]
 8007c3c:	106d      	asrs	r5, r5, #1
 8007c3e:	d00c      	beq.n	8007c5a <__pow5mult+0xa2>
 8007c40:	6820      	ldr	r0, [r4, #0]
 8007c42:	2800      	cmp	r0, #0
 8007c44:	d107      	bne.n	8007c56 <__pow5mult+0x9e>
 8007c46:	0022      	movs	r2, r4
 8007c48:	0021      	movs	r1, r4
 8007c4a:	0038      	movs	r0, r7
 8007c4c:	f7ff ff0a 	bl	8007a64 <__multiply>
 8007c50:	2300      	movs	r3, #0
 8007c52:	6020      	str	r0, [r4, #0]
 8007c54:	6003      	str	r3, [r0, #0]
 8007c56:	0004      	movs	r4, r0
 8007c58:	e7e2      	b.n	8007c20 <__pow5mult+0x68>
 8007c5a:	0030      	movs	r0, r6
 8007c5c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8007c5e:	46c0      	nop			@ (mov r8, r8)
 8007c60:	0800a214 	.word	0x0800a214
 8007c64:	0800a082 	.word	0x0800a082
 8007c68:	0800a102 	.word	0x0800a102
 8007c6c:	00000271 	.word	0x00000271

08007c70 <__lshift>:
 8007c70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007c72:	000c      	movs	r4, r1
 8007c74:	0016      	movs	r6, r2
 8007c76:	6923      	ldr	r3, [r4, #16]
 8007c78:	1157      	asrs	r7, r2, #5
 8007c7a:	b085      	sub	sp, #20
 8007c7c:	18fb      	adds	r3, r7, r3
 8007c7e:	9301      	str	r3, [sp, #4]
 8007c80:	3301      	adds	r3, #1
 8007c82:	9300      	str	r3, [sp, #0]
 8007c84:	6849      	ldr	r1, [r1, #4]
 8007c86:	68a3      	ldr	r3, [r4, #8]
 8007c88:	9002      	str	r0, [sp, #8]
 8007c8a:	9a00      	ldr	r2, [sp, #0]
 8007c8c:	4293      	cmp	r3, r2
 8007c8e:	db10      	blt.n	8007cb2 <__lshift+0x42>
 8007c90:	9802      	ldr	r0, [sp, #8]
 8007c92:	f7ff fd87 	bl	80077a4 <_Balloc>
 8007c96:	2300      	movs	r3, #0
 8007c98:	0001      	movs	r1, r0
 8007c9a:	0005      	movs	r5, r0
 8007c9c:	001a      	movs	r2, r3
 8007c9e:	3114      	adds	r1, #20
 8007ca0:	4298      	cmp	r0, r3
 8007ca2:	d10c      	bne.n	8007cbe <__lshift+0x4e>
 8007ca4:	21ef      	movs	r1, #239	@ 0xef
 8007ca6:	002a      	movs	r2, r5
 8007ca8:	4b25      	ldr	r3, [pc, #148]	@ (8007d40 <__lshift+0xd0>)
 8007caa:	4826      	ldr	r0, [pc, #152]	@ (8007d44 <__lshift+0xd4>)
 8007cac:	0049      	lsls	r1, r1, #1
 8007cae:	f001 fbcb 	bl	8009448 <__assert_func>
 8007cb2:	3101      	adds	r1, #1
 8007cb4:	005b      	lsls	r3, r3, #1
 8007cb6:	e7e8      	b.n	8007c8a <__lshift+0x1a>
 8007cb8:	0098      	lsls	r0, r3, #2
 8007cba:	500a      	str	r2, [r1, r0]
 8007cbc:	3301      	adds	r3, #1
 8007cbe:	42bb      	cmp	r3, r7
 8007cc0:	dbfa      	blt.n	8007cb8 <__lshift+0x48>
 8007cc2:	43fb      	mvns	r3, r7
 8007cc4:	17db      	asrs	r3, r3, #31
 8007cc6:	401f      	ands	r7, r3
 8007cc8:	00bf      	lsls	r7, r7, #2
 8007cca:	0023      	movs	r3, r4
 8007ccc:	201f      	movs	r0, #31
 8007cce:	19c9      	adds	r1, r1, r7
 8007cd0:	0037      	movs	r7, r6
 8007cd2:	6922      	ldr	r2, [r4, #16]
 8007cd4:	3314      	adds	r3, #20
 8007cd6:	0092      	lsls	r2, r2, #2
 8007cd8:	189a      	adds	r2, r3, r2
 8007cda:	4007      	ands	r7, r0
 8007cdc:	4206      	tst	r6, r0
 8007cde:	d029      	beq.n	8007d34 <__lshift+0xc4>
 8007ce0:	3001      	adds	r0, #1
 8007ce2:	1bc0      	subs	r0, r0, r7
 8007ce4:	9003      	str	r0, [sp, #12]
 8007ce6:	468c      	mov	ip, r1
 8007ce8:	2000      	movs	r0, #0
 8007cea:	681e      	ldr	r6, [r3, #0]
 8007cec:	40be      	lsls	r6, r7
 8007cee:	4306      	orrs	r6, r0
 8007cf0:	4660      	mov	r0, ip
 8007cf2:	c040      	stmia	r0!, {r6}
 8007cf4:	4684      	mov	ip, r0
 8007cf6:	9e03      	ldr	r6, [sp, #12]
 8007cf8:	cb01      	ldmia	r3!, {r0}
 8007cfa:	40f0      	lsrs	r0, r6
 8007cfc:	429a      	cmp	r2, r3
 8007cfe:	d8f4      	bhi.n	8007cea <__lshift+0x7a>
 8007d00:	0026      	movs	r6, r4
 8007d02:	3615      	adds	r6, #21
 8007d04:	2304      	movs	r3, #4
 8007d06:	42b2      	cmp	r2, r6
 8007d08:	d304      	bcc.n	8007d14 <__lshift+0xa4>
 8007d0a:	1b13      	subs	r3, r2, r4
 8007d0c:	3b15      	subs	r3, #21
 8007d0e:	089b      	lsrs	r3, r3, #2
 8007d10:	3301      	adds	r3, #1
 8007d12:	009b      	lsls	r3, r3, #2
 8007d14:	50c8      	str	r0, [r1, r3]
 8007d16:	2800      	cmp	r0, #0
 8007d18:	d002      	beq.n	8007d20 <__lshift+0xb0>
 8007d1a:	9b01      	ldr	r3, [sp, #4]
 8007d1c:	3302      	adds	r3, #2
 8007d1e:	9300      	str	r3, [sp, #0]
 8007d20:	9b00      	ldr	r3, [sp, #0]
 8007d22:	9802      	ldr	r0, [sp, #8]
 8007d24:	3b01      	subs	r3, #1
 8007d26:	0021      	movs	r1, r4
 8007d28:	612b      	str	r3, [r5, #16]
 8007d2a:	f7ff fd7f 	bl	800782c <_Bfree>
 8007d2e:	0028      	movs	r0, r5
 8007d30:	b005      	add	sp, #20
 8007d32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007d34:	cb01      	ldmia	r3!, {r0}
 8007d36:	c101      	stmia	r1!, {r0}
 8007d38:	429a      	cmp	r2, r3
 8007d3a:	d8fb      	bhi.n	8007d34 <__lshift+0xc4>
 8007d3c:	e7f0      	b.n	8007d20 <__lshift+0xb0>
 8007d3e:	46c0      	nop			@ (mov r8, r8)
 8007d40:	0800a0f1 	.word	0x0800a0f1
 8007d44:	0800a102 	.word	0x0800a102

08007d48 <__mcmp>:
 8007d48:	b530      	push	{r4, r5, lr}
 8007d4a:	690b      	ldr	r3, [r1, #16]
 8007d4c:	6904      	ldr	r4, [r0, #16]
 8007d4e:	0002      	movs	r2, r0
 8007d50:	1ae0      	subs	r0, r4, r3
 8007d52:	429c      	cmp	r4, r3
 8007d54:	d10f      	bne.n	8007d76 <__mcmp+0x2e>
 8007d56:	3214      	adds	r2, #20
 8007d58:	009b      	lsls	r3, r3, #2
 8007d5a:	3114      	adds	r1, #20
 8007d5c:	0014      	movs	r4, r2
 8007d5e:	18c9      	adds	r1, r1, r3
 8007d60:	18d2      	adds	r2, r2, r3
 8007d62:	3a04      	subs	r2, #4
 8007d64:	3904      	subs	r1, #4
 8007d66:	6815      	ldr	r5, [r2, #0]
 8007d68:	680b      	ldr	r3, [r1, #0]
 8007d6a:	429d      	cmp	r5, r3
 8007d6c:	d004      	beq.n	8007d78 <__mcmp+0x30>
 8007d6e:	2001      	movs	r0, #1
 8007d70:	429d      	cmp	r5, r3
 8007d72:	d200      	bcs.n	8007d76 <__mcmp+0x2e>
 8007d74:	3802      	subs	r0, #2
 8007d76:	bd30      	pop	{r4, r5, pc}
 8007d78:	4294      	cmp	r4, r2
 8007d7a:	d3f2      	bcc.n	8007d62 <__mcmp+0x1a>
 8007d7c:	e7fb      	b.n	8007d76 <__mcmp+0x2e>
	...

08007d80 <__mdiff>:
 8007d80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007d82:	000c      	movs	r4, r1
 8007d84:	b087      	sub	sp, #28
 8007d86:	9000      	str	r0, [sp, #0]
 8007d88:	0011      	movs	r1, r2
 8007d8a:	0020      	movs	r0, r4
 8007d8c:	0017      	movs	r7, r2
 8007d8e:	f7ff ffdb 	bl	8007d48 <__mcmp>
 8007d92:	1e05      	subs	r5, r0, #0
 8007d94:	d110      	bne.n	8007db8 <__mdiff+0x38>
 8007d96:	0001      	movs	r1, r0
 8007d98:	9800      	ldr	r0, [sp, #0]
 8007d9a:	f7ff fd03 	bl	80077a4 <_Balloc>
 8007d9e:	1e02      	subs	r2, r0, #0
 8007da0:	d104      	bne.n	8007dac <__mdiff+0x2c>
 8007da2:	4b40      	ldr	r3, [pc, #256]	@ (8007ea4 <__mdiff+0x124>)
 8007da4:	4840      	ldr	r0, [pc, #256]	@ (8007ea8 <__mdiff+0x128>)
 8007da6:	4941      	ldr	r1, [pc, #260]	@ (8007eac <__mdiff+0x12c>)
 8007da8:	f001 fb4e 	bl	8009448 <__assert_func>
 8007dac:	2301      	movs	r3, #1
 8007dae:	6145      	str	r5, [r0, #20]
 8007db0:	6103      	str	r3, [r0, #16]
 8007db2:	0010      	movs	r0, r2
 8007db4:	b007      	add	sp, #28
 8007db6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007db8:	2600      	movs	r6, #0
 8007dba:	42b0      	cmp	r0, r6
 8007dbc:	da03      	bge.n	8007dc6 <__mdiff+0x46>
 8007dbe:	0023      	movs	r3, r4
 8007dc0:	003c      	movs	r4, r7
 8007dc2:	001f      	movs	r7, r3
 8007dc4:	3601      	adds	r6, #1
 8007dc6:	6861      	ldr	r1, [r4, #4]
 8007dc8:	9800      	ldr	r0, [sp, #0]
 8007dca:	f7ff fceb 	bl	80077a4 <_Balloc>
 8007dce:	1e02      	subs	r2, r0, #0
 8007dd0:	d103      	bne.n	8007dda <__mdiff+0x5a>
 8007dd2:	4b34      	ldr	r3, [pc, #208]	@ (8007ea4 <__mdiff+0x124>)
 8007dd4:	4834      	ldr	r0, [pc, #208]	@ (8007ea8 <__mdiff+0x128>)
 8007dd6:	4936      	ldr	r1, [pc, #216]	@ (8007eb0 <__mdiff+0x130>)
 8007dd8:	e7e6      	b.n	8007da8 <__mdiff+0x28>
 8007dda:	6923      	ldr	r3, [r4, #16]
 8007ddc:	3414      	adds	r4, #20
 8007dde:	9300      	str	r3, [sp, #0]
 8007de0:	009b      	lsls	r3, r3, #2
 8007de2:	18e3      	adds	r3, r4, r3
 8007de4:	0021      	movs	r1, r4
 8007de6:	9401      	str	r4, [sp, #4]
 8007de8:	003c      	movs	r4, r7
 8007dea:	9302      	str	r3, [sp, #8]
 8007dec:	693b      	ldr	r3, [r7, #16]
 8007dee:	3414      	adds	r4, #20
 8007df0:	009b      	lsls	r3, r3, #2
 8007df2:	18e3      	adds	r3, r4, r3
 8007df4:	9303      	str	r3, [sp, #12]
 8007df6:	0003      	movs	r3, r0
 8007df8:	60c6      	str	r6, [r0, #12]
 8007dfa:	468c      	mov	ip, r1
 8007dfc:	2000      	movs	r0, #0
 8007dfe:	3314      	adds	r3, #20
 8007e00:	9304      	str	r3, [sp, #16]
 8007e02:	9305      	str	r3, [sp, #20]
 8007e04:	4663      	mov	r3, ip
 8007e06:	cb20      	ldmia	r3!, {r5}
 8007e08:	b2a9      	uxth	r1, r5
 8007e0a:	000e      	movs	r6, r1
 8007e0c:	469c      	mov	ip, r3
 8007e0e:	cc08      	ldmia	r4!, {r3}
 8007e10:	0c2d      	lsrs	r5, r5, #16
 8007e12:	b299      	uxth	r1, r3
 8007e14:	1a71      	subs	r1, r6, r1
 8007e16:	1809      	adds	r1, r1, r0
 8007e18:	0c1b      	lsrs	r3, r3, #16
 8007e1a:	1408      	asrs	r0, r1, #16
 8007e1c:	1aeb      	subs	r3, r5, r3
 8007e1e:	181b      	adds	r3, r3, r0
 8007e20:	1418      	asrs	r0, r3, #16
 8007e22:	b289      	uxth	r1, r1
 8007e24:	041b      	lsls	r3, r3, #16
 8007e26:	4319      	orrs	r1, r3
 8007e28:	9b05      	ldr	r3, [sp, #20]
 8007e2a:	c302      	stmia	r3!, {r1}
 8007e2c:	9305      	str	r3, [sp, #20]
 8007e2e:	9b03      	ldr	r3, [sp, #12]
 8007e30:	42a3      	cmp	r3, r4
 8007e32:	d8e7      	bhi.n	8007e04 <__mdiff+0x84>
 8007e34:	0039      	movs	r1, r7
 8007e36:	9c03      	ldr	r4, [sp, #12]
 8007e38:	3115      	adds	r1, #21
 8007e3a:	2304      	movs	r3, #4
 8007e3c:	428c      	cmp	r4, r1
 8007e3e:	d304      	bcc.n	8007e4a <__mdiff+0xca>
 8007e40:	1be3      	subs	r3, r4, r7
 8007e42:	3b15      	subs	r3, #21
 8007e44:	089b      	lsrs	r3, r3, #2
 8007e46:	3301      	adds	r3, #1
 8007e48:	009b      	lsls	r3, r3, #2
 8007e4a:	9901      	ldr	r1, [sp, #4]
 8007e4c:	18cd      	adds	r5, r1, r3
 8007e4e:	9904      	ldr	r1, [sp, #16]
 8007e50:	002e      	movs	r6, r5
 8007e52:	18cb      	adds	r3, r1, r3
 8007e54:	001f      	movs	r7, r3
 8007e56:	9902      	ldr	r1, [sp, #8]
 8007e58:	428e      	cmp	r6, r1
 8007e5a:	d311      	bcc.n	8007e80 <__mdiff+0x100>
 8007e5c:	9c02      	ldr	r4, [sp, #8]
 8007e5e:	1ee9      	subs	r1, r5, #3
 8007e60:	2000      	movs	r0, #0
 8007e62:	428c      	cmp	r4, r1
 8007e64:	d304      	bcc.n	8007e70 <__mdiff+0xf0>
 8007e66:	0021      	movs	r1, r4
 8007e68:	3103      	adds	r1, #3
 8007e6a:	1b49      	subs	r1, r1, r5
 8007e6c:	0889      	lsrs	r1, r1, #2
 8007e6e:	0088      	lsls	r0, r1, #2
 8007e70:	181b      	adds	r3, r3, r0
 8007e72:	3b04      	subs	r3, #4
 8007e74:	6819      	ldr	r1, [r3, #0]
 8007e76:	2900      	cmp	r1, #0
 8007e78:	d010      	beq.n	8007e9c <__mdiff+0x11c>
 8007e7a:	9b00      	ldr	r3, [sp, #0]
 8007e7c:	6113      	str	r3, [r2, #16]
 8007e7e:	e798      	b.n	8007db2 <__mdiff+0x32>
 8007e80:	4684      	mov	ip, r0
 8007e82:	ce02      	ldmia	r6!, {r1}
 8007e84:	b288      	uxth	r0, r1
 8007e86:	4460      	add	r0, ip
 8007e88:	1400      	asrs	r0, r0, #16
 8007e8a:	0c0c      	lsrs	r4, r1, #16
 8007e8c:	1904      	adds	r4, r0, r4
 8007e8e:	4461      	add	r1, ip
 8007e90:	1420      	asrs	r0, r4, #16
 8007e92:	b289      	uxth	r1, r1
 8007e94:	0424      	lsls	r4, r4, #16
 8007e96:	4321      	orrs	r1, r4
 8007e98:	c702      	stmia	r7!, {r1}
 8007e9a:	e7dc      	b.n	8007e56 <__mdiff+0xd6>
 8007e9c:	9900      	ldr	r1, [sp, #0]
 8007e9e:	3901      	subs	r1, #1
 8007ea0:	9100      	str	r1, [sp, #0]
 8007ea2:	e7e6      	b.n	8007e72 <__mdiff+0xf2>
 8007ea4:	0800a0f1 	.word	0x0800a0f1
 8007ea8:	0800a102 	.word	0x0800a102
 8007eac:	00000237 	.word	0x00000237
 8007eb0:	00000245 	.word	0x00000245

08007eb4 <__ulp>:
 8007eb4:	b510      	push	{r4, lr}
 8007eb6:	2400      	movs	r4, #0
 8007eb8:	4b0c      	ldr	r3, [pc, #48]	@ (8007eec <__ulp+0x38>)
 8007eba:	4a0d      	ldr	r2, [pc, #52]	@ (8007ef0 <__ulp+0x3c>)
 8007ebc:	400b      	ands	r3, r1
 8007ebe:	189b      	adds	r3, r3, r2
 8007ec0:	42a3      	cmp	r3, r4
 8007ec2:	dc06      	bgt.n	8007ed2 <__ulp+0x1e>
 8007ec4:	425b      	negs	r3, r3
 8007ec6:	151a      	asrs	r2, r3, #20
 8007ec8:	2a13      	cmp	r2, #19
 8007eca:	dc05      	bgt.n	8007ed8 <__ulp+0x24>
 8007ecc:	2380      	movs	r3, #128	@ 0x80
 8007ece:	031b      	lsls	r3, r3, #12
 8007ed0:	4113      	asrs	r3, r2
 8007ed2:	0019      	movs	r1, r3
 8007ed4:	0020      	movs	r0, r4
 8007ed6:	bd10      	pop	{r4, pc}
 8007ed8:	3a14      	subs	r2, #20
 8007eda:	2401      	movs	r4, #1
 8007edc:	2a1e      	cmp	r2, #30
 8007ede:	dc02      	bgt.n	8007ee6 <__ulp+0x32>
 8007ee0:	2480      	movs	r4, #128	@ 0x80
 8007ee2:	0624      	lsls	r4, r4, #24
 8007ee4:	40d4      	lsrs	r4, r2
 8007ee6:	2300      	movs	r3, #0
 8007ee8:	e7f3      	b.n	8007ed2 <__ulp+0x1e>
 8007eea:	46c0      	nop			@ (mov r8, r8)
 8007eec:	7ff00000 	.word	0x7ff00000
 8007ef0:	fcc00000 	.word	0xfcc00000

08007ef4 <__b2d>:
 8007ef4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007ef6:	0006      	movs	r6, r0
 8007ef8:	6903      	ldr	r3, [r0, #16]
 8007efa:	3614      	adds	r6, #20
 8007efc:	009b      	lsls	r3, r3, #2
 8007efe:	18f3      	adds	r3, r6, r3
 8007f00:	1f1d      	subs	r5, r3, #4
 8007f02:	682c      	ldr	r4, [r5, #0]
 8007f04:	000f      	movs	r7, r1
 8007f06:	0020      	movs	r0, r4
 8007f08:	9301      	str	r3, [sp, #4]
 8007f0a:	f7ff fd43 	bl	8007994 <__hi0bits>
 8007f0e:	2220      	movs	r2, #32
 8007f10:	1a12      	subs	r2, r2, r0
 8007f12:	603a      	str	r2, [r7, #0]
 8007f14:	0003      	movs	r3, r0
 8007f16:	4a1c      	ldr	r2, [pc, #112]	@ (8007f88 <__b2d+0x94>)
 8007f18:	280a      	cmp	r0, #10
 8007f1a:	dc15      	bgt.n	8007f48 <__b2d+0x54>
 8007f1c:	210b      	movs	r1, #11
 8007f1e:	0027      	movs	r7, r4
 8007f20:	1a09      	subs	r1, r1, r0
 8007f22:	40cf      	lsrs	r7, r1
 8007f24:	433a      	orrs	r2, r7
 8007f26:	468c      	mov	ip, r1
 8007f28:	0011      	movs	r1, r2
 8007f2a:	2200      	movs	r2, #0
 8007f2c:	42ae      	cmp	r6, r5
 8007f2e:	d202      	bcs.n	8007f36 <__b2d+0x42>
 8007f30:	9a01      	ldr	r2, [sp, #4]
 8007f32:	3a08      	subs	r2, #8
 8007f34:	6812      	ldr	r2, [r2, #0]
 8007f36:	3315      	adds	r3, #21
 8007f38:	409c      	lsls	r4, r3
 8007f3a:	4663      	mov	r3, ip
 8007f3c:	0027      	movs	r7, r4
 8007f3e:	40da      	lsrs	r2, r3
 8007f40:	4317      	orrs	r7, r2
 8007f42:	0038      	movs	r0, r7
 8007f44:	b003      	add	sp, #12
 8007f46:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007f48:	2700      	movs	r7, #0
 8007f4a:	42ae      	cmp	r6, r5
 8007f4c:	d202      	bcs.n	8007f54 <__b2d+0x60>
 8007f4e:	9d01      	ldr	r5, [sp, #4]
 8007f50:	3d08      	subs	r5, #8
 8007f52:	682f      	ldr	r7, [r5, #0]
 8007f54:	210b      	movs	r1, #11
 8007f56:	4249      	negs	r1, r1
 8007f58:	468c      	mov	ip, r1
 8007f5a:	449c      	add	ip, r3
 8007f5c:	2b0b      	cmp	r3, #11
 8007f5e:	d010      	beq.n	8007f82 <__b2d+0x8e>
 8007f60:	4661      	mov	r1, ip
 8007f62:	2320      	movs	r3, #32
 8007f64:	408c      	lsls	r4, r1
 8007f66:	1a5b      	subs	r3, r3, r1
 8007f68:	0039      	movs	r1, r7
 8007f6a:	40d9      	lsrs	r1, r3
 8007f6c:	430c      	orrs	r4, r1
 8007f6e:	4322      	orrs	r2, r4
 8007f70:	0011      	movs	r1, r2
 8007f72:	2200      	movs	r2, #0
 8007f74:	42b5      	cmp	r5, r6
 8007f76:	d901      	bls.n	8007f7c <__b2d+0x88>
 8007f78:	3d04      	subs	r5, #4
 8007f7a:	682a      	ldr	r2, [r5, #0]
 8007f7c:	4664      	mov	r4, ip
 8007f7e:	40a7      	lsls	r7, r4
 8007f80:	e7dd      	b.n	8007f3e <__b2d+0x4a>
 8007f82:	4322      	orrs	r2, r4
 8007f84:	0011      	movs	r1, r2
 8007f86:	e7dc      	b.n	8007f42 <__b2d+0x4e>
 8007f88:	3ff00000 	.word	0x3ff00000

08007f8c <__d2b>:
 8007f8c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007f8e:	2101      	movs	r1, #1
 8007f90:	0016      	movs	r6, r2
 8007f92:	001f      	movs	r7, r3
 8007f94:	f7ff fc06 	bl	80077a4 <_Balloc>
 8007f98:	1e04      	subs	r4, r0, #0
 8007f9a:	d105      	bne.n	8007fa8 <__d2b+0x1c>
 8007f9c:	0022      	movs	r2, r4
 8007f9e:	4b25      	ldr	r3, [pc, #148]	@ (8008034 <__d2b+0xa8>)
 8007fa0:	4825      	ldr	r0, [pc, #148]	@ (8008038 <__d2b+0xac>)
 8007fa2:	4926      	ldr	r1, [pc, #152]	@ (800803c <__d2b+0xb0>)
 8007fa4:	f001 fa50 	bl	8009448 <__assert_func>
 8007fa8:	033b      	lsls	r3, r7, #12
 8007faa:	007d      	lsls	r5, r7, #1
 8007fac:	0b1b      	lsrs	r3, r3, #12
 8007fae:	0d6d      	lsrs	r5, r5, #21
 8007fb0:	d002      	beq.n	8007fb8 <__d2b+0x2c>
 8007fb2:	2280      	movs	r2, #128	@ 0x80
 8007fb4:	0352      	lsls	r2, r2, #13
 8007fb6:	4313      	orrs	r3, r2
 8007fb8:	9301      	str	r3, [sp, #4]
 8007fba:	2e00      	cmp	r6, #0
 8007fbc:	d025      	beq.n	800800a <__d2b+0x7e>
 8007fbe:	4668      	mov	r0, sp
 8007fc0:	9600      	str	r6, [sp, #0]
 8007fc2:	f7ff fd08 	bl	80079d6 <__lo0bits>
 8007fc6:	9b01      	ldr	r3, [sp, #4]
 8007fc8:	9900      	ldr	r1, [sp, #0]
 8007fca:	2800      	cmp	r0, #0
 8007fcc:	d01b      	beq.n	8008006 <__d2b+0x7a>
 8007fce:	2220      	movs	r2, #32
 8007fd0:	001e      	movs	r6, r3
 8007fd2:	1a12      	subs	r2, r2, r0
 8007fd4:	4096      	lsls	r6, r2
 8007fd6:	0032      	movs	r2, r6
 8007fd8:	40c3      	lsrs	r3, r0
 8007fda:	430a      	orrs	r2, r1
 8007fdc:	6162      	str	r2, [r4, #20]
 8007fde:	9301      	str	r3, [sp, #4]
 8007fe0:	9e01      	ldr	r6, [sp, #4]
 8007fe2:	61a6      	str	r6, [r4, #24]
 8007fe4:	1e73      	subs	r3, r6, #1
 8007fe6:	419e      	sbcs	r6, r3
 8007fe8:	3601      	adds	r6, #1
 8007fea:	6126      	str	r6, [r4, #16]
 8007fec:	2d00      	cmp	r5, #0
 8007fee:	d014      	beq.n	800801a <__d2b+0x8e>
 8007ff0:	2635      	movs	r6, #53	@ 0x35
 8007ff2:	4b13      	ldr	r3, [pc, #76]	@ (8008040 <__d2b+0xb4>)
 8007ff4:	18ed      	adds	r5, r5, r3
 8007ff6:	9b08      	ldr	r3, [sp, #32]
 8007ff8:	182d      	adds	r5, r5, r0
 8007ffa:	601d      	str	r5, [r3, #0]
 8007ffc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007ffe:	1a36      	subs	r6, r6, r0
 8008000:	601e      	str	r6, [r3, #0]
 8008002:	0020      	movs	r0, r4
 8008004:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8008006:	6161      	str	r1, [r4, #20]
 8008008:	e7ea      	b.n	8007fe0 <__d2b+0x54>
 800800a:	a801      	add	r0, sp, #4
 800800c:	f7ff fce3 	bl	80079d6 <__lo0bits>
 8008010:	9b01      	ldr	r3, [sp, #4]
 8008012:	2601      	movs	r6, #1
 8008014:	6163      	str	r3, [r4, #20]
 8008016:	3020      	adds	r0, #32
 8008018:	e7e7      	b.n	8007fea <__d2b+0x5e>
 800801a:	4b0a      	ldr	r3, [pc, #40]	@ (8008044 <__d2b+0xb8>)
 800801c:	18c0      	adds	r0, r0, r3
 800801e:	9b08      	ldr	r3, [sp, #32]
 8008020:	6018      	str	r0, [r3, #0]
 8008022:	4b09      	ldr	r3, [pc, #36]	@ (8008048 <__d2b+0xbc>)
 8008024:	18f3      	adds	r3, r6, r3
 8008026:	009b      	lsls	r3, r3, #2
 8008028:	18e3      	adds	r3, r4, r3
 800802a:	6958      	ldr	r0, [r3, #20]
 800802c:	f7ff fcb2 	bl	8007994 <__hi0bits>
 8008030:	0176      	lsls	r6, r6, #5
 8008032:	e7e3      	b.n	8007ffc <__d2b+0x70>
 8008034:	0800a0f1 	.word	0x0800a0f1
 8008038:	0800a102 	.word	0x0800a102
 800803c:	0000030f 	.word	0x0000030f
 8008040:	fffffbcd 	.word	0xfffffbcd
 8008044:	fffffbce 	.word	0xfffffbce
 8008048:	3fffffff 	.word	0x3fffffff

0800804c <__ratio>:
 800804c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800804e:	b087      	sub	sp, #28
 8008050:	000f      	movs	r7, r1
 8008052:	a904      	add	r1, sp, #16
 8008054:	0006      	movs	r6, r0
 8008056:	f7ff ff4d 	bl	8007ef4 <__b2d>
 800805a:	9000      	str	r0, [sp, #0]
 800805c:	9101      	str	r1, [sp, #4]
 800805e:	9b00      	ldr	r3, [sp, #0]
 8008060:	9c01      	ldr	r4, [sp, #4]
 8008062:	0038      	movs	r0, r7
 8008064:	a905      	add	r1, sp, #20
 8008066:	9302      	str	r3, [sp, #8]
 8008068:	9403      	str	r4, [sp, #12]
 800806a:	f7ff ff43 	bl	8007ef4 <__b2d>
 800806e:	000d      	movs	r5, r1
 8008070:	0002      	movs	r2, r0
 8008072:	000b      	movs	r3, r1
 8008074:	6930      	ldr	r0, [r6, #16]
 8008076:	6939      	ldr	r1, [r7, #16]
 8008078:	9e04      	ldr	r6, [sp, #16]
 800807a:	1a40      	subs	r0, r0, r1
 800807c:	9905      	ldr	r1, [sp, #20]
 800807e:	0140      	lsls	r0, r0, #5
 8008080:	1a71      	subs	r1, r6, r1
 8008082:	1841      	adds	r1, r0, r1
 8008084:	0508      	lsls	r0, r1, #20
 8008086:	2900      	cmp	r1, #0
 8008088:	dd08      	ble.n	800809c <__ratio+0x50>
 800808a:	9901      	ldr	r1, [sp, #4]
 800808c:	1841      	adds	r1, r0, r1
 800808e:	9103      	str	r1, [sp, #12]
 8008090:	9802      	ldr	r0, [sp, #8]
 8008092:	9903      	ldr	r1, [sp, #12]
 8008094:	f7f9 f8d8 	bl	8001248 <__aeabi_ddiv>
 8008098:	b007      	add	sp, #28
 800809a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800809c:	1a2b      	subs	r3, r5, r0
 800809e:	e7f7      	b.n	8008090 <__ratio+0x44>

080080a0 <__copybits>:
 80080a0:	b570      	push	{r4, r5, r6, lr}
 80080a2:	0014      	movs	r4, r2
 80080a4:	0005      	movs	r5, r0
 80080a6:	3901      	subs	r1, #1
 80080a8:	6913      	ldr	r3, [r2, #16]
 80080aa:	1149      	asrs	r1, r1, #5
 80080ac:	3101      	adds	r1, #1
 80080ae:	0089      	lsls	r1, r1, #2
 80080b0:	3414      	adds	r4, #20
 80080b2:	009b      	lsls	r3, r3, #2
 80080b4:	1841      	adds	r1, r0, r1
 80080b6:	18e3      	adds	r3, r4, r3
 80080b8:	42a3      	cmp	r3, r4
 80080ba:	d80d      	bhi.n	80080d8 <__copybits+0x38>
 80080bc:	0014      	movs	r4, r2
 80080be:	3411      	adds	r4, #17
 80080c0:	2500      	movs	r5, #0
 80080c2:	42a3      	cmp	r3, r4
 80080c4:	d303      	bcc.n	80080ce <__copybits+0x2e>
 80080c6:	1a9b      	subs	r3, r3, r2
 80080c8:	3b11      	subs	r3, #17
 80080ca:	089b      	lsrs	r3, r3, #2
 80080cc:	009d      	lsls	r5, r3, #2
 80080ce:	2300      	movs	r3, #0
 80080d0:	1940      	adds	r0, r0, r5
 80080d2:	4281      	cmp	r1, r0
 80080d4:	d803      	bhi.n	80080de <__copybits+0x3e>
 80080d6:	bd70      	pop	{r4, r5, r6, pc}
 80080d8:	cc40      	ldmia	r4!, {r6}
 80080da:	c540      	stmia	r5!, {r6}
 80080dc:	e7ec      	b.n	80080b8 <__copybits+0x18>
 80080de:	c008      	stmia	r0!, {r3}
 80080e0:	e7f7      	b.n	80080d2 <__copybits+0x32>

080080e2 <__any_on>:
 80080e2:	0002      	movs	r2, r0
 80080e4:	6900      	ldr	r0, [r0, #16]
 80080e6:	b510      	push	{r4, lr}
 80080e8:	3214      	adds	r2, #20
 80080ea:	114b      	asrs	r3, r1, #5
 80080ec:	4298      	cmp	r0, r3
 80080ee:	db13      	blt.n	8008118 <__any_on+0x36>
 80080f0:	dd0c      	ble.n	800810c <__any_on+0x2a>
 80080f2:	241f      	movs	r4, #31
 80080f4:	0008      	movs	r0, r1
 80080f6:	4020      	ands	r0, r4
 80080f8:	4221      	tst	r1, r4
 80080fa:	d007      	beq.n	800810c <__any_on+0x2a>
 80080fc:	0099      	lsls	r1, r3, #2
 80080fe:	588c      	ldr	r4, [r1, r2]
 8008100:	0021      	movs	r1, r4
 8008102:	40c1      	lsrs	r1, r0
 8008104:	4081      	lsls	r1, r0
 8008106:	2001      	movs	r0, #1
 8008108:	428c      	cmp	r4, r1
 800810a:	d104      	bne.n	8008116 <__any_on+0x34>
 800810c:	009b      	lsls	r3, r3, #2
 800810e:	18d3      	adds	r3, r2, r3
 8008110:	4293      	cmp	r3, r2
 8008112:	d803      	bhi.n	800811c <__any_on+0x3a>
 8008114:	2000      	movs	r0, #0
 8008116:	bd10      	pop	{r4, pc}
 8008118:	0003      	movs	r3, r0
 800811a:	e7f7      	b.n	800810c <__any_on+0x2a>
 800811c:	3b04      	subs	r3, #4
 800811e:	6819      	ldr	r1, [r3, #0]
 8008120:	2900      	cmp	r1, #0
 8008122:	d0f5      	beq.n	8008110 <__any_on+0x2e>
 8008124:	2001      	movs	r0, #1
 8008126:	e7f6      	b.n	8008116 <__any_on+0x34>

08008128 <sulp>:
 8008128:	b570      	push	{r4, r5, r6, lr}
 800812a:	0016      	movs	r6, r2
 800812c:	000d      	movs	r5, r1
 800812e:	f7ff fec1 	bl	8007eb4 <__ulp>
 8008132:	2e00      	cmp	r6, #0
 8008134:	d00d      	beq.n	8008152 <sulp+0x2a>
 8008136:	236b      	movs	r3, #107	@ 0x6b
 8008138:	006a      	lsls	r2, r5, #1
 800813a:	0d52      	lsrs	r2, r2, #21
 800813c:	1a9b      	subs	r3, r3, r2
 800813e:	2b00      	cmp	r3, #0
 8008140:	dd07      	ble.n	8008152 <sulp+0x2a>
 8008142:	2400      	movs	r4, #0
 8008144:	4a03      	ldr	r2, [pc, #12]	@ (8008154 <sulp+0x2c>)
 8008146:	051b      	lsls	r3, r3, #20
 8008148:	189d      	adds	r5, r3, r2
 800814a:	002b      	movs	r3, r5
 800814c:	0022      	movs	r2, r4
 800814e:	f7f9 fcb5 	bl	8001abc <__aeabi_dmul>
 8008152:	bd70      	pop	{r4, r5, r6, pc}
 8008154:	3ff00000 	.word	0x3ff00000

08008158 <_strtod_l>:
 8008158:	b5f0      	push	{r4, r5, r6, r7, lr}
 800815a:	b0a3      	sub	sp, #140	@ 0x8c
 800815c:	921b      	str	r2, [sp, #108]	@ 0x6c
 800815e:	2200      	movs	r2, #0
 8008160:	2600      	movs	r6, #0
 8008162:	2700      	movs	r7, #0
 8008164:	9005      	str	r0, [sp, #20]
 8008166:	9109      	str	r1, [sp, #36]	@ 0x24
 8008168:	921e      	str	r2, [sp, #120]	@ 0x78
 800816a:	911d      	str	r1, [sp, #116]	@ 0x74
 800816c:	780a      	ldrb	r2, [r1, #0]
 800816e:	2a2b      	cmp	r2, #43	@ 0x2b
 8008170:	d053      	beq.n	800821a <_strtod_l+0xc2>
 8008172:	d83f      	bhi.n	80081f4 <_strtod_l+0x9c>
 8008174:	2a0d      	cmp	r2, #13
 8008176:	d839      	bhi.n	80081ec <_strtod_l+0x94>
 8008178:	2a08      	cmp	r2, #8
 800817a:	d839      	bhi.n	80081f0 <_strtod_l+0x98>
 800817c:	2a00      	cmp	r2, #0
 800817e:	d042      	beq.n	8008206 <_strtod_l+0xae>
 8008180:	2200      	movs	r2, #0
 8008182:	9212      	str	r2, [sp, #72]	@ 0x48
 8008184:	2100      	movs	r1, #0
 8008186:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8008188:	910c      	str	r1, [sp, #48]	@ 0x30
 800818a:	782a      	ldrb	r2, [r5, #0]
 800818c:	2a30      	cmp	r2, #48	@ 0x30
 800818e:	d000      	beq.n	8008192 <_strtod_l+0x3a>
 8008190:	e083      	b.n	800829a <_strtod_l+0x142>
 8008192:	786a      	ldrb	r2, [r5, #1]
 8008194:	3120      	adds	r1, #32
 8008196:	438a      	bics	r2, r1
 8008198:	2a58      	cmp	r2, #88	@ 0x58
 800819a:	d000      	beq.n	800819e <_strtod_l+0x46>
 800819c:	e073      	b.n	8008286 <_strtod_l+0x12e>
 800819e:	9302      	str	r3, [sp, #8]
 80081a0:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80081a2:	4a9b      	ldr	r2, [pc, #620]	@ (8008410 <_strtod_l+0x2b8>)
 80081a4:	9301      	str	r3, [sp, #4]
 80081a6:	ab1e      	add	r3, sp, #120	@ 0x78
 80081a8:	9300      	str	r3, [sp, #0]
 80081aa:	9805      	ldr	r0, [sp, #20]
 80081ac:	ab1f      	add	r3, sp, #124	@ 0x7c
 80081ae:	a91d      	add	r1, sp, #116	@ 0x74
 80081b0:	f001 f9fe 	bl	80095b0 <__gethex>
 80081b4:	230f      	movs	r3, #15
 80081b6:	0002      	movs	r2, r0
 80081b8:	401a      	ands	r2, r3
 80081ba:	0004      	movs	r4, r0
 80081bc:	9206      	str	r2, [sp, #24]
 80081be:	4218      	tst	r0, r3
 80081c0:	d005      	beq.n	80081ce <_strtod_l+0x76>
 80081c2:	2a06      	cmp	r2, #6
 80081c4:	d12b      	bne.n	800821e <_strtod_l+0xc6>
 80081c6:	2300      	movs	r3, #0
 80081c8:	3501      	adds	r5, #1
 80081ca:	951d      	str	r5, [sp, #116]	@ 0x74
 80081cc:	9312      	str	r3, [sp, #72]	@ 0x48
 80081ce:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80081d0:	2b00      	cmp	r3, #0
 80081d2:	d002      	beq.n	80081da <_strtod_l+0x82>
 80081d4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80081d6:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 80081d8:	6013      	str	r3, [r2, #0]
 80081da:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80081dc:	2b00      	cmp	r3, #0
 80081de:	d019      	beq.n	8008214 <_strtod_l+0xbc>
 80081e0:	2380      	movs	r3, #128	@ 0x80
 80081e2:	0030      	movs	r0, r6
 80081e4:	061b      	lsls	r3, r3, #24
 80081e6:	18f9      	adds	r1, r7, r3
 80081e8:	b023      	add	sp, #140	@ 0x8c
 80081ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80081ec:	2a20      	cmp	r2, #32
 80081ee:	d1c7      	bne.n	8008180 <_strtod_l+0x28>
 80081f0:	3101      	adds	r1, #1
 80081f2:	e7ba      	b.n	800816a <_strtod_l+0x12>
 80081f4:	2a2d      	cmp	r2, #45	@ 0x2d
 80081f6:	d1c3      	bne.n	8008180 <_strtod_l+0x28>
 80081f8:	3a2c      	subs	r2, #44	@ 0x2c
 80081fa:	9212      	str	r2, [sp, #72]	@ 0x48
 80081fc:	1c4a      	adds	r2, r1, #1
 80081fe:	921d      	str	r2, [sp, #116]	@ 0x74
 8008200:	784a      	ldrb	r2, [r1, #1]
 8008202:	2a00      	cmp	r2, #0
 8008204:	d1be      	bne.n	8008184 <_strtod_l+0x2c>
 8008206:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008208:	931d      	str	r3, [sp, #116]	@ 0x74
 800820a:	2300      	movs	r3, #0
 800820c:	9312      	str	r3, [sp, #72]	@ 0x48
 800820e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8008210:	2b00      	cmp	r3, #0
 8008212:	d1df      	bne.n	80081d4 <_strtod_l+0x7c>
 8008214:	0030      	movs	r0, r6
 8008216:	0039      	movs	r1, r7
 8008218:	e7e6      	b.n	80081e8 <_strtod_l+0x90>
 800821a:	2200      	movs	r2, #0
 800821c:	e7ed      	b.n	80081fa <_strtod_l+0xa2>
 800821e:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8008220:	2a00      	cmp	r2, #0
 8008222:	d007      	beq.n	8008234 <_strtod_l+0xdc>
 8008224:	2135      	movs	r1, #53	@ 0x35
 8008226:	a820      	add	r0, sp, #128	@ 0x80
 8008228:	f7ff ff3a 	bl	80080a0 <__copybits>
 800822c:	991e      	ldr	r1, [sp, #120]	@ 0x78
 800822e:	9805      	ldr	r0, [sp, #20]
 8008230:	f7ff fafc 	bl	800782c <_Bfree>
 8008234:	9806      	ldr	r0, [sp, #24]
 8008236:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8008238:	3801      	subs	r0, #1
 800823a:	2804      	cmp	r0, #4
 800823c:	d806      	bhi.n	800824c <_strtod_l+0xf4>
 800823e:	f7f7 ff6b 	bl	8000118 <__gnu_thumb1_case_uqi>
 8008242:	0312      	.short	0x0312
 8008244:	1e1c      	.short	0x1e1c
 8008246:	12          	.byte	0x12
 8008247:	00          	.byte	0x00
 8008248:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 800824a:	9f21      	ldr	r7, [sp, #132]	@ 0x84
 800824c:	05e4      	lsls	r4, r4, #23
 800824e:	d502      	bpl.n	8008256 <_strtod_l+0xfe>
 8008250:	2380      	movs	r3, #128	@ 0x80
 8008252:	061b      	lsls	r3, r3, #24
 8008254:	431f      	orrs	r7, r3
 8008256:	4b6f      	ldr	r3, [pc, #444]	@ (8008414 <_strtod_l+0x2bc>)
 8008258:	423b      	tst	r3, r7
 800825a:	d1b8      	bne.n	80081ce <_strtod_l+0x76>
 800825c:	f7fe faea 	bl	8006834 <__errno>
 8008260:	2322      	movs	r3, #34	@ 0x22
 8008262:	6003      	str	r3, [r0, #0]
 8008264:	e7b3      	b.n	80081ce <_strtod_l+0x76>
 8008266:	496c      	ldr	r1, [pc, #432]	@ (8008418 <_strtod_l+0x2c0>)
 8008268:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800826a:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 800826c:	400a      	ands	r2, r1
 800826e:	496b      	ldr	r1, [pc, #428]	@ (800841c <_strtod_l+0x2c4>)
 8008270:	185b      	adds	r3, r3, r1
 8008272:	051b      	lsls	r3, r3, #20
 8008274:	431a      	orrs	r2, r3
 8008276:	0017      	movs	r7, r2
 8008278:	e7e8      	b.n	800824c <_strtod_l+0xf4>
 800827a:	4f66      	ldr	r7, [pc, #408]	@ (8008414 <_strtod_l+0x2bc>)
 800827c:	e7e6      	b.n	800824c <_strtod_l+0xf4>
 800827e:	2601      	movs	r6, #1
 8008280:	4f67      	ldr	r7, [pc, #412]	@ (8008420 <_strtod_l+0x2c8>)
 8008282:	4276      	negs	r6, r6
 8008284:	e7e2      	b.n	800824c <_strtod_l+0xf4>
 8008286:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8008288:	1c5a      	adds	r2, r3, #1
 800828a:	921d      	str	r2, [sp, #116]	@ 0x74
 800828c:	785b      	ldrb	r3, [r3, #1]
 800828e:	2b30      	cmp	r3, #48	@ 0x30
 8008290:	d0f9      	beq.n	8008286 <_strtod_l+0x12e>
 8008292:	2b00      	cmp	r3, #0
 8008294:	d09b      	beq.n	80081ce <_strtod_l+0x76>
 8008296:	2301      	movs	r3, #1
 8008298:	930c      	str	r3, [sp, #48]	@ 0x30
 800829a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800829c:	220a      	movs	r2, #10
 800829e:	9313      	str	r3, [sp, #76]	@ 0x4c
 80082a0:	2300      	movs	r3, #0
 80082a2:	9310      	str	r3, [sp, #64]	@ 0x40
 80082a4:	930d      	str	r3, [sp, #52]	@ 0x34
 80082a6:	9308      	str	r3, [sp, #32]
 80082a8:	981d      	ldr	r0, [sp, #116]	@ 0x74
 80082aa:	7804      	ldrb	r4, [r0, #0]
 80082ac:	0023      	movs	r3, r4
 80082ae:	3b30      	subs	r3, #48	@ 0x30
 80082b0:	b2d9      	uxtb	r1, r3
 80082b2:	2909      	cmp	r1, #9
 80082b4:	d927      	bls.n	8008306 <_strtod_l+0x1ae>
 80082b6:	2201      	movs	r2, #1
 80082b8:	495a      	ldr	r1, [pc, #360]	@ (8008424 <_strtod_l+0x2cc>)
 80082ba:	f001 f86e 	bl	800939a <strncmp>
 80082be:	2800      	cmp	r0, #0
 80082c0:	d033      	beq.n	800832a <_strtod_l+0x1d2>
 80082c2:	2000      	movs	r0, #0
 80082c4:	0023      	movs	r3, r4
 80082c6:	4684      	mov	ip, r0
 80082c8:	9a08      	ldr	r2, [sp, #32]
 80082ca:	900e      	str	r0, [sp, #56]	@ 0x38
 80082cc:	9206      	str	r2, [sp, #24]
 80082ce:	2220      	movs	r2, #32
 80082d0:	0019      	movs	r1, r3
 80082d2:	4391      	bics	r1, r2
 80082d4:	000a      	movs	r2, r1
 80082d6:	2100      	movs	r1, #0
 80082d8:	9107      	str	r1, [sp, #28]
 80082da:	2a45      	cmp	r2, #69	@ 0x45
 80082dc:	d000      	beq.n	80082e0 <_strtod_l+0x188>
 80082de:	e0cb      	b.n	8008478 <_strtod_l+0x320>
 80082e0:	9b06      	ldr	r3, [sp, #24]
 80082e2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80082e4:	4303      	orrs	r3, r0
 80082e6:	4313      	orrs	r3, r2
 80082e8:	428b      	cmp	r3, r1
 80082ea:	d08c      	beq.n	8008206 <_strtod_l+0xae>
 80082ec:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80082ee:	9309      	str	r3, [sp, #36]	@ 0x24
 80082f0:	3301      	adds	r3, #1
 80082f2:	931d      	str	r3, [sp, #116]	@ 0x74
 80082f4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80082f6:	785b      	ldrb	r3, [r3, #1]
 80082f8:	2b2b      	cmp	r3, #43	@ 0x2b
 80082fa:	d07b      	beq.n	80083f4 <_strtod_l+0x29c>
 80082fc:	000c      	movs	r4, r1
 80082fe:	2b2d      	cmp	r3, #45	@ 0x2d
 8008300:	d17e      	bne.n	8008400 <_strtod_l+0x2a8>
 8008302:	2401      	movs	r4, #1
 8008304:	e077      	b.n	80083f6 <_strtod_l+0x29e>
 8008306:	9908      	ldr	r1, [sp, #32]
 8008308:	2908      	cmp	r1, #8
 800830a:	dc09      	bgt.n	8008320 <_strtod_l+0x1c8>
 800830c:	990d      	ldr	r1, [sp, #52]	@ 0x34
 800830e:	4351      	muls	r1, r2
 8008310:	185b      	adds	r3, r3, r1
 8008312:	930d      	str	r3, [sp, #52]	@ 0x34
 8008314:	9b08      	ldr	r3, [sp, #32]
 8008316:	3001      	adds	r0, #1
 8008318:	3301      	adds	r3, #1
 800831a:	9308      	str	r3, [sp, #32]
 800831c:	901d      	str	r0, [sp, #116]	@ 0x74
 800831e:	e7c3      	b.n	80082a8 <_strtod_l+0x150>
 8008320:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8008322:	4355      	muls	r5, r2
 8008324:	195b      	adds	r3, r3, r5
 8008326:	9310      	str	r3, [sp, #64]	@ 0x40
 8008328:	e7f4      	b.n	8008314 <_strtod_l+0x1bc>
 800832a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800832c:	1c5a      	adds	r2, r3, #1
 800832e:	921d      	str	r2, [sp, #116]	@ 0x74
 8008330:	9a08      	ldr	r2, [sp, #32]
 8008332:	785b      	ldrb	r3, [r3, #1]
 8008334:	2a00      	cmp	r2, #0
 8008336:	d03e      	beq.n	80083b6 <_strtod_l+0x25e>
 8008338:	900e      	str	r0, [sp, #56]	@ 0x38
 800833a:	9206      	str	r2, [sp, #24]
 800833c:	001a      	movs	r2, r3
 800833e:	3a30      	subs	r2, #48	@ 0x30
 8008340:	2a09      	cmp	r2, #9
 8008342:	d912      	bls.n	800836a <_strtod_l+0x212>
 8008344:	2201      	movs	r2, #1
 8008346:	4694      	mov	ip, r2
 8008348:	e7c1      	b.n	80082ce <_strtod_l+0x176>
 800834a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800834c:	3001      	adds	r0, #1
 800834e:	1c5a      	adds	r2, r3, #1
 8008350:	921d      	str	r2, [sp, #116]	@ 0x74
 8008352:	785b      	ldrb	r3, [r3, #1]
 8008354:	2b30      	cmp	r3, #48	@ 0x30
 8008356:	d0f8      	beq.n	800834a <_strtod_l+0x1f2>
 8008358:	001a      	movs	r2, r3
 800835a:	3a31      	subs	r2, #49	@ 0x31
 800835c:	2a08      	cmp	r2, #8
 800835e:	d844      	bhi.n	80083ea <_strtod_l+0x292>
 8008360:	900e      	str	r0, [sp, #56]	@ 0x38
 8008362:	2000      	movs	r0, #0
 8008364:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 8008366:	9006      	str	r0, [sp, #24]
 8008368:	9213      	str	r2, [sp, #76]	@ 0x4c
 800836a:	001c      	movs	r4, r3
 800836c:	1c42      	adds	r2, r0, #1
 800836e:	3c30      	subs	r4, #48	@ 0x30
 8008370:	2b30      	cmp	r3, #48	@ 0x30
 8008372:	d01a      	beq.n	80083aa <_strtod_l+0x252>
 8008374:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008376:	9906      	ldr	r1, [sp, #24]
 8008378:	189b      	adds	r3, r3, r2
 800837a:	930e      	str	r3, [sp, #56]	@ 0x38
 800837c:	230a      	movs	r3, #10
 800837e:	469c      	mov	ip, r3
 8008380:	9d06      	ldr	r5, [sp, #24]
 8008382:	1c4b      	adds	r3, r1, #1
 8008384:	1b5d      	subs	r5, r3, r5
 8008386:	42aa      	cmp	r2, r5
 8008388:	dc17      	bgt.n	80083ba <_strtod_l+0x262>
 800838a:	43c3      	mvns	r3, r0
 800838c:	9a06      	ldr	r2, [sp, #24]
 800838e:	17db      	asrs	r3, r3, #31
 8008390:	4003      	ands	r3, r0
 8008392:	18d1      	adds	r1, r2, r3
 8008394:	3201      	adds	r2, #1
 8008396:	18d3      	adds	r3, r2, r3
 8008398:	9306      	str	r3, [sp, #24]
 800839a:	2908      	cmp	r1, #8
 800839c:	dc1c      	bgt.n	80083d8 <_strtod_l+0x280>
 800839e:	230a      	movs	r3, #10
 80083a0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80083a2:	4353      	muls	r3, r2
 80083a4:	2200      	movs	r2, #0
 80083a6:	18e3      	adds	r3, r4, r3
 80083a8:	930d      	str	r3, [sp, #52]	@ 0x34
 80083aa:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80083ac:	0010      	movs	r0, r2
 80083ae:	1c59      	adds	r1, r3, #1
 80083b0:	911d      	str	r1, [sp, #116]	@ 0x74
 80083b2:	785b      	ldrb	r3, [r3, #1]
 80083b4:	e7c2      	b.n	800833c <_strtod_l+0x1e4>
 80083b6:	9808      	ldr	r0, [sp, #32]
 80083b8:	e7cc      	b.n	8008354 <_strtod_l+0x1fc>
 80083ba:	2908      	cmp	r1, #8
 80083bc:	dc05      	bgt.n	80083ca <_strtod_l+0x272>
 80083be:	4665      	mov	r5, ip
 80083c0:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80083c2:	4369      	muls	r1, r5
 80083c4:	910d      	str	r1, [sp, #52]	@ 0x34
 80083c6:	0019      	movs	r1, r3
 80083c8:	e7da      	b.n	8008380 <_strtod_l+0x228>
 80083ca:	2b10      	cmp	r3, #16
 80083cc:	dcfb      	bgt.n	80083c6 <_strtod_l+0x26e>
 80083ce:	4661      	mov	r1, ip
 80083d0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80083d2:	434d      	muls	r5, r1
 80083d4:	9510      	str	r5, [sp, #64]	@ 0x40
 80083d6:	e7f6      	b.n	80083c6 <_strtod_l+0x26e>
 80083d8:	2200      	movs	r2, #0
 80083da:	290f      	cmp	r1, #15
 80083dc:	dce5      	bgt.n	80083aa <_strtod_l+0x252>
 80083de:	230a      	movs	r3, #10
 80083e0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80083e2:	435d      	muls	r5, r3
 80083e4:	1963      	adds	r3, r4, r5
 80083e6:	9310      	str	r3, [sp, #64]	@ 0x40
 80083e8:	e7df      	b.n	80083aa <_strtod_l+0x252>
 80083ea:	2200      	movs	r2, #0
 80083ec:	920e      	str	r2, [sp, #56]	@ 0x38
 80083ee:	9206      	str	r2, [sp, #24]
 80083f0:	3201      	adds	r2, #1
 80083f2:	e7a8      	b.n	8008346 <_strtod_l+0x1ee>
 80083f4:	2400      	movs	r4, #0
 80083f6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80083f8:	3302      	adds	r3, #2
 80083fa:	931d      	str	r3, [sp, #116]	@ 0x74
 80083fc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80083fe:	789b      	ldrb	r3, [r3, #2]
 8008400:	001a      	movs	r2, r3
 8008402:	3a30      	subs	r2, #48	@ 0x30
 8008404:	2a09      	cmp	r2, #9
 8008406:	d913      	bls.n	8008430 <_strtod_l+0x2d8>
 8008408:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800840a:	921d      	str	r2, [sp, #116]	@ 0x74
 800840c:	2200      	movs	r2, #0
 800840e:	e032      	b.n	8008476 <_strtod_l+0x31e>
 8008410:	0800a324 	.word	0x0800a324
 8008414:	7ff00000 	.word	0x7ff00000
 8008418:	ffefffff 	.word	0xffefffff
 800841c:	00000433 	.word	0x00000433
 8008420:	7fffffff 	.word	0x7fffffff
 8008424:	0800a15b 	.word	0x0800a15b
 8008428:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800842a:	1c5a      	adds	r2, r3, #1
 800842c:	921d      	str	r2, [sp, #116]	@ 0x74
 800842e:	785b      	ldrb	r3, [r3, #1]
 8008430:	2b30      	cmp	r3, #48	@ 0x30
 8008432:	d0f9      	beq.n	8008428 <_strtod_l+0x2d0>
 8008434:	2200      	movs	r2, #0
 8008436:	9207      	str	r2, [sp, #28]
 8008438:	001a      	movs	r2, r3
 800843a:	3a31      	subs	r2, #49	@ 0x31
 800843c:	2a08      	cmp	r2, #8
 800843e:	d81b      	bhi.n	8008478 <_strtod_l+0x320>
 8008440:	3b30      	subs	r3, #48	@ 0x30
 8008442:	001a      	movs	r2, r3
 8008444:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8008446:	9307      	str	r3, [sp, #28]
 8008448:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800844a:	1c59      	adds	r1, r3, #1
 800844c:	911d      	str	r1, [sp, #116]	@ 0x74
 800844e:	785b      	ldrb	r3, [r3, #1]
 8008450:	001d      	movs	r5, r3
 8008452:	3d30      	subs	r5, #48	@ 0x30
 8008454:	2d09      	cmp	r5, #9
 8008456:	d93a      	bls.n	80084ce <_strtod_l+0x376>
 8008458:	9d07      	ldr	r5, [sp, #28]
 800845a:	1b49      	subs	r1, r1, r5
 800845c:	000d      	movs	r5, r1
 800845e:	49b3      	ldr	r1, [pc, #716]	@ (800872c <_strtod_l+0x5d4>)
 8008460:	9107      	str	r1, [sp, #28]
 8008462:	2d08      	cmp	r5, #8
 8008464:	dc03      	bgt.n	800846e <_strtod_l+0x316>
 8008466:	9207      	str	r2, [sp, #28]
 8008468:	428a      	cmp	r2, r1
 800846a:	dd00      	ble.n	800846e <_strtod_l+0x316>
 800846c:	9107      	str	r1, [sp, #28]
 800846e:	2c00      	cmp	r4, #0
 8008470:	d002      	beq.n	8008478 <_strtod_l+0x320>
 8008472:	9a07      	ldr	r2, [sp, #28]
 8008474:	4252      	negs	r2, r2
 8008476:	9207      	str	r2, [sp, #28]
 8008478:	9a06      	ldr	r2, [sp, #24]
 800847a:	2a00      	cmp	r2, #0
 800847c:	d14b      	bne.n	8008516 <_strtod_l+0x3be>
 800847e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8008480:	4310      	orrs	r0, r2
 8008482:	d000      	beq.n	8008486 <_strtod_l+0x32e>
 8008484:	e6a3      	b.n	80081ce <_strtod_l+0x76>
 8008486:	4662      	mov	r2, ip
 8008488:	2a00      	cmp	r2, #0
 800848a:	d000      	beq.n	800848e <_strtod_l+0x336>
 800848c:	e6bb      	b.n	8008206 <_strtod_l+0xae>
 800848e:	2b69      	cmp	r3, #105	@ 0x69
 8008490:	d025      	beq.n	80084de <_strtod_l+0x386>
 8008492:	dc21      	bgt.n	80084d8 <_strtod_l+0x380>
 8008494:	2b49      	cmp	r3, #73	@ 0x49
 8008496:	d022      	beq.n	80084de <_strtod_l+0x386>
 8008498:	2b4e      	cmp	r3, #78	@ 0x4e
 800849a:	d000      	beq.n	800849e <_strtod_l+0x346>
 800849c:	e6b3      	b.n	8008206 <_strtod_l+0xae>
 800849e:	49a4      	ldr	r1, [pc, #656]	@ (8008730 <_strtod_l+0x5d8>)
 80084a0:	a81d      	add	r0, sp, #116	@ 0x74
 80084a2:	f001 fabb 	bl	8009a1c <__match>
 80084a6:	2800      	cmp	r0, #0
 80084a8:	d100      	bne.n	80084ac <_strtod_l+0x354>
 80084aa:	e6ac      	b.n	8008206 <_strtod_l+0xae>
 80084ac:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80084ae:	781b      	ldrb	r3, [r3, #0]
 80084b0:	2b28      	cmp	r3, #40	@ 0x28
 80084b2:	d12a      	bne.n	800850a <_strtod_l+0x3b2>
 80084b4:	499f      	ldr	r1, [pc, #636]	@ (8008734 <_strtod_l+0x5dc>)
 80084b6:	aa20      	add	r2, sp, #128	@ 0x80
 80084b8:	a81d      	add	r0, sp, #116	@ 0x74
 80084ba:	f001 fac3 	bl	8009a44 <__hexnan>
 80084be:	2805      	cmp	r0, #5
 80084c0:	d123      	bne.n	800850a <_strtod_l+0x3b2>
 80084c2:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80084c4:	4a9c      	ldr	r2, [pc, #624]	@ (8008738 <_strtod_l+0x5e0>)
 80084c6:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 80084c8:	431a      	orrs	r2, r3
 80084ca:	0017      	movs	r7, r2
 80084cc:	e67f      	b.n	80081ce <_strtod_l+0x76>
 80084ce:	210a      	movs	r1, #10
 80084d0:	434a      	muls	r2, r1
 80084d2:	18d2      	adds	r2, r2, r3
 80084d4:	3a30      	subs	r2, #48	@ 0x30
 80084d6:	e7b7      	b.n	8008448 <_strtod_l+0x2f0>
 80084d8:	2b6e      	cmp	r3, #110	@ 0x6e
 80084da:	d0e0      	beq.n	800849e <_strtod_l+0x346>
 80084dc:	e693      	b.n	8008206 <_strtod_l+0xae>
 80084de:	4997      	ldr	r1, [pc, #604]	@ (800873c <_strtod_l+0x5e4>)
 80084e0:	a81d      	add	r0, sp, #116	@ 0x74
 80084e2:	f001 fa9b 	bl	8009a1c <__match>
 80084e6:	2800      	cmp	r0, #0
 80084e8:	d100      	bne.n	80084ec <_strtod_l+0x394>
 80084ea:	e68c      	b.n	8008206 <_strtod_l+0xae>
 80084ec:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80084ee:	4994      	ldr	r1, [pc, #592]	@ (8008740 <_strtod_l+0x5e8>)
 80084f0:	3b01      	subs	r3, #1
 80084f2:	a81d      	add	r0, sp, #116	@ 0x74
 80084f4:	931d      	str	r3, [sp, #116]	@ 0x74
 80084f6:	f001 fa91 	bl	8009a1c <__match>
 80084fa:	2800      	cmp	r0, #0
 80084fc:	d102      	bne.n	8008504 <_strtod_l+0x3ac>
 80084fe:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8008500:	3301      	adds	r3, #1
 8008502:	931d      	str	r3, [sp, #116]	@ 0x74
 8008504:	2600      	movs	r6, #0
 8008506:	4f8c      	ldr	r7, [pc, #560]	@ (8008738 <_strtod_l+0x5e0>)
 8008508:	e661      	b.n	80081ce <_strtod_l+0x76>
 800850a:	488e      	ldr	r0, [pc, #568]	@ (8008744 <_strtod_l+0x5ec>)
 800850c:	f000 ff96 	bl	800943c <nan>
 8008510:	0006      	movs	r6, r0
 8008512:	000f      	movs	r7, r1
 8008514:	e65b      	b.n	80081ce <_strtod_l+0x76>
 8008516:	9b07      	ldr	r3, [sp, #28]
 8008518:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800851a:	1a9b      	subs	r3, r3, r2
 800851c:	930c      	str	r3, [sp, #48]	@ 0x30
 800851e:	9b08      	ldr	r3, [sp, #32]
 8008520:	2b00      	cmp	r3, #0
 8008522:	d101      	bne.n	8008528 <_strtod_l+0x3d0>
 8008524:	9b06      	ldr	r3, [sp, #24]
 8008526:	9308      	str	r3, [sp, #32]
 8008528:	9c06      	ldr	r4, [sp, #24]
 800852a:	2c10      	cmp	r4, #16
 800852c:	dd00      	ble.n	8008530 <_strtod_l+0x3d8>
 800852e:	2410      	movs	r4, #16
 8008530:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8008532:	f7fa fa3f 	bl	80029b4 <__aeabi_ui2d>
 8008536:	9b06      	ldr	r3, [sp, #24]
 8008538:	0006      	movs	r6, r0
 800853a:	000f      	movs	r7, r1
 800853c:	2b09      	cmp	r3, #9
 800853e:	dc13      	bgt.n	8008568 <_strtod_l+0x410>
 8008540:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8008542:	2b00      	cmp	r3, #0
 8008544:	d100      	bne.n	8008548 <_strtod_l+0x3f0>
 8008546:	e642      	b.n	80081ce <_strtod_l+0x76>
 8008548:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800854a:	2b00      	cmp	r3, #0
 800854c:	dc00      	bgt.n	8008550 <_strtod_l+0x3f8>
 800854e:	e07e      	b.n	800864e <_strtod_l+0x4f6>
 8008550:	2b16      	cmp	r3, #22
 8008552:	dc63      	bgt.n	800861c <_strtod_l+0x4c4>
 8008554:	497c      	ldr	r1, [pc, #496]	@ (8008748 <_strtod_l+0x5f0>)
 8008556:	00db      	lsls	r3, r3, #3
 8008558:	18c9      	adds	r1, r1, r3
 800855a:	0032      	movs	r2, r6
 800855c:	6808      	ldr	r0, [r1, #0]
 800855e:	6849      	ldr	r1, [r1, #4]
 8008560:	003b      	movs	r3, r7
 8008562:	f7f9 faab 	bl	8001abc <__aeabi_dmul>
 8008566:	e7d3      	b.n	8008510 <_strtod_l+0x3b8>
 8008568:	0022      	movs	r2, r4
 800856a:	4b77      	ldr	r3, [pc, #476]	@ (8008748 <_strtod_l+0x5f0>)
 800856c:	3a09      	subs	r2, #9
 800856e:	00d2      	lsls	r2, r2, #3
 8008570:	189b      	adds	r3, r3, r2
 8008572:	681a      	ldr	r2, [r3, #0]
 8008574:	685b      	ldr	r3, [r3, #4]
 8008576:	f7f9 faa1 	bl	8001abc <__aeabi_dmul>
 800857a:	0006      	movs	r6, r0
 800857c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 800857e:	000f      	movs	r7, r1
 8008580:	f7fa fa18 	bl	80029b4 <__aeabi_ui2d>
 8008584:	000b      	movs	r3, r1
 8008586:	0002      	movs	r2, r0
 8008588:	0039      	movs	r1, r7
 800858a:	0030      	movs	r0, r6
 800858c:	f7f8 fa96 	bl	8000abc <__aeabi_dadd>
 8008590:	9b06      	ldr	r3, [sp, #24]
 8008592:	0006      	movs	r6, r0
 8008594:	000f      	movs	r7, r1
 8008596:	2b0f      	cmp	r3, #15
 8008598:	ddd2      	ble.n	8008540 <_strtod_l+0x3e8>
 800859a:	9b06      	ldr	r3, [sp, #24]
 800859c:	1b1c      	subs	r4, r3, r4
 800859e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80085a0:	18e4      	adds	r4, r4, r3
 80085a2:	2c00      	cmp	r4, #0
 80085a4:	dc00      	bgt.n	80085a8 <_strtod_l+0x450>
 80085a6:	e09b      	b.n	80086e0 <_strtod_l+0x588>
 80085a8:	220f      	movs	r2, #15
 80085aa:	0023      	movs	r3, r4
 80085ac:	4013      	ands	r3, r2
 80085ae:	4214      	tst	r4, r2
 80085b0:	d00a      	beq.n	80085c8 <_strtod_l+0x470>
 80085b2:	4965      	ldr	r1, [pc, #404]	@ (8008748 <_strtod_l+0x5f0>)
 80085b4:	00db      	lsls	r3, r3, #3
 80085b6:	18c9      	adds	r1, r1, r3
 80085b8:	0032      	movs	r2, r6
 80085ba:	6808      	ldr	r0, [r1, #0]
 80085bc:	6849      	ldr	r1, [r1, #4]
 80085be:	003b      	movs	r3, r7
 80085c0:	f7f9 fa7c 	bl	8001abc <__aeabi_dmul>
 80085c4:	0006      	movs	r6, r0
 80085c6:	000f      	movs	r7, r1
 80085c8:	230f      	movs	r3, #15
 80085ca:	439c      	bics	r4, r3
 80085cc:	d073      	beq.n	80086b6 <_strtod_l+0x55e>
 80085ce:	3326      	adds	r3, #38	@ 0x26
 80085d0:	33ff      	adds	r3, #255	@ 0xff
 80085d2:	429c      	cmp	r4, r3
 80085d4:	dd4b      	ble.n	800866e <_strtod_l+0x516>
 80085d6:	2300      	movs	r3, #0
 80085d8:	9306      	str	r3, [sp, #24]
 80085da:	9307      	str	r3, [sp, #28]
 80085dc:	930d      	str	r3, [sp, #52]	@ 0x34
 80085de:	9308      	str	r3, [sp, #32]
 80085e0:	2322      	movs	r3, #34	@ 0x22
 80085e2:	2600      	movs	r6, #0
 80085e4:	9a05      	ldr	r2, [sp, #20]
 80085e6:	4f54      	ldr	r7, [pc, #336]	@ (8008738 <_strtod_l+0x5e0>)
 80085e8:	6013      	str	r3, [r2, #0]
 80085ea:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80085ec:	42b3      	cmp	r3, r6
 80085ee:	d100      	bne.n	80085f2 <_strtod_l+0x49a>
 80085f0:	e5ed      	b.n	80081ce <_strtod_l+0x76>
 80085f2:	991e      	ldr	r1, [sp, #120]	@ 0x78
 80085f4:	9805      	ldr	r0, [sp, #20]
 80085f6:	f7ff f919 	bl	800782c <_Bfree>
 80085fa:	9908      	ldr	r1, [sp, #32]
 80085fc:	9805      	ldr	r0, [sp, #20]
 80085fe:	f7ff f915 	bl	800782c <_Bfree>
 8008602:	9907      	ldr	r1, [sp, #28]
 8008604:	9805      	ldr	r0, [sp, #20]
 8008606:	f7ff f911 	bl	800782c <_Bfree>
 800860a:	990d      	ldr	r1, [sp, #52]	@ 0x34
 800860c:	9805      	ldr	r0, [sp, #20]
 800860e:	f7ff f90d 	bl	800782c <_Bfree>
 8008612:	9906      	ldr	r1, [sp, #24]
 8008614:	9805      	ldr	r0, [sp, #20]
 8008616:	f7ff f909 	bl	800782c <_Bfree>
 800861a:	e5d8      	b.n	80081ce <_strtod_l+0x76>
 800861c:	2325      	movs	r3, #37	@ 0x25
 800861e:	9a06      	ldr	r2, [sp, #24]
 8008620:	1a9b      	subs	r3, r3, r2
 8008622:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8008624:	4293      	cmp	r3, r2
 8008626:	dbb8      	blt.n	800859a <_strtod_l+0x442>
 8008628:	240f      	movs	r4, #15
 800862a:	9b06      	ldr	r3, [sp, #24]
 800862c:	4d46      	ldr	r5, [pc, #280]	@ (8008748 <_strtod_l+0x5f0>)
 800862e:	1ae4      	subs	r4, r4, r3
 8008630:	00e1      	lsls	r1, r4, #3
 8008632:	1869      	adds	r1, r5, r1
 8008634:	0032      	movs	r2, r6
 8008636:	6808      	ldr	r0, [r1, #0]
 8008638:	6849      	ldr	r1, [r1, #4]
 800863a:	003b      	movs	r3, r7
 800863c:	f7f9 fa3e 	bl	8001abc <__aeabi_dmul>
 8008640:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8008642:	1b1c      	subs	r4, r3, r4
 8008644:	00e4      	lsls	r4, r4, #3
 8008646:	192d      	adds	r5, r5, r4
 8008648:	682a      	ldr	r2, [r5, #0]
 800864a:	686b      	ldr	r3, [r5, #4]
 800864c:	e789      	b.n	8008562 <_strtod_l+0x40a>
 800864e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8008650:	3316      	adds	r3, #22
 8008652:	dba2      	blt.n	800859a <_strtod_l+0x442>
 8008654:	9907      	ldr	r1, [sp, #28]
 8008656:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8008658:	4b3b      	ldr	r3, [pc, #236]	@ (8008748 <_strtod_l+0x5f0>)
 800865a:	1a52      	subs	r2, r2, r1
 800865c:	00d2      	lsls	r2, r2, #3
 800865e:	189b      	adds	r3, r3, r2
 8008660:	0030      	movs	r0, r6
 8008662:	681a      	ldr	r2, [r3, #0]
 8008664:	685b      	ldr	r3, [r3, #4]
 8008666:	0039      	movs	r1, r7
 8008668:	f7f8 fdee 	bl	8001248 <__aeabi_ddiv>
 800866c:	e750      	b.n	8008510 <_strtod_l+0x3b8>
 800866e:	2300      	movs	r3, #0
 8008670:	0030      	movs	r0, r6
 8008672:	0039      	movs	r1, r7
 8008674:	4d35      	ldr	r5, [pc, #212]	@ (800874c <_strtod_l+0x5f4>)
 8008676:	1124      	asrs	r4, r4, #4
 8008678:	9309      	str	r3, [sp, #36]	@ 0x24
 800867a:	2c01      	cmp	r4, #1
 800867c:	dc1e      	bgt.n	80086bc <_strtod_l+0x564>
 800867e:	2b00      	cmp	r3, #0
 8008680:	d001      	beq.n	8008686 <_strtod_l+0x52e>
 8008682:	0006      	movs	r6, r0
 8008684:	000f      	movs	r7, r1
 8008686:	4b32      	ldr	r3, [pc, #200]	@ (8008750 <_strtod_l+0x5f8>)
 8008688:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800868a:	18ff      	adds	r7, r7, r3
 800868c:	4b2f      	ldr	r3, [pc, #188]	@ (800874c <_strtod_l+0x5f4>)
 800868e:	00d5      	lsls	r5, r2, #3
 8008690:	195d      	adds	r5, r3, r5
 8008692:	0032      	movs	r2, r6
 8008694:	6828      	ldr	r0, [r5, #0]
 8008696:	6869      	ldr	r1, [r5, #4]
 8008698:	003b      	movs	r3, r7
 800869a:	f7f9 fa0f 	bl	8001abc <__aeabi_dmul>
 800869e:	4b26      	ldr	r3, [pc, #152]	@ (8008738 <_strtod_l+0x5e0>)
 80086a0:	4a2c      	ldr	r2, [pc, #176]	@ (8008754 <_strtod_l+0x5fc>)
 80086a2:	0006      	movs	r6, r0
 80086a4:	400b      	ands	r3, r1
 80086a6:	4293      	cmp	r3, r2
 80086a8:	d895      	bhi.n	80085d6 <_strtod_l+0x47e>
 80086aa:	4a2b      	ldr	r2, [pc, #172]	@ (8008758 <_strtod_l+0x600>)
 80086ac:	4293      	cmp	r3, r2
 80086ae:	d913      	bls.n	80086d8 <_strtod_l+0x580>
 80086b0:	2601      	movs	r6, #1
 80086b2:	4f2a      	ldr	r7, [pc, #168]	@ (800875c <_strtod_l+0x604>)
 80086b4:	4276      	negs	r6, r6
 80086b6:	2300      	movs	r3, #0
 80086b8:	9309      	str	r3, [sp, #36]	@ 0x24
 80086ba:	e086      	b.n	80087ca <_strtod_l+0x672>
 80086bc:	2201      	movs	r2, #1
 80086be:	4214      	tst	r4, r2
 80086c0:	d004      	beq.n	80086cc <_strtod_l+0x574>
 80086c2:	682a      	ldr	r2, [r5, #0]
 80086c4:	686b      	ldr	r3, [r5, #4]
 80086c6:	f7f9 f9f9 	bl	8001abc <__aeabi_dmul>
 80086ca:	2301      	movs	r3, #1
 80086cc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80086ce:	1064      	asrs	r4, r4, #1
 80086d0:	3201      	adds	r2, #1
 80086d2:	9209      	str	r2, [sp, #36]	@ 0x24
 80086d4:	3508      	adds	r5, #8
 80086d6:	e7d0      	b.n	800867a <_strtod_l+0x522>
 80086d8:	23d4      	movs	r3, #212	@ 0xd4
 80086da:	049b      	lsls	r3, r3, #18
 80086dc:	18cf      	adds	r7, r1, r3
 80086de:	e7ea      	b.n	80086b6 <_strtod_l+0x55e>
 80086e0:	2c00      	cmp	r4, #0
 80086e2:	d0e8      	beq.n	80086b6 <_strtod_l+0x55e>
 80086e4:	4264      	negs	r4, r4
 80086e6:	230f      	movs	r3, #15
 80086e8:	0022      	movs	r2, r4
 80086ea:	401a      	ands	r2, r3
 80086ec:	421c      	tst	r4, r3
 80086ee:	d00a      	beq.n	8008706 <_strtod_l+0x5ae>
 80086f0:	4b15      	ldr	r3, [pc, #84]	@ (8008748 <_strtod_l+0x5f0>)
 80086f2:	00d2      	lsls	r2, r2, #3
 80086f4:	189b      	adds	r3, r3, r2
 80086f6:	0030      	movs	r0, r6
 80086f8:	681a      	ldr	r2, [r3, #0]
 80086fa:	685b      	ldr	r3, [r3, #4]
 80086fc:	0039      	movs	r1, r7
 80086fe:	f7f8 fda3 	bl	8001248 <__aeabi_ddiv>
 8008702:	0006      	movs	r6, r0
 8008704:	000f      	movs	r7, r1
 8008706:	1124      	asrs	r4, r4, #4
 8008708:	d0d5      	beq.n	80086b6 <_strtod_l+0x55e>
 800870a:	2c1f      	cmp	r4, #31
 800870c:	dd28      	ble.n	8008760 <_strtod_l+0x608>
 800870e:	2300      	movs	r3, #0
 8008710:	9306      	str	r3, [sp, #24]
 8008712:	9307      	str	r3, [sp, #28]
 8008714:	930d      	str	r3, [sp, #52]	@ 0x34
 8008716:	9308      	str	r3, [sp, #32]
 8008718:	2322      	movs	r3, #34	@ 0x22
 800871a:	9a05      	ldr	r2, [sp, #20]
 800871c:	2600      	movs	r6, #0
 800871e:	6013      	str	r3, [r2, #0]
 8008720:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8008722:	2700      	movs	r7, #0
 8008724:	2b00      	cmp	r3, #0
 8008726:	d000      	beq.n	800872a <_strtod_l+0x5d2>
 8008728:	e763      	b.n	80085f2 <_strtod_l+0x49a>
 800872a:	e550      	b.n	80081ce <_strtod_l+0x76>
 800872c:	00004e1f 	.word	0x00004e1f
 8008730:	0800a049 	.word	0x0800a049
 8008734:	0800a310 	.word	0x0800a310
 8008738:	7ff00000 	.word	0x7ff00000
 800873c:	0800a041 	.word	0x0800a041
 8008740:	0800a078 	.word	0x0800a078
 8008744:	0800a1b1 	.word	0x0800a1b1
 8008748:	0800a248 	.word	0x0800a248
 800874c:	0800a220 	.word	0x0800a220
 8008750:	fcb00000 	.word	0xfcb00000
 8008754:	7ca00000 	.word	0x7ca00000
 8008758:	7c900000 	.word	0x7c900000
 800875c:	7fefffff 	.word	0x7fefffff
 8008760:	2310      	movs	r3, #16
 8008762:	0022      	movs	r2, r4
 8008764:	401a      	ands	r2, r3
 8008766:	9209      	str	r2, [sp, #36]	@ 0x24
 8008768:	421c      	tst	r4, r3
 800876a:	d001      	beq.n	8008770 <_strtod_l+0x618>
 800876c:	335a      	adds	r3, #90	@ 0x5a
 800876e:	9309      	str	r3, [sp, #36]	@ 0x24
 8008770:	0030      	movs	r0, r6
 8008772:	0039      	movs	r1, r7
 8008774:	2300      	movs	r3, #0
 8008776:	4dc0      	ldr	r5, [pc, #768]	@ (8008a78 <_strtod_l+0x920>)
 8008778:	2201      	movs	r2, #1
 800877a:	4214      	tst	r4, r2
 800877c:	d004      	beq.n	8008788 <_strtod_l+0x630>
 800877e:	682a      	ldr	r2, [r5, #0]
 8008780:	686b      	ldr	r3, [r5, #4]
 8008782:	f7f9 f99b 	bl	8001abc <__aeabi_dmul>
 8008786:	2301      	movs	r3, #1
 8008788:	1064      	asrs	r4, r4, #1
 800878a:	3508      	adds	r5, #8
 800878c:	2c00      	cmp	r4, #0
 800878e:	d1f3      	bne.n	8008778 <_strtod_l+0x620>
 8008790:	2b00      	cmp	r3, #0
 8008792:	d001      	beq.n	8008798 <_strtod_l+0x640>
 8008794:	0006      	movs	r6, r0
 8008796:	000f      	movs	r7, r1
 8008798:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800879a:	2b00      	cmp	r3, #0
 800879c:	d00d      	beq.n	80087ba <_strtod_l+0x662>
 800879e:	236b      	movs	r3, #107	@ 0x6b
 80087a0:	007a      	lsls	r2, r7, #1
 80087a2:	0d52      	lsrs	r2, r2, #21
 80087a4:	0039      	movs	r1, r7
 80087a6:	1a9b      	subs	r3, r3, r2
 80087a8:	2b00      	cmp	r3, #0
 80087aa:	dd06      	ble.n	80087ba <_strtod_l+0x662>
 80087ac:	2b1f      	cmp	r3, #31
 80087ae:	dd5c      	ble.n	800886a <_strtod_l+0x712>
 80087b0:	2600      	movs	r6, #0
 80087b2:	2b34      	cmp	r3, #52	@ 0x34
 80087b4:	dd52      	ble.n	800885c <_strtod_l+0x704>
 80087b6:	27dc      	movs	r7, #220	@ 0xdc
 80087b8:	04bf      	lsls	r7, r7, #18
 80087ba:	2200      	movs	r2, #0
 80087bc:	2300      	movs	r3, #0
 80087be:	0030      	movs	r0, r6
 80087c0:	0039      	movs	r1, r7
 80087c2:	f7f7 fe43 	bl	800044c <__aeabi_dcmpeq>
 80087c6:	2800      	cmp	r0, #0
 80087c8:	d1a1      	bne.n	800870e <_strtod_l+0x5b6>
 80087ca:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80087cc:	9a08      	ldr	r2, [sp, #32]
 80087ce:	9300      	str	r3, [sp, #0]
 80087d0:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80087d2:	9b06      	ldr	r3, [sp, #24]
 80087d4:	9805      	ldr	r0, [sp, #20]
 80087d6:	f7ff f891 	bl	80078fc <__s2b>
 80087da:	900d      	str	r0, [sp, #52]	@ 0x34
 80087dc:	2800      	cmp	r0, #0
 80087de:	d100      	bne.n	80087e2 <_strtod_l+0x68a>
 80087e0:	e6f9      	b.n	80085d6 <_strtod_l+0x47e>
 80087e2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80087e4:	9907      	ldr	r1, [sp, #28]
 80087e6:	43db      	mvns	r3, r3
 80087e8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80087ea:	17db      	asrs	r3, r3, #31
 80087ec:	1a52      	subs	r2, r2, r1
 80087ee:	9214      	str	r2, [sp, #80]	@ 0x50
 80087f0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80087f2:	9914      	ldr	r1, [sp, #80]	@ 0x50
 80087f4:	17d2      	asrs	r2, r2, #31
 80087f6:	4011      	ands	r1, r2
 80087f8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80087fa:	9114      	str	r1, [sp, #80]	@ 0x50
 80087fc:	401a      	ands	r2, r3
 80087fe:	2300      	movs	r3, #0
 8008800:	921a      	str	r2, [sp, #104]	@ 0x68
 8008802:	9306      	str	r3, [sp, #24]
 8008804:	9307      	str	r3, [sp, #28]
 8008806:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8008808:	9805      	ldr	r0, [sp, #20]
 800880a:	6859      	ldr	r1, [r3, #4]
 800880c:	f7fe ffca 	bl	80077a4 <_Balloc>
 8008810:	9008      	str	r0, [sp, #32]
 8008812:	2800      	cmp	r0, #0
 8008814:	d100      	bne.n	8008818 <_strtod_l+0x6c0>
 8008816:	e6e3      	b.n	80085e0 <_strtod_l+0x488>
 8008818:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800881a:	300c      	adds	r0, #12
 800881c:	0019      	movs	r1, r3
 800881e:	691a      	ldr	r2, [r3, #16]
 8008820:	310c      	adds	r1, #12
 8008822:	3202      	adds	r2, #2
 8008824:	0092      	lsls	r2, r2, #2
 8008826:	f000 fdff 	bl	8009428 <memcpy>
 800882a:	ab20      	add	r3, sp, #128	@ 0x80
 800882c:	9301      	str	r3, [sp, #4]
 800882e:	ab1f      	add	r3, sp, #124	@ 0x7c
 8008830:	9300      	str	r3, [sp, #0]
 8008832:	0032      	movs	r2, r6
 8008834:	003b      	movs	r3, r7
 8008836:	9805      	ldr	r0, [sp, #20]
 8008838:	9610      	str	r6, [sp, #64]	@ 0x40
 800883a:	9711      	str	r7, [sp, #68]	@ 0x44
 800883c:	f7ff fba6 	bl	8007f8c <__d2b>
 8008840:	901e      	str	r0, [sp, #120]	@ 0x78
 8008842:	2800      	cmp	r0, #0
 8008844:	d100      	bne.n	8008848 <_strtod_l+0x6f0>
 8008846:	e6cb      	b.n	80085e0 <_strtod_l+0x488>
 8008848:	2101      	movs	r1, #1
 800884a:	9805      	ldr	r0, [sp, #20]
 800884c:	f7ff f8f2 	bl	8007a34 <__i2b>
 8008850:	9007      	str	r0, [sp, #28]
 8008852:	2800      	cmp	r0, #0
 8008854:	d10e      	bne.n	8008874 <_strtod_l+0x71c>
 8008856:	2300      	movs	r3, #0
 8008858:	9307      	str	r3, [sp, #28]
 800885a:	e6c1      	b.n	80085e0 <_strtod_l+0x488>
 800885c:	234b      	movs	r3, #75	@ 0x4b
 800885e:	1a9a      	subs	r2, r3, r2
 8008860:	3b4c      	subs	r3, #76	@ 0x4c
 8008862:	4093      	lsls	r3, r2
 8008864:	4019      	ands	r1, r3
 8008866:	000f      	movs	r7, r1
 8008868:	e7a7      	b.n	80087ba <_strtod_l+0x662>
 800886a:	2201      	movs	r2, #1
 800886c:	4252      	negs	r2, r2
 800886e:	409a      	lsls	r2, r3
 8008870:	4016      	ands	r6, r2
 8008872:	e7a2      	b.n	80087ba <_strtod_l+0x662>
 8008874:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8008876:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8008878:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 800887a:	1ad4      	subs	r4, r2, r3
 800887c:	2b00      	cmp	r3, #0
 800887e:	db01      	blt.n	8008884 <_strtod_l+0x72c>
 8008880:	9c1a      	ldr	r4, [sp, #104]	@ 0x68
 8008882:	195d      	adds	r5, r3, r5
 8008884:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8008886:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8008888:	1a5b      	subs	r3, r3, r1
 800888a:	2136      	movs	r1, #54	@ 0x36
 800888c:	189b      	adds	r3, r3, r2
 800888e:	1a8a      	subs	r2, r1, r2
 8008890:	497a      	ldr	r1, [pc, #488]	@ (8008a7c <_strtod_l+0x924>)
 8008892:	2001      	movs	r0, #1
 8008894:	468c      	mov	ip, r1
 8008896:	2100      	movs	r1, #0
 8008898:	3b01      	subs	r3, #1
 800889a:	9115      	str	r1, [sp, #84]	@ 0x54
 800889c:	9016      	str	r0, [sp, #88]	@ 0x58
 800889e:	4563      	cmp	r3, ip
 80088a0:	da06      	bge.n	80088b0 <_strtod_l+0x758>
 80088a2:	4661      	mov	r1, ip
 80088a4:	1ac9      	subs	r1, r1, r3
 80088a6:	1a52      	subs	r2, r2, r1
 80088a8:	291f      	cmp	r1, #31
 80088aa:	dc3f      	bgt.n	800892c <_strtod_l+0x7d4>
 80088ac:	4088      	lsls	r0, r1
 80088ae:	9016      	str	r0, [sp, #88]	@ 0x58
 80088b0:	18ab      	adds	r3, r5, r2
 80088b2:	930e      	str	r3, [sp, #56]	@ 0x38
 80088b4:	18a4      	adds	r4, r4, r2
 80088b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80088b8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80088ba:	191c      	adds	r4, r3, r4
 80088bc:	002b      	movs	r3, r5
 80088be:	4295      	cmp	r5, r2
 80088c0:	dd00      	ble.n	80088c4 <_strtod_l+0x76c>
 80088c2:	0013      	movs	r3, r2
 80088c4:	42a3      	cmp	r3, r4
 80088c6:	dd00      	ble.n	80088ca <_strtod_l+0x772>
 80088c8:	0023      	movs	r3, r4
 80088ca:	2b00      	cmp	r3, #0
 80088cc:	dd04      	ble.n	80088d8 <_strtod_l+0x780>
 80088ce:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80088d0:	1ae4      	subs	r4, r4, r3
 80088d2:	1ad2      	subs	r2, r2, r3
 80088d4:	920e      	str	r2, [sp, #56]	@ 0x38
 80088d6:	1aed      	subs	r5, r5, r3
 80088d8:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80088da:	2b00      	cmp	r3, #0
 80088dc:	dd16      	ble.n	800890c <_strtod_l+0x7b4>
 80088de:	001a      	movs	r2, r3
 80088e0:	9907      	ldr	r1, [sp, #28]
 80088e2:	9805      	ldr	r0, [sp, #20]
 80088e4:	f7ff f968 	bl	8007bb8 <__pow5mult>
 80088e8:	9007      	str	r0, [sp, #28]
 80088ea:	2800      	cmp	r0, #0
 80088ec:	d0b3      	beq.n	8008856 <_strtod_l+0x6fe>
 80088ee:	0001      	movs	r1, r0
 80088f0:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 80088f2:	9805      	ldr	r0, [sp, #20]
 80088f4:	f7ff f8b6 	bl	8007a64 <__multiply>
 80088f8:	9013      	str	r0, [sp, #76]	@ 0x4c
 80088fa:	2800      	cmp	r0, #0
 80088fc:	d100      	bne.n	8008900 <_strtod_l+0x7a8>
 80088fe:	e66f      	b.n	80085e0 <_strtod_l+0x488>
 8008900:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8008902:	9805      	ldr	r0, [sp, #20]
 8008904:	f7fe ff92 	bl	800782c <_Bfree>
 8008908:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800890a:	931e      	str	r3, [sp, #120]	@ 0x78
 800890c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800890e:	2b00      	cmp	r3, #0
 8008910:	dc12      	bgt.n	8008938 <_strtod_l+0x7e0>
 8008912:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8008914:	2b00      	cmp	r3, #0
 8008916:	dd18      	ble.n	800894a <_strtod_l+0x7f2>
 8008918:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 800891a:	9908      	ldr	r1, [sp, #32]
 800891c:	9805      	ldr	r0, [sp, #20]
 800891e:	f7ff f94b 	bl	8007bb8 <__pow5mult>
 8008922:	9008      	str	r0, [sp, #32]
 8008924:	2800      	cmp	r0, #0
 8008926:	d110      	bne.n	800894a <_strtod_l+0x7f2>
 8008928:	2300      	movs	r3, #0
 800892a:	e658      	b.n	80085de <_strtod_l+0x486>
 800892c:	4954      	ldr	r1, [pc, #336]	@ (8008a80 <_strtod_l+0x928>)
 800892e:	1acb      	subs	r3, r1, r3
 8008930:	0001      	movs	r1, r0
 8008932:	4099      	lsls	r1, r3
 8008934:	9115      	str	r1, [sp, #84]	@ 0x54
 8008936:	e7ba      	b.n	80088ae <_strtod_l+0x756>
 8008938:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800893a:	991e      	ldr	r1, [sp, #120]	@ 0x78
 800893c:	9805      	ldr	r0, [sp, #20]
 800893e:	f7ff f997 	bl	8007c70 <__lshift>
 8008942:	901e      	str	r0, [sp, #120]	@ 0x78
 8008944:	2800      	cmp	r0, #0
 8008946:	d1e4      	bne.n	8008912 <_strtod_l+0x7ba>
 8008948:	e64a      	b.n	80085e0 <_strtod_l+0x488>
 800894a:	2c00      	cmp	r4, #0
 800894c:	dd07      	ble.n	800895e <_strtod_l+0x806>
 800894e:	0022      	movs	r2, r4
 8008950:	9908      	ldr	r1, [sp, #32]
 8008952:	9805      	ldr	r0, [sp, #20]
 8008954:	f7ff f98c 	bl	8007c70 <__lshift>
 8008958:	9008      	str	r0, [sp, #32]
 800895a:	2800      	cmp	r0, #0
 800895c:	d0e4      	beq.n	8008928 <_strtod_l+0x7d0>
 800895e:	2d00      	cmp	r5, #0
 8008960:	dd08      	ble.n	8008974 <_strtod_l+0x81c>
 8008962:	002a      	movs	r2, r5
 8008964:	9907      	ldr	r1, [sp, #28]
 8008966:	9805      	ldr	r0, [sp, #20]
 8008968:	f7ff f982 	bl	8007c70 <__lshift>
 800896c:	9007      	str	r0, [sp, #28]
 800896e:	2800      	cmp	r0, #0
 8008970:	d100      	bne.n	8008974 <_strtod_l+0x81c>
 8008972:	e635      	b.n	80085e0 <_strtod_l+0x488>
 8008974:	9a08      	ldr	r2, [sp, #32]
 8008976:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8008978:	9805      	ldr	r0, [sp, #20]
 800897a:	f7ff fa01 	bl	8007d80 <__mdiff>
 800897e:	9006      	str	r0, [sp, #24]
 8008980:	2800      	cmp	r0, #0
 8008982:	d100      	bne.n	8008986 <_strtod_l+0x82e>
 8008984:	e62c      	b.n	80085e0 <_strtod_l+0x488>
 8008986:	68c3      	ldr	r3, [r0, #12]
 8008988:	9907      	ldr	r1, [sp, #28]
 800898a:	9313      	str	r3, [sp, #76]	@ 0x4c
 800898c:	2300      	movs	r3, #0
 800898e:	60c3      	str	r3, [r0, #12]
 8008990:	f7ff f9da 	bl	8007d48 <__mcmp>
 8008994:	2800      	cmp	r0, #0
 8008996:	da3b      	bge.n	8008a10 <_strtod_l+0x8b8>
 8008998:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800899a:	4333      	orrs	r3, r6
 800899c:	d167      	bne.n	8008a6e <_strtod_l+0x916>
 800899e:	033b      	lsls	r3, r7, #12
 80089a0:	d165      	bne.n	8008a6e <_strtod_l+0x916>
 80089a2:	22d6      	movs	r2, #214	@ 0xd6
 80089a4:	4b37      	ldr	r3, [pc, #220]	@ (8008a84 <_strtod_l+0x92c>)
 80089a6:	04d2      	lsls	r2, r2, #19
 80089a8:	403b      	ands	r3, r7
 80089aa:	4293      	cmp	r3, r2
 80089ac:	d95f      	bls.n	8008a6e <_strtod_l+0x916>
 80089ae:	9b06      	ldr	r3, [sp, #24]
 80089b0:	695b      	ldr	r3, [r3, #20]
 80089b2:	2b00      	cmp	r3, #0
 80089b4:	d103      	bne.n	80089be <_strtod_l+0x866>
 80089b6:	9b06      	ldr	r3, [sp, #24]
 80089b8:	691b      	ldr	r3, [r3, #16]
 80089ba:	2b01      	cmp	r3, #1
 80089bc:	dd57      	ble.n	8008a6e <_strtod_l+0x916>
 80089be:	9906      	ldr	r1, [sp, #24]
 80089c0:	2201      	movs	r2, #1
 80089c2:	9805      	ldr	r0, [sp, #20]
 80089c4:	f7ff f954 	bl	8007c70 <__lshift>
 80089c8:	9907      	ldr	r1, [sp, #28]
 80089ca:	9006      	str	r0, [sp, #24]
 80089cc:	f7ff f9bc 	bl	8007d48 <__mcmp>
 80089d0:	2800      	cmp	r0, #0
 80089d2:	dd4c      	ble.n	8008a6e <_strtod_l+0x916>
 80089d4:	4b2b      	ldr	r3, [pc, #172]	@ (8008a84 <_strtod_l+0x92c>)
 80089d6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80089d8:	403b      	ands	r3, r7
 80089da:	2a00      	cmp	r2, #0
 80089dc:	d074      	beq.n	8008ac8 <_strtod_l+0x970>
 80089de:	22d6      	movs	r2, #214	@ 0xd6
 80089e0:	04d2      	lsls	r2, r2, #19
 80089e2:	4293      	cmp	r3, r2
 80089e4:	d870      	bhi.n	8008ac8 <_strtod_l+0x970>
 80089e6:	22dc      	movs	r2, #220	@ 0xdc
 80089e8:	0492      	lsls	r2, r2, #18
 80089ea:	4293      	cmp	r3, r2
 80089ec:	d800      	bhi.n	80089f0 <_strtod_l+0x898>
 80089ee:	e693      	b.n	8008718 <_strtod_l+0x5c0>
 80089f0:	0030      	movs	r0, r6
 80089f2:	0039      	movs	r1, r7
 80089f4:	4b24      	ldr	r3, [pc, #144]	@ (8008a88 <_strtod_l+0x930>)
 80089f6:	2200      	movs	r2, #0
 80089f8:	f7f9 f860 	bl	8001abc <__aeabi_dmul>
 80089fc:	4b21      	ldr	r3, [pc, #132]	@ (8008a84 <_strtod_l+0x92c>)
 80089fe:	0006      	movs	r6, r0
 8008a00:	000f      	movs	r7, r1
 8008a02:	420b      	tst	r3, r1
 8008a04:	d000      	beq.n	8008a08 <_strtod_l+0x8b0>
 8008a06:	e5f4      	b.n	80085f2 <_strtod_l+0x49a>
 8008a08:	2322      	movs	r3, #34	@ 0x22
 8008a0a:	9a05      	ldr	r2, [sp, #20]
 8008a0c:	6013      	str	r3, [r2, #0]
 8008a0e:	e5f0      	b.n	80085f2 <_strtod_l+0x49a>
 8008a10:	970e      	str	r7, [sp, #56]	@ 0x38
 8008a12:	2800      	cmp	r0, #0
 8008a14:	d175      	bne.n	8008b02 <_strtod_l+0x9aa>
 8008a16:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8008a18:	033b      	lsls	r3, r7, #12
 8008a1a:	0b1b      	lsrs	r3, r3, #12
 8008a1c:	2a00      	cmp	r2, #0
 8008a1e:	d039      	beq.n	8008a94 <_strtod_l+0x93c>
 8008a20:	4a1a      	ldr	r2, [pc, #104]	@ (8008a8c <_strtod_l+0x934>)
 8008a22:	4293      	cmp	r3, r2
 8008a24:	d138      	bne.n	8008a98 <_strtod_l+0x940>
 8008a26:	2101      	movs	r1, #1
 8008a28:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008a2a:	4249      	negs	r1, r1
 8008a2c:	0032      	movs	r2, r6
 8008a2e:	0008      	movs	r0, r1
 8008a30:	2b00      	cmp	r3, #0
 8008a32:	d00b      	beq.n	8008a4c <_strtod_l+0x8f4>
 8008a34:	24d4      	movs	r4, #212	@ 0xd4
 8008a36:	4b13      	ldr	r3, [pc, #76]	@ (8008a84 <_strtod_l+0x92c>)
 8008a38:	0008      	movs	r0, r1
 8008a3a:	403b      	ands	r3, r7
 8008a3c:	04e4      	lsls	r4, r4, #19
 8008a3e:	42a3      	cmp	r3, r4
 8008a40:	d804      	bhi.n	8008a4c <_strtod_l+0x8f4>
 8008a42:	306c      	adds	r0, #108	@ 0x6c
 8008a44:	0d1b      	lsrs	r3, r3, #20
 8008a46:	1ac3      	subs	r3, r0, r3
 8008a48:	4099      	lsls	r1, r3
 8008a4a:	0008      	movs	r0, r1
 8008a4c:	4282      	cmp	r2, r0
 8008a4e:	d123      	bne.n	8008a98 <_strtod_l+0x940>
 8008a50:	4b0f      	ldr	r3, [pc, #60]	@ (8008a90 <_strtod_l+0x938>)
 8008a52:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8008a54:	4299      	cmp	r1, r3
 8008a56:	d102      	bne.n	8008a5e <_strtod_l+0x906>
 8008a58:	3201      	adds	r2, #1
 8008a5a:	d100      	bne.n	8008a5e <_strtod_l+0x906>
 8008a5c:	e5c0      	b.n	80085e0 <_strtod_l+0x488>
 8008a5e:	4b09      	ldr	r3, [pc, #36]	@ (8008a84 <_strtod_l+0x92c>)
 8008a60:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8008a62:	2600      	movs	r6, #0
 8008a64:	401a      	ands	r2, r3
 8008a66:	0013      	movs	r3, r2
 8008a68:	2280      	movs	r2, #128	@ 0x80
 8008a6a:	0352      	lsls	r2, r2, #13
 8008a6c:	189f      	adds	r7, r3, r2
 8008a6e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008a70:	2b00      	cmp	r3, #0
 8008a72:	d1bd      	bne.n	80089f0 <_strtod_l+0x898>
 8008a74:	e5bd      	b.n	80085f2 <_strtod_l+0x49a>
 8008a76:	46c0      	nop			@ (mov r8, r8)
 8008a78:	0800a338 	.word	0x0800a338
 8008a7c:	fffffc02 	.word	0xfffffc02
 8008a80:	fffffbe2 	.word	0xfffffbe2
 8008a84:	7ff00000 	.word	0x7ff00000
 8008a88:	39500000 	.word	0x39500000
 8008a8c:	000fffff 	.word	0x000fffff
 8008a90:	7fefffff 	.word	0x7fefffff
 8008a94:	4333      	orrs	r3, r6
 8008a96:	d09d      	beq.n	80089d4 <_strtod_l+0x87c>
 8008a98:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8008a9a:	2b00      	cmp	r3, #0
 8008a9c:	d01c      	beq.n	8008ad8 <_strtod_l+0x980>
 8008a9e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008aa0:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8008aa2:	4213      	tst	r3, r2
 8008aa4:	d0e3      	beq.n	8008a6e <_strtod_l+0x916>
 8008aa6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8008aa8:	0030      	movs	r0, r6
 8008aaa:	0039      	movs	r1, r7
 8008aac:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8008aae:	2b00      	cmp	r3, #0
 8008ab0:	d016      	beq.n	8008ae0 <_strtod_l+0x988>
 8008ab2:	f7ff fb39 	bl	8008128 <sulp>
 8008ab6:	0002      	movs	r2, r0
 8008ab8:	000b      	movs	r3, r1
 8008aba:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8008abc:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8008abe:	f7f7 fffd 	bl	8000abc <__aeabi_dadd>
 8008ac2:	0006      	movs	r6, r0
 8008ac4:	000f      	movs	r7, r1
 8008ac6:	e7d2      	b.n	8008a6e <_strtod_l+0x916>
 8008ac8:	2601      	movs	r6, #1
 8008aca:	4a92      	ldr	r2, [pc, #584]	@ (8008d14 <_strtod_l+0xbbc>)
 8008acc:	4276      	negs	r6, r6
 8008ace:	189b      	adds	r3, r3, r2
 8008ad0:	4a91      	ldr	r2, [pc, #580]	@ (8008d18 <_strtod_l+0xbc0>)
 8008ad2:	431a      	orrs	r2, r3
 8008ad4:	0017      	movs	r7, r2
 8008ad6:	e7ca      	b.n	8008a6e <_strtod_l+0x916>
 8008ad8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8008ada:	4233      	tst	r3, r6
 8008adc:	d0c7      	beq.n	8008a6e <_strtod_l+0x916>
 8008ade:	e7e2      	b.n	8008aa6 <_strtod_l+0x94e>
 8008ae0:	f7ff fb22 	bl	8008128 <sulp>
 8008ae4:	0002      	movs	r2, r0
 8008ae6:	000b      	movs	r3, r1
 8008ae8:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8008aea:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8008aec:	f7f9 facc 	bl	8002088 <__aeabi_dsub>
 8008af0:	2200      	movs	r2, #0
 8008af2:	2300      	movs	r3, #0
 8008af4:	0006      	movs	r6, r0
 8008af6:	000f      	movs	r7, r1
 8008af8:	f7f7 fca8 	bl	800044c <__aeabi_dcmpeq>
 8008afc:	2800      	cmp	r0, #0
 8008afe:	d0b6      	beq.n	8008a6e <_strtod_l+0x916>
 8008b00:	e60a      	b.n	8008718 <_strtod_l+0x5c0>
 8008b02:	9907      	ldr	r1, [sp, #28]
 8008b04:	9806      	ldr	r0, [sp, #24]
 8008b06:	f7ff faa1 	bl	800804c <__ratio>
 8008b0a:	2380      	movs	r3, #128	@ 0x80
 8008b0c:	2200      	movs	r2, #0
 8008b0e:	05db      	lsls	r3, r3, #23
 8008b10:	0004      	movs	r4, r0
 8008b12:	000d      	movs	r5, r1
 8008b14:	f7f7 fcaa 	bl	800046c <__aeabi_dcmple>
 8008b18:	2800      	cmp	r0, #0
 8008b1a:	d06c      	beq.n	8008bf6 <_strtod_l+0xa9e>
 8008b1c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8008b1e:	2b00      	cmp	r3, #0
 8008b20:	d177      	bne.n	8008c12 <_strtod_l+0xaba>
 8008b22:	2e00      	cmp	r6, #0
 8008b24:	d157      	bne.n	8008bd6 <_strtod_l+0xa7e>
 8008b26:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008b28:	031b      	lsls	r3, r3, #12
 8008b2a:	d15a      	bne.n	8008be2 <_strtod_l+0xa8a>
 8008b2c:	2200      	movs	r2, #0
 8008b2e:	0020      	movs	r0, r4
 8008b30:	0029      	movs	r1, r5
 8008b32:	4b7a      	ldr	r3, [pc, #488]	@ (8008d1c <_strtod_l+0xbc4>)
 8008b34:	f7f7 fc90 	bl	8000458 <__aeabi_dcmplt>
 8008b38:	2800      	cmp	r0, #0
 8008b3a:	d159      	bne.n	8008bf0 <_strtod_l+0xa98>
 8008b3c:	0020      	movs	r0, r4
 8008b3e:	0029      	movs	r1, r5
 8008b40:	2200      	movs	r2, #0
 8008b42:	4b77      	ldr	r3, [pc, #476]	@ (8008d20 <_strtod_l+0xbc8>)
 8008b44:	f7f8 ffba 	bl	8001abc <__aeabi_dmul>
 8008b48:	0004      	movs	r4, r0
 8008b4a:	000d      	movs	r5, r1
 8008b4c:	2380      	movs	r3, #128	@ 0x80
 8008b4e:	061b      	lsls	r3, r3, #24
 8008b50:	18eb      	adds	r3, r5, r3
 8008b52:	940a      	str	r4, [sp, #40]	@ 0x28
 8008b54:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008b56:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8008b58:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8008b5a:	9216      	str	r2, [sp, #88]	@ 0x58
 8008b5c:	9317      	str	r3, [sp, #92]	@ 0x5c
 8008b5e:	4a71      	ldr	r2, [pc, #452]	@ (8008d24 <_strtod_l+0xbcc>)
 8008b60:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008b62:	4013      	ands	r3, r2
 8008b64:	9315      	str	r3, [sp, #84]	@ 0x54
 8008b66:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8008b68:	4b6f      	ldr	r3, [pc, #444]	@ (8008d28 <_strtod_l+0xbd0>)
 8008b6a:	429a      	cmp	r2, r3
 8008b6c:	d000      	beq.n	8008b70 <_strtod_l+0xa18>
 8008b6e:	e087      	b.n	8008c80 <_strtod_l+0xb28>
 8008b70:	4a6e      	ldr	r2, [pc, #440]	@ (8008d2c <_strtod_l+0xbd4>)
 8008b72:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008b74:	4694      	mov	ip, r2
 8008b76:	4463      	add	r3, ip
 8008b78:	001f      	movs	r7, r3
 8008b7a:	0030      	movs	r0, r6
 8008b7c:	0019      	movs	r1, r3
 8008b7e:	f7ff f999 	bl	8007eb4 <__ulp>
 8008b82:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8008b84:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8008b86:	f7f8 ff99 	bl	8001abc <__aeabi_dmul>
 8008b8a:	0032      	movs	r2, r6
 8008b8c:	003b      	movs	r3, r7
 8008b8e:	f7f7 ff95 	bl	8000abc <__aeabi_dadd>
 8008b92:	4a64      	ldr	r2, [pc, #400]	@ (8008d24 <_strtod_l+0xbcc>)
 8008b94:	4b66      	ldr	r3, [pc, #408]	@ (8008d30 <_strtod_l+0xbd8>)
 8008b96:	0006      	movs	r6, r0
 8008b98:	400a      	ands	r2, r1
 8008b9a:	429a      	cmp	r2, r3
 8008b9c:	d940      	bls.n	8008c20 <_strtod_l+0xac8>
 8008b9e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8008ba0:	4a64      	ldr	r2, [pc, #400]	@ (8008d34 <_strtod_l+0xbdc>)
 8008ba2:	4293      	cmp	r3, r2
 8008ba4:	d103      	bne.n	8008bae <_strtod_l+0xa56>
 8008ba6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8008ba8:	3301      	adds	r3, #1
 8008baa:	d100      	bne.n	8008bae <_strtod_l+0xa56>
 8008bac:	e518      	b.n	80085e0 <_strtod_l+0x488>
 8008bae:	2601      	movs	r6, #1
 8008bb0:	4f60      	ldr	r7, [pc, #384]	@ (8008d34 <_strtod_l+0xbdc>)
 8008bb2:	4276      	negs	r6, r6
 8008bb4:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8008bb6:	9805      	ldr	r0, [sp, #20]
 8008bb8:	f7fe fe38 	bl	800782c <_Bfree>
 8008bbc:	9908      	ldr	r1, [sp, #32]
 8008bbe:	9805      	ldr	r0, [sp, #20]
 8008bc0:	f7fe fe34 	bl	800782c <_Bfree>
 8008bc4:	9907      	ldr	r1, [sp, #28]
 8008bc6:	9805      	ldr	r0, [sp, #20]
 8008bc8:	f7fe fe30 	bl	800782c <_Bfree>
 8008bcc:	9906      	ldr	r1, [sp, #24]
 8008bce:	9805      	ldr	r0, [sp, #20]
 8008bd0:	f7fe fe2c 	bl	800782c <_Bfree>
 8008bd4:	e617      	b.n	8008806 <_strtod_l+0x6ae>
 8008bd6:	2e01      	cmp	r6, #1
 8008bd8:	d103      	bne.n	8008be2 <_strtod_l+0xa8a>
 8008bda:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008bdc:	2b00      	cmp	r3, #0
 8008bde:	d100      	bne.n	8008be2 <_strtod_l+0xa8a>
 8008be0:	e59a      	b.n	8008718 <_strtod_l+0x5c0>
 8008be2:	2300      	movs	r3, #0
 8008be4:	4c54      	ldr	r4, [pc, #336]	@ (8008d38 <_strtod_l+0xbe0>)
 8008be6:	4d4d      	ldr	r5, [pc, #308]	@ (8008d1c <_strtod_l+0xbc4>)
 8008be8:	930a      	str	r3, [sp, #40]	@ 0x28
 8008bea:	940b      	str	r4, [sp, #44]	@ 0x2c
 8008bec:	2400      	movs	r4, #0
 8008bee:	e7b2      	b.n	8008b56 <_strtod_l+0x9fe>
 8008bf0:	2400      	movs	r4, #0
 8008bf2:	4d4b      	ldr	r5, [pc, #300]	@ (8008d20 <_strtod_l+0xbc8>)
 8008bf4:	e7aa      	b.n	8008b4c <_strtod_l+0x9f4>
 8008bf6:	0020      	movs	r0, r4
 8008bf8:	0029      	movs	r1, r5
 8008bfa:	4b49      	ldr	r3, [pc, #292]	@ (8008d20 <_strtod_l+0xbc8>)
 8008bfc:	2200      	movs	r2, #0
 8008bfe:	f7f8 ff5d 	bl	8001abc <__aeabi_dmul>
 8008c02:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8008c04:	0004      	movs	r4, r0
 8008c06:	000d      	movs	r5, r1
 8008c08:	2b00      	cmp	r3, #0
 8008c0a:	d09f      	beq.n	8008b4c <_strtod_l+0x9f4>
 8008c0c:	940a      	str	r4, [sp, #40]	@ 0x28
 8008c0e:	950b      	str	r5, [sp, #44]	@ 0x2c
 8008c10:	e7a1      	b.n	8008b56 <_strtod_l+0x9fe>
 8008c12:	2300      	movs	r3, #0
 8008c14:	4c41      	ldr	r4, [pc, #260]	@ (8008d1c <_strtod_l+0xbc4>)
 8008c16:	0025      	movs	r5, r4
 8008c18:	930a      	str	r3, [sp, #40]	@ 0x28
 8008c1a:	940b      	str	r4, [sp, #44]	@ 0x2c
 8008c1c:	001c      	movs	r4, r3
 8008c1e:	e79a      	b.n	8008b56 <_strtod_l+0x9fe>
 8008c20:	23d4      	movs	r3, #212	@ 0xd4
 8008c22:	049b      	lsls	r3, r3, #18
 8008c24:	18cf      	adds	r7, r1, r3
 8008c26:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008c28:	9710      	str	r7, [sp, #64]	@ 0x40
 8008c2a:	2b00      	cmp	r3, #0
 8008c2c:	d1c2      	bne.n	8008bb4 <_strtod_l+0xa5c>
 8008c2e:	4b3d      	ldr	r3, [pc, #244]	@ (8008d24 <_strtod_l+0xbcc>)
 8008c30:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8008c32:	403b      	ands	r3, r7
 8008c34:	429a      	cmp	r2, r3
 8008c36:	d1bd      	bne.n	8008bb4 <_strtod_l+0xa5c>
 8008c38:	0020      	movs	r0, r4
 8008c3a:	0029      	movs	r1, r5
 8008c3c:	f7f7 fc8c 	bl	8000558 <__aeabi_d2lz>
 8008c40:	f7f7 fcc4 	bl	80005cc <__aeabi_l2d>
 8008c44:	0002      	movs	r2, r0
 8008c46:	000b      	movs	r3, r1
 8008c48:	0020      	movs	r0, r4
 8008c4a:	0029      	movs	r1, r5
 8008c4c:	f7f9 fa1c 	bl	8002088 <__aeabi_dsub>
 8008c50:	033c      	lsls	r4, r7, #12
 8008c52:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8008c54:	0b24      	lsrs	r4, r4, #12
 8008c56:	4334      	orrs	r4, r6
 8008c58:	900e      	str	r0, [sp, #56]	@ 0x38
 8008c5a:	910f      	str	r1, [sp, #60]	@ 0x3c
 8008c5c:	4a37      	ldr	r2, [pc, #220]	@ (8008d3c <_strtod_l+0xbe4>)
 8008c5e:	431c      	orrs	r4, r3
 8008c60:	d052      	beq.n	8008d08 <_strtod_l+0xbb0>
 8008c62:	4b37      	ldr	r3, [pc, #220]	@ (8008d40 <_strtod_l+0xbe8>)
 8008c64:	f7f7 fbf8 	bl	8000458 <__aeabi_dcmplt>
 8008c68:	2800      	cmp	r0, #0
 8008c6a:	d000      	beq.n	8008c6e <_strtod_l+0xb16>
 8008c6c:	e4c1      	b.n	80085f2 <_strtod_l+0x49a>
 8008c6e:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8008c70:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8008c72:	4a34      	ldr	r2, [pc, #208]	@ (8008d44 <_strtod_l+0xbec>)
 8008c74:	4b2a      	ldr	r3, [pc, #168]	@ (8008d20 <_strtod_l+0xbc8>)
 8008c76:	f7f7 fc03 	bl	8000480 <__aeabi_dcmpgt>
 8008c7a:	2800      	cmp	r0, #0
 8008c7c:	d09a      	beq.n	8008bb4 <_strtod_l+0xa5c>
 8008c7e:	e4b8      	b.n	80085f2 <_strtod_l+0x49a>
 8008c80:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008c82:	2b00      	cmp	r3, #0
 8008c84:	d02a      	beq.n	8008cdc <_strtod_l+0xb84>
 8008c86:	23d4      	movs	r3, #212	@ 0xd4
 8008c88:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8008c8a:	04db      	lsls	r3, r3, #19
 8008c8c:	429a      	cmp	r2, r3
 8008c8e:	d825      	bhi.n	8008cdc <_strtod_l+0xb84>
 8008c90:	0020      	movs	r0, r4
 8008c92:	0029      	movs	r1, r5
 8008c94:	4a2c      	ldr	r2, [pc, #176]	@ (8008d48 <_strtod_l+0xbf0>)
 8008c96:	4b2d      	ldr	r3, [pc, #180]	@ (8008d4c <_strtod_l+0xbf4>)
 8008c98:	f7f7 fbe8 	bl	800046c <__aeabi_dcmple>
 8008c9c:	2800      	cmp	r0, #0
 8008c9e:	d016      	beq.n	8008cce <_strtod_l+0xb76>
 8008ca0:	0020      	movs	r0, r4
 8008ca2:	0029      	movs	r1, r5
 8008ca4:	f7f7 fc3a 	bl	800051c <__aeabi_d2uiz>
 8008ca8:	2800      	cmp	r0, #0
 8008caa:	d100      	bne.n	8008cae <_strtod_l+0xb56>
 8008cac:	3001      	adds	r0, #1
 8008cae:	f7f9 fe81 	bl	80029b4 <__aeabi_ui2d>
 8008cb2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8008cb4:	0004      	movs	r4, r0
 8008cb6:	000d      	movs	r5, r1
 8008cb8:	2b00      	cmp	r3, #0
 8008cba:	d122      	bne.n	8008d02 <_strtod_l+0xbaa>
 8008cbc:	2380      	movs	r3, #128	@ 0x80
 8008cbe:	061b      	lsls	r3, r3, #24
 8008cc0:	18cb      	adds	r3, r1, r3
 8008cc2:	9018      	str	r0, [sp, #96]	@ 0x60
 8008cc4:	9319      	str	r3, [sp, #100]	@ 0x64
 8008cc6:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8008cc8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8008cca:	9216      	str	r2, [sp, #88]	@ 0x58
 8008ccc:	9317      	str	r3, [sp, #92]	@ 0x5c
 8008cce:	22d6      	movs	r2, #214	@ 0xd6
 8008cd0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8008cd2:	04d2      	lsls	r2, r2, #19
 8008cd4:	189b      	adds	r3, r3, r2
 8008cd6:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8008cd8:	1a9b      	subs	r3, r3, r2
 8008cda:	9317      	str	r3, [sp, #92]	@ 0x5c
 8008cdc:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8008cde:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8008ce0:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 8008ce2:	9f17      	ldr	r7, [sp, #92]	@ 0x5c
 8008ce4:	f7ff f8e6 	bl	8007eb4 <__ulp>
 8008ce8:	0002      	movs	r2, r0
 8008cea:	000b      	movs	r3, r1
 8008cec:	0030      	movs	r0, r6
 8008cee:	0039      	movs	r1, r7
 8008cf0:	f7f8 fee4 	bl	8001abc <__aeabi_dmul>
 8008cf4:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8008cf6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8008cf8:	f7f7 fee0 	bl	8000abc <__aeabi_dadd>
 8008cfc:	0006      	movs	r6, r0
 8008cfe:	000f      	movs	r7, r1
 8008d00:	e791      	b.n	8008c26 <_strtod_l+0xace>
 8008d02:	9418      	str	r4, [sp, #96]	@ 0x60
 8008d04:	9519      	str	r5, [sp, #100]	@ 0x64
 8008d06:	e7de      	b.n	8008cc6 <_strtod_l+0xb6e>
 8008d08:	4b11      	ldr	r3, [pc, #68]	@ (8008d50 <_strtod_l+0xbf8>)
 8008d0a:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8008d0c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8008d0e:	f7f7 fba3 	bl	8000458 <__aeabi_dcmplt>
 8008d12:	e7b2      	b.n	8008c7a <_strtod_l+0xb22>
 8008d14:	fff00000 	.word	0xfff00000
 8008d18:	000fffff 	.word	0x000fffff
 8008d1c:	3ff00000 	.word	0x3ff00000
 8008d20:	3fe00000 	.word	0x3fe00000
 8008d24:	7ff00000 	.word	0x7ff00000
 8008d28:	7fe00000 	.word	0x7fe00000
 8008d2c:	fcb00000 	.word	0xfcb00000
 8008d30:	7c9fffff 	.word	0x7c9fffff
 8008d34:	7fefffff 	.word	0x7fefffff
 8008d38:	bff00000 	.word	0xbff00000
 8008d3c:	94a03595 	.word	0x94a03595
 8008d40:	3fdfffff 	.word	0x3fdfffff
 8008d44:	35afe535 	.word	0x35afe535
 8008d48:	ffc00000 	.word	0xffc00000
 8008d4c:	41dfffff 	.word	0x41dfffff
 8008d50:	3fcfffff 	.word	0x3fcfffff

08008d54 <_strtod_r>:
 8008d54:	b510      	push	{r4, lr}
 8008d56:	4b02      	ldr	r3, [pc, #8]	@ (8008d60 <_strtod_r+0xc>)
 8008d58:	f7ff f9fe 	bl	8008158 <_strtod_l>
 8008d5c:	bd10      	pop	{r4, pc}
 8008d5e:	46c0      	nop			@ (mov r8, r8)
 8008d60:	20000068 	.word	0x20000068

08008d64 <_strtol_l.isra.0>:
 8008d64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008d66:	b085      	sub	sp, #20
 8008d68:	0017      	movs	r7, r2
 8008d6a:	001e      	movs	r6, r3
 8008d6c:	9003      	str	r0, [sp, #12]
 8008d6e:	9101      	str	r1, [sp, #4]
 8008d70:	2b24      	cmp	r3, #36	@ 0x24
 8008d72:	d823      	bhi.n	8008dbc <_strtol_l.isra.0+0x58>
 8008d74:	000c      	movs	r4, r1
 8008d76:	2b01      	cmp	r3, #1
 8008d78:	d020      	beq.n	8008dbc <_strtol_l.isra.0+0x58>
 8008d7a:	4b3d      	ldr	r3, [pc, #244]	@ (8008e70 <_strtol_l.isra.0+0x10c>)
 8008d7c:	2208      	movs	r2, #8
 8008d7e:	469c      	mov	ip, r3
 8008d80:	0023      	movs	r3, r4
 8008d82:	4661      	mov	r1, ip
 8008d84:	781d      	ldrb	r5, [r3, #0]
 8008d86:	3401      	adds	r4, #1
 8008d88:	5d48      	ldrb	r0, [r1, r5]
 8008d8a:	0001      	movs	r1, r0
 8008d8c:	4011      	ands	r1, r2
 8008d8e:	4210      	tst	r0, r2
 8008d90:	d1f6      	bne.n	8008d80 <_strtol_l.isra.0+0x1c>
 8008d92:	2d2d      	cmp	r5, #45	@ 0x2d
 8008d94:	d119      	bne.n	8008dca <_strtol_l.isra.0+0x66>
 8008d96:	7825      	ldrb	r5, [r4, #0]
 8008d98:	1c9c      	adds	r4, r3, #2
 8008d9a:	2301      	movs	r3, #1
 8008d9c:	9300      	str	r3, [sp, #0]
 8008d9e:	2210      	movs	r2, #16
 8008da0:	0033      	movs	r3, r6
 8008da2:	4393      	bics	r3, r2
 8008da4:	d11d      	bne.n	8008de2 <_strtol_l.isra.0+0x7e>
 8008da6:	2d30      	cmp	r5, #48	@ 0x30
 8008da8:	d115      	bne.n	8008dd6 <_strtol_l.isra.0+0x72>
 8008daa:	2120      	movs	r1, #32
 8008dac:	7823      	ldrb	r3, [r4, #0]
 8008dae:	438b      	bics	r3, r1
 8008db0:	2b58      	cmp	r3, #88	@ 0x58
 8008db2:	d110      	bne.n	8008dd6 <_strtol_l.isra.0+0x72>
 8008db4:	7865      	ldrb	r5, [r4, #1]
 8008db6:	3402      	adds	r4, #2
 8008db8:	2610      	movs	r6, #16
 8008dba:	e012      	b.n	8008de2 <_strtol_l.isra.0+0x7e>
 8008dbc:	f7fd fd3a 	bl	8006834 <__errno>
 8008dc0:	2316      	movs	r3, #22
 8008dc2:	6003      	str	r3, [r0, #0]
 8008dc4:	2000      	movs	r0, #0
 8008dc6:	b005      	add	sp, #20
 8008dc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008dca:	9100      	str	r1, [sp, #0]
 8008dcc:	2d2b      	cmp	r5, #43	@ 0x2b
 8008dce:	d1e6      	bne.n	8008d9e <_strtol_l.isra.0+0x3a>
 8008dd0:	7825      	ldrb	r5, [r4, #0]
 8008dd2:	1c9c      	adds	r4, r3, #2
 8008dd4:	e7e3      	b.n	8008d9e <_strtol_l.isra.0+0x3a>
 8008dd6:	2e00      	cmp	r6, #0
 8008dd8:	d1ee      	bne.n	8008db8 <_strtol_l.isra.0+0x54>
 8008dda:	360a      	adds	r6, #10
 8008ddc:	2d30      	cmp	r5, #48	@ 0x30
 8008dde:	d100      	bne.n	8008de2 <_strtol_l.isra.0+0x7e>
 8008de0:	3e02      	subs	r6, #2
 8008de2:	4a24      	ldr	r2, [pc, #144]	@ (8008e74 <_strtol_l.isra.0+0x110>)
 8008de4:	9b00      	ldr	r3, [sp, #0]
 8008de6:	4694      	mov	ip, r2
 8008de8:	4463      	add	r3, ip
 8008dea:	0031      	movs	r1, r6
 8008dec:	0018      	movs	r0, r3
 8008dee:	9302      	str	r3, [sp, #8]
 8008df0:	f7f7 fa2c 	bl	800024c <__aeabi_uidivmod>
 8008df4:	2200      	movs	r2, #0
 8008df6:	4684      	mov	ip, r0
 8008df8:	0010      	movs	r0, r2
 8008dfa:	002b      	movs	r3, r5
 8008dfc:	3b30      	subs	r3, #48	@ 0x30
 8008dfe:	2b09      	cmp	r3, #9
 8008e00:	d811      	bhi.n	8008e26 <_strtol_l.isra.0+0xc2>
 8008e02:	001d      	movs	r5, r3
 8008e04:	42ae      	cmp	r6, r5
 8008e06:	dd1d      	ble.n	8008e44 <_strtol_l.isra.0+0xe0>
 8008e08:	1c53      	adds	r3, r2, #1
 8008e0a:	d009      	beq.n	8008e20 <_strtol_l.isra.0+0xbc>
 8008e0c:	2201      	movs	r2, #1
 8008e0e:	4252      	negs	r2, r2
 8008e10:	4584      	cmp	ip, r0
 8008e12:	d305      	bcc.n	8008e20 <_strtol_l.isra.0+0xbc>
 8008e14:	d101      	bne.n	8008e1a <_strtol_l.isra.0+0xb6>
 8008e16:	42a9      	cmp	r1, r5
 8008e18:	db11      	blt.n	8008e3e <_strtol_l.isra.0+0xda>
 8008e1a:	2201      	movs	r2, #1
 8008e1c:	4370      	muls	r0, r6
 8008e1e:	1828      	adds	r0, r5, r0
 8008e20:	7825      	ldrb	r5, [r4, #0]
 8008e22:	3401      	adds	r4, #1
 8008e24:	e7e9      	b.n	8008dfa <_strtol_l.isra.0+0x96>
 8008e26:	002b      	movs	r3, r5
 8008e28:	3b41      	subs	r3, #65	@ 0x41
 8008e2a:	2b19      	cmp	r3, #25
 8008e2c:	d801      	bhi.n	8008e32 <_strtol_l.isra.0+0xce>
 8008e2e:	3d37      	subs	r5, #55	@ 0x37
 8008e30:	e7e8      	b.n	8008e04 <_strtol_l.isra.0+0xa0>
 8008e32:	002b      	movs	r3, r5
 8008e34:	3b61      	subs	r3, #97	@ 0x61
 8008e36:	2b19      	cmp	r3, #25
 8008e38:	d804      	bhi.n	8008e44 <_strtol_l.isra.0+0xe0>
 8008e3a:	3d57      	subs	r5, #87	@ 0x57
 8008e3c:	e7e2      	b.n	8008e04 <_strtol_l.isra.0+0xa0>
 8008e3e:	2201      	movs	r2, #1
 8008e40:	4252      	negs	r2, r2
 8008e42:	e7ed      	b.n	8008e20 <_strtol_l.isra.0+0xbc>
 8008e44:	1c53      	adds	r3, r2, #1
 8008e46:	d108      	bne.n	8008e5a <_strtol_l.isra.0+0xf6>
 8008e48:	2322      	movs	r3, #34	@ 0x22
 8008e4a:	9a03      	ldr	r2, [sp, #12]
 8008e4c:	9802      	ldr	r0, [sp, #8]
 8008e4e:	6013      	str	r3, [r2, #0]
 8008e50:	2f00      	cmp	r7, #0
 8008e52:	d0b8      	beq.n	8008dc6 <_strtol_l.isra.0+0x62>
 8008e54:	1e63      	subs	r3, r4, #1
 8008e56:	9301      	str	r3, [sp, #4]
 8008e58:	e007      	b.n	8008e6a <_strtol_l.isra.0+0x106>
 8008e5a:	9b00      	ldr	r3, [sp, #0]
 8008e5c:	2b00      	cmp	r3, #0
 8008e5e:	d000      	beq.n	8008e62 <_strtol_l.isra.0+0xfe>
 8008e60:	4240      	negs	r0, r0
 8008e62:	2f00      	cmp	r7, #0
 8008e64:	d0af      	beq.n	8008dc6 <_strtol_l.isra.0+0x62>
 8008e66:	2a00      	cmp	r2, #0
 8008e68:	d1f4      	bne.n	8008e54 <_strtol_l.isra.0+0xf0>
 8008e6a:	9b01      	ldr	r3, [sp, #4]
 8008e6c:	603b      	str	r3, [r7, #0]
 8008e6e:	e7aa      	b.n	8008dc6 <_strtol_l.isra.0+0x62>
 8008e70:	0800a361 	.word	0x0800a361
 8008e74:	7fffffff 	.word	0x7fffffff

08008e78 <_strtol_r>:
 8008e78:	b510      	push	{r4, lr}
 8008e7a:	f7ff ff73 	bl	8008d64 <_strtol_l.isra.0>
 8008e7e:	bd10      	pop	{r4, pc}

08008e80 <__ssputs_r>:
 8008e80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008e82:	688e      	ldr	r6, [r1, #8]
 8008e84:	b085      	sub	sp, #20
 8008e86:	001f      	movs	r7, r3
 8008e88:	000c      	movs	r4, r1
 8008e8a:	680b      	ldr	r3, [r1, #0]
 8008e8c:	9002      	str	r0, [sp, #8]
 8008e8e:	9203      	str	r2, [sp, #12]
 8008e90:	42be      	cmp	r6, r7
 8008e92:	d830      	bhi.n	8008ef6 <__ssputs_r+0x76>
 8008e94:	210c      	movs	r1, #12
 8008e96:	5e62      	ldrsh	r2, [r4, r1]
 8008e98:	2190      	movs	r1, #144	@ 0x90
 8008e9a:	00c9      	lsls	r1, r1, #3
 8008e9c:	420a      	tst	r2, r1
 8008e9e:	d028      	beq.n	8008ef2 <__ssputs_r+0x72>
 8008ea0:	2003      	movs	r0, #3
 8008ea2:	6921      	ldr	r1, [r4, #16]
 8008ea4:	1a5b      	subs	r3, r3, r1
 8008ea6:	9301      	str	r3, [sp, #4]
 8008ea8:	6963      	ldr	r3, [r4, #20]
 8008eaa:	4343      	muls	r3, r0
 8008eac:	9801      	ldr	r0, [sp, #4]
 8008eae:	0fdd      	lsrs	r5, r3, #31
 8008eb0:	18ed      	adds	r5, r5, r3
 8008eb2:	1c7b      	adds	r3, r7, #1
 8008eb4:	181b      	adds	r3, r3, r0
 8008eb6:	106d      	asrs	r5, r5, #1
 8008eb8:	42ab      	cmp	r3, r5
 8008eba:	d900      	bls.n	8008ebe <__ssputs_r+0x3e>
 8008ebc:	001d      	movs	r5, r3
 8008ebe:	0552      	lsls	r2, r2, #21
 8008ec0:	d528      	bpl.n	8008f14 <__ssputs_r+0x94>
 8008ec2:	0029      	movs	r1, r5
 8008ec4:	9802      	ldr	r0, [sp, #8]
 8008ec6:	f7fe fbdd 	bl	8007684 <_malloc_r>
 8008eca:	1e06      	subs	r6, r0, #0
 8008ecc:	d02c      	beq.n	8008f28 <__ssputs_r+0xa8>
 8008ece:	9a01      	ldr	r2, [sp, #4]
 8008ed0:	6921      	ldr	r1, [r4, #16]
 8008ed2:	f000 faa9 	bl	8009428 <memcpy>
 8008ed6:	89a2      	ldrh	r2, [r4, #12]
 8008ed8:	4b18      	ldr	r3, [pc, #96]	@ (8008f3c <__ssputs_r+0xbc>)
 8008eda:	401a      	ands	r2, r3
 8008edc:	2380      	movs	r3, #128	@ 0x80
 8008ede:	4313      	orrs	r3, r2
 8008ee0:	81a3      	strh	r3, [r4, #12]
 8008ee2:	9b01      	ldr	r3, [sp, #4]
 8008ee4:	6126      	str	r6, [r4, #16]
 8008ee6:	18f6      	adds	r6, r6, r3
 8008ee8:	6026      	str	r6, [r4, #0]
 8008eea:	003e      	movs	r6, r7
 8008eec:	6165      	str	r5, [r4, #20]
 8008eee:	1aed      	subs	r5, r5, r3
 8008ef0:	60a5      	str	r5, [r4, #8]
 8008ef2:	42be      	cmp	r6, r7
 8008ef4:	d900      	bls.n	8008ef8 <__ssputs_r+0x78>
 8008ef6:	003e      	movs	r6, r7
 8008ef8:	0032      	movs	r2, r6
 8008efa:	9903      	ldr	r1, [sp, #12]
 8008efc:	6820      	ldr	r0, [r4, #0]
 8008efe:	f000 fa3a 	bl	8009376 <memmove>
 8008f02:	2000      	movs	r0, #0
 8008f04:	68a3      	ldr	r3, [r4, #8]
 8008f06:	1b9b      	subs	r3, r3, r6
 8008f08:	60a3      	str	r3, [r4, #8]
 8008f0a:	6823      	ldr	r3, [r4, #0]
 8008f0c:	199b      	adds	r3, r3, r6
 8008f0e:	6023      	str	r3, [r4, #0]
 8008f10:	b005      	add	sp, #20
 8008f12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008f14:	002a      	movs	r2, r5
 8008f16:	9802      	ldr	r0, [sp, #8]
 8008f18:	f000 fe4e 	bl	8009bb8 <_realloc_r>
 8008f1c:	1e06      	subs	r6, r0, #0
 8008f1e:	d1e0      	bne.n	8008ee2 <__ssputs_r+0x62>
 8008f20:	6921      	ldr	r1, [r4, #16]
 8008f22:	9802      	ldr	r0, [sp, #8]
 8008f24:	f7fe fb38 	bl	8007598 <_free_r>
 8008f28:	230c      	movs	r3, #12
 8008f2a:	2001      	movs	r0, #1
 8008f2c:	9a02      	ldr	r2, [sp, #8]
 8008f2e:	4240      	negs	r0, r0
 8008f30:	6013      	str	r3, [r2, #0]
 8008f32:	89a2      	ldrh	r2, [r4, #12]
 8008f34:	3334      	adds	r3, #52	@ 0x34
 8008f36:	4313      	orrs	r3, r2
 8008f38:	81a3      	strh	r3, [r4, #12]
 8008f3a:	e7e9      	b.n	8008f10 <__ssputs_r+0x90>
 8008f3c:	fffffb7f 	.word	0xfffffb7f

08008f40 <_svfiprintf_r>:
 8008f40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008f42:	b0a1      	sub	sp, #132	@ 0x84
 8008f44:	9003      	str	r0, [sp, #12]
 8008f46:	001d      	movs	r5, r3
 8008f48:	898b      	ldrh	r3, [r1, #12]
 8008f4a:	000f      	movs	r7, r1
 8008f4c:	0016      	movs	r6, r2
 8008f4e:	061b      	lsls	r3, r3, #24
 8008f50:	d511      	bpl.n	8008f76 <_svfiprintf_r+0x36>
 8008f52:	690b      	ldr	r3, [r1, #16]
 8008f54:	2b00      	cmp	r3, #0
 8008f56:	d10e      	bne.n	8008f76 <_svfiprintf_r+0x36>
 8008f58:	2140      	movs	r1, #64	@ 0x40
 8008f5a:	f7fe fb93 	bl	8007684 <_malloc_r>
 8008f5e:	6038      	str	r0, [r7, #0]
 8008f60:	6138      	str	r0, [r7, #16]
 8008f62:	2800      	cmp	r0, #0
 8008f64:	d105      	bne.n	8008f72 <_svfiprintf_r+0x32>
 8008f66:	230c      	movs	r3, #12
 8008f68:	9a03      	ldr	r2, [sp, #12]
 8008f6a:	6013      	str	r3, [r2, #0]
 8008f6c:	2001      	movs	r0, #1
 8008f6e:	4240      	negs	r0, r0
 8008f70:	e0cf      	b.n	8009112 <_svfiprintf_r+0x1d2>
 8008f72:	2340      	movs	r3, #64	@ 0x40
 8008f74:	617b      	str	r3, [r7, #20]
 8008f76:	2300      	movs	r3, #0
 8008f78:	ac08      	add	r4, sp, #32
 8008f7a:	6163      	str	r3, [r4, #20]
 8008f7c:	3320      	adds	r3, #32
 8008f7e:	7663      	strb	r3, [r4, #25]
 8008f80:	3310      	adds	r3, #16
 8008f82:	76a3      	strb	r3, [r4, #26]
 8008f84:	9507      	str	r5, [sp, #28]
 8008f86:	0035      	movs	r5, r6
 8008f88:	782b      	ldrb	r3, [r5, #0]
 8008f8a:	2b00      	cmp	r3, #0
 8008f8c:	d001      	beq.n	8008f92 <_svfiprintf_r+0x52>
 8008f8e:	2b25      	cmp	r3, #37	@ 0x25
 8008f90:	d148      	bne.n	8009024 <_svfiprintf_r+0xe4>
 8008f92:	1bab      	subs	r3, r5, r6
 8008f94:	9305      	str	r3, [sp, #20]
 8008f96:	42b5      	cmp	r5, r6
 8008f98:	d00b      	beq.n	8008fb2 <_svfiprintf_r+0x72>
 8008f9a:	0032      	movs	r2, r6
 8008f9c:	0039      	movs	r1, r7
 8008f9e:	9803      	ldr	r0, [sp, #12]
 8008fa0:	f7ff ff6e 	bl	8008e80 <__ssputs_r>
 8008fa4:	3001      	adds	r0, #1
 8008fa6:	d100      	bne.n	8008faa <_svfiprintf_r+0x6a>
 8008fa8:	e0ae      	b.n	8009108 <_svfiprintf_r+0x1c8>
 8008faa:	6963      	ldr	r3, [r4, #20]
 8008fac:	9a05      	ldr	r2, [sp, #20]
 8008fae:	189b      	adds	r3, r3, r2
 8008fb0:	6163      	str	r3, [r4, #20]
 8008fb2:	782b      	ldrb	r3, [r5, #0]
 8008fb4:	2b00      	cmp	r3, #0
 8008fb6:	d100      	bne.n	8008fba <_svfiprintf_r+0x7a>
 8008fb8:	e0a6      	b.n	8009108 <_svfiprintf_r+0x1c8>
 8008fba:	2201      	movs	r2, #1
 8008fbc:	2300      	movs	r3, #0
 8008fbe:	4252      	negs	r2, r2
 8008fc0:	6062      	str	r2, [r4, #4]
 8008fc2:	a904      	add	r1, sp, #16
 8008fc4:	3254      	adds	r2, #84	@ 0x54
 8008fc6:	1852      	adds	r2, r2, r1
 8008fc8:	1c6e      	adds	r6, r5, #1
 8008fca:	6023      	str	r3, [r4, #0]
 8008fcc:	60e3      	str	r3, [r4, #12]
 8008fce:	60a3      	str	r3, [r4, #8]
 8008fd0:	7013      	strb	r3, [r2, #0]
 8008fd2:	65a3      	str	r3, [r4, #88]	@ 0x58
 8008fd4:	4b54      	ldr	r3, [pc, #336]	@ (8009128 <_svfiprintf_r+0x1e8>)
 8008fd6:	2205      	movs	r2, #5
 8008fd8:	0018      	movs	r0, r3
 8008fda:	7831      	ldrb	r1, [r6, #0]
 8008fdc:	9305      	str	r3, [sp, #20]
 8008fde:	f7fd fc56 	bl	800688e <memchr>
 8008fe2:	1c75      	adds	r5, r6, #1
 8008fe4:	2800      	cmp	r0, #0
 8008fe6:	d11f      	bne.n	8009028 <_svfiprintf_r+0xe8>
 8008fe8:	6822      	ldr	r2, [r4, #0]
 8008fea:	06d3      	lsls	r3, r2, #27
 8008fec:	d504      	bpl.n	8008ff8 <_svfiprintf_r+0xb8>
 8008fee:	2353      	movs	r3, #83	@ 0x53
 8008ff0:	a904      	add	r1, sp, #16
 8008ff2:	185b      	adds	r3, r3, r1
 8008ff4:	2120      	movs	r1, #32
 8008ff6:	7019      	strb	r1, [r3, #0]
 8008ff8:	0713      	lsls	r3, r2, #28
 8008ffa:	d504      	bpl.n	8009006 <_svfiprintf_r+0xc6>
 8008ffc:	2353      	movs	r3, #83	@ 0x53
 8008ffe:	a904      	add	r1, sp, #16
 8009000:	185b      	adds	r3, r3, r1
 8009002:	212b      	movs	r1, #43	@ 0x2b
 8009004:	7019      	strb	r1, [r3, #0]
 8009006:	7833      	ldrb	r3, [r6, #0]
 8009008:	2b2a      	cmp	r3, #42	@ 0x2a
 800900a:	d016      	beq.n	800903a <_svfiprintf_r+0xfa>
 800900c:	0035      	movs	r5, r6
 800900e:	2100      	movs	r1, #0
 8009010:	200a      	movs	r0, #10
 8009012:	68e3      	ldr	r3, [r4, #12]
 8009014:	782a      	ldrb	r2, [r5, #0]
 8009016:	1c6e      	adds	r6, r5, #1
 8009018:	3a30      	subs	r2, #48	@ 0x30
 800901a:	2a09      	cmp	r2, #9
 800901c:	d950      	bls.n	80090c0 <_svfiprintf_r+0x180>
 800901e:	2900      	cmp	r1, #0
 8009020:	d111      	bne.n	8009046 <_svfiprintf_r+0x106>
 8009022:	e017      	b.n	8009054 <_svfiprintf_r+0x114>
 8009024:	3501      	adds	r5, #1
 8009026:	e7af      	b.n	8008f88 <_svfiprintf_r+0x48>
 8009028:	9b05      	ldr	r3, [sp, #20]
 800902a:	6822      	ldr	r2, [r4, #0]
 800902c:	1ac0      	subs	r0, r0, r3
 800902e:	2301      	movs	r3, #1
 8009030:	4083      	lsls	r3, r0
 8009032:	4313      	orrs	r3, r2
 8009034:	002e      	movs	r6, r5
 8009036:	6023      	str	r3, [r4, #0]
 8009038:	e7cc      	b.n	8008fd4 <_svfiprintf_r+0x94>
 800903a:	9b07      	ldr	r3, [sp, #28]
 800903c:	1d19      	adds	r1, r3, #4
 800903e:	681b      	ldr	r3, [r3, #0]
 8009040:	9107      	str	r1, [sp, #28]
 8009042:	2b00      	cmp	r3, #0
 8009044:	db01      	blt.n	800904a <_svfiprintf_r+0x10a>
 8009046:	930b      	str	r3, [sp, #44]	@ 0x2c
 8009048:	e004      	b.n	8009054 <_svfiprintf_r+0x114>
 800904a:	425b      	negs	r3, r3
 800904c:	60e3      	str	r3, [r4, #12]
 800904e:	2302      	movs	r3, #2
 8009050:	4313      	orrs	r3, r2
 8009052:	6023      	str	r3, [r4, #0]
 8009054:	782b      	ldrb	r3, [r5, #0]
 8009056:	2b2e      	cmp	r3, #46	@ 0x2e
 8009058:	d10c      	bne.n	8009074 <_svfiprintf_r+0x134>
 800905a:	786b      	ldrb	r3, [r5, #1]
 800905c:	2b2a      	cmp	r3, #42	@ 0x2a
 800905e:	d134      	bne.n	80090ca <_svfiprintf_r+0x18a>
 8009060:	9b07      	ldr	r3, [sp, #28]
 8009062:	3502      	adds	r5, #2
 8009064:	1d1a      	adds	r2, r3, #4
 8009066:	681b      	ldr	r3, [r3, #0]
 8009068:	9207      	str	r2, [sp, #28]
 800906a:	2b00      	cmp	r3, #0
 800906c:	da01      	bge.n	8009072 <_svfiprintf_r+0x132>
 800906e:	2301      	movs	r3, #1
 8009070:	425b      	negs	r3, r3
 8009072:	9309      	str	r3, [sp, #36]	@ 0x24
 8009074:	4e2d      	ldr	r6, [pc, #180]	@ (800912c <_svfiprintf_r+0x1ec>)
 8009076:	2203      	movs	r2, #3
 8009078:	0030      	movs	r0, r6
 800907a:	7829      	ldrb	r1, [r5, #0]
 800907c:	f7fd fc07 	bl	800688e <memchr>
 8009080:	2800      	cmp	r0, #0
 8009082:	d006      	beq.n	8009092 <_svfiprintf_r+0x152>
 8009084:	2340      	movs	r3, #64	@ 0x40
 8009086:	1b80      	subs	r0, r0, r6
 8009088:	4083      	lsls	r3, r0
 800908a:	6822      	ldr	r2, [r4, #0]
 800908c:	3501      	adds	r5, #1
 800908e:	4313      	orrs	r3, r2
 8009090:	6023      	str	r3, [r4, #0]
 8009092:	7829      	ldrb	r1, [r5, #0]
 8009094:	2206      	movs	r2, #6
 8009096:	4826      	ldr	r0, [pc, #152]	@ (8009130 <_svfiprintf_r+0x1f0>)
 8009098:	1c6e      	adds	r6, r5, #1
 800909a:	7621      	strb	r1, [r4, #24]
 800909c:	f7fd fbf7 	bl	800688e <memchr>
 80090a0:	2800      	cmp	r0, #0
 80090a2:	d038      	beq.n	8009116 <_svfiprintf_r+0x1d6>
 80090a4:	4b23      	ldr	r3, [pc, #140]	@ (8009134 <_svfiprintf_r+0x1f4>)
 80090a6:	2b00      	cmp	r3, #0
 80090a8:	d122      	bne.n	80090f0 <_svfiprintf_r+0x1b0>
 80090aa:	2207      	movs	r2, #7
 80090ac:	9b07      	ldr	r3, [sp, #28]
 80090ae:	3307      	adds	r3, #7
 80090b0:	4393      	bics	r3, r2
 80090b2:	3308      	adds	r3, #8
 80090b4:	9307      	str	r3, [sp, #28]
 80090b6:	6963      	ldr	r3, [r4, #20]
 80090b8:	9a04      	ldr	r2, [sp, #16]
 80090ba:	189b      	adds	r3, r3, r2
 80090bc:	6163      	str	r3, [r4, #20]
 80090be:	e762      	b.n	8008f86 <_svfiprintf_r+0x46>
 80090c0:	4343      	muls	r3, r0
 80090c2:	0035      	movs	r5, r6
 80090c4:	2101      	movs	r1, #1
 80090c6:	189b      	adds	r3, r3, r2
 80090c8:	e7a4      	b.n	8009014 <_svfiprintf_r+0xd4>
 80090ca:	2300      	movs	r3, #0
 80090cc:	200a      	movs	r0, #10
 80090ce:	0019      	movs	r1, r3
 80090d0:	3501      	adds	r5, #1
 80090d2:	6063      	str	r3, [r4, #4]
 80090d4:	782a      	ldrb	r2, [r5, #0]
 80090d6:	1c6e      	adds	r6, r5, #1
 80090d8:	3a30      	subs	r2, #48	@ 0x30
 80090da:	2a09      	cmp	r2, #9
 80090dc:	d903      	bls.n	80090e6 <_svfiprintf_r+0x1a6>
 80090de:	2b00      	cmp	r3, #0
 80090e0:	d0c8      	beq.n	8009074 <_svfiprintf_r+0x134>
 80090e2:	9109      	str	r1, [sp, #36]	@ 0x24
 80090e4:	e7c6      	b.n	8009074 <_svfiprintf_r+0x134>
 80090e6:	4341      	muls	r1, r0
 80090e8:	0035      	movs	r5, r6
 80090ea:	2301      	movs	r3, #1
 80090ec:	1889      	adds	r1, r1, r2
 80090ee:	e7f1      	b.n	80090d4 <_svfiprintf_r+0x194>
 80090f0:	aa07      	add	r2, sp, #28
 80090f2:	9200      	str	r2, [sp, #0]
 80090f4:	0021      	movs	r1, r4
 80090f6:	003a      	movs	r2, r7
 80090f8:	4b0f      	ldr	r3, [pc, #60]	@ (8009138 <_svfiprintf_r+0x1f8>)
 80090fa:	9803      	ldr	r0, [sp, #12]
 80090fc:	f7fc fb12 	bl	8005724 <_printf_float>
 8009100:	9004      	str	r0, [sp, #16]
 8009102:	9b04      	ldr	r3, [sp, #16]
 8009104:	3301      	adds	r3, #1
 8009106:	d1d6      	bne.n	80090b6 <_svfiprintf_r+0x176>
 8009108:	89bb      	ldrh	r3, [r7, #12]
 800910a:	980d      	ldr	r0, [sp, #52]	@ 0x34
 800910c:	065b      	lsls	r3, r3, #25
 800910e:	d500      	bpl.n	8009112 <_svfiprintf_r+0x1d2>
 8009110:	e72c      	b.n	8008f6c <_svfiprintf_r+0x2c>
 8009112:	b021      	add	sp, #132	@ 0x84
 8009114:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009116:	aa07      	add	r2, sp, #28
 8009118:	9200      	str	r2, [sp, #0]
 800911a:	0021      	movs	r1, r4
 800911c:	003a      	movs	r2, r7
 800911e:	4b06      	ldr	r3, [pc, #24]	@ (8009138 <_svfiprintf_r+0x1f8>)
 8009120:	9803      	ldr	r0, [sp, #12]
 8009122:	f7fc fdad 	bl	8005c80 <_printf_i>
 8009126:	e7eb      	b.n	8009100 <_svfiprintf_r+0x1c0>
 8009128:	0800a15d 	.word	0x0800a15d
 800912c:	0800a163 	.word	0x0800a163
 8009130:	0800a167 	.word	0x0800a167
 8009134:	08005725 	.word	0x08005725
 8009138:	08008e81 	.word	0x08008e81

0800913c <__sflush_r>:
 800913c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800913e:	220c      	movs	r2, #12
 8009140:	5e8b      	ldrsh	r3, [r1, r2]
 8009142:	0005      	movs	r5, r0
 8009144:	000c      	movs	r4, r1
 8009146:	071a      	lsls	r2, r3, #28
 8009148:	d456      	bmi.n	80091f8 <__sflush_r+0xbc>
 800914a:	684a      	ldr	r2, [r1, #4]
 800914c:	2a00      	cmp	r2, #0
 800914e:	dc02      	bgt.n	8009156 <__sflush_r+0x1a>
 8009150:	6c0a      	ldr	r2, [r1, #64]	@ 0x40
 8009152:	2a00      	cmp	r2, #0
 8009154:	dd4e      	ble.n	80091f4 <__sflush_r+0xb8>
 8009156:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8009158:	2f00      	cmp	r7, #0
 800915a:	d04b      	beq.n	80091f4 <__sflush_r+0xb8>
 800915c:	2200      	movs	r2, #0
 800915e:	2080      	movs	r0, #128	@ 0x80
 8009160:	682e      	ldr	r6, [r5, #0]
 8009162:	602a      	str	r2, [r5, #0]
 8009164:	001a      	movs	r2, r3
 8009166:	0140      	lsls	r0, r0, #5
 8009168:	6a21      	ldr	r1, [r4, #32]
 800916a:	4002      	ands	r2, r0
 800916c:	4203      	tst	r3, r0
 800916e:	d033      	beq.n	80091d8 <__sflush_r+0x9c>
 8009170:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8009172:	89a3      	ldrh	r3, [r4, #12]
 8009174:	075b      	lsls	r3, r3, #29
 8009176:	d506      	bpl.n	8009186 <__sflush_r+0x4a>
 8009178:	6863      	ldr	r3, [r4, #4]
 800917a:	1ad2      	subs	r2, r2, r3
 800917c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800917e:	2b00      	cmp	r3, #0
 8009180:	d001      	beq.n	8009186 <__sflush_r+0x4a>
 8009182:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8009184:	1ad2      	subs	r2, r2, r3
 8009186:	2300      	movs	r3, #0
 8009188:	0028      	movs	r0, r5
 800918a:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 800918c:	6a21      	ldr	r1, [r4, #32]
 800918e:	47b8      	blx	r7
 8009190:	89a2      	ldrh	r2, [r4, #12]
 8009192:	1c43      	adds	r3, r0, #1
 8009194:	d106      	bne.n	80091a4 <__sflush_r+0x68>
 8009196:	6829      	ldr	r1, [r5, #0]
 8009198:	291d      	cmp	r1, #29
 800919a:	d846      	bhi.n	800922a <__sflush_r+0xee>
 800919c:	4b29      	ldr	r3, [pc, #164]	@ (8009244 <__sflush_r+0x108>)
 800919e:	40cb      	lsrs	r3, r1
 80091a0:	07db      	lsls	r3, r3, #31
 80091a2:	d542      	bpl.n	800922a <__sflush_r+0xee>
 80091a4:	2300      	movs	r3, #0
 80091a6:	6063      	str	r3, [r4, #4]
 80091a8:	6923      	ldr	r3, [r4, #16]
 80091aa:	6023      	str	r3, [r4, #0]
 80091ac:	04d2      	lsls	r2, r2, #19
 80091ae:	d505      	bpl.n	80091bc <__sflush_r+0x80>
 80091b0:	1c43      	adds	r3, r0, #1
 80091b2:	d102      	bne.n	80091ba <__sflush_r+0x7e>
 80091b4:	682b      	ldr	r3, [r5, #0]
 80091b6:	2b00      	cmp	r3, #0
 80091b8:	d100      	bne.n	80091bc <__sflush_r+0x80>
 80091ba:	6560      	str	r0, [r4, #84]	@ 0x54
 80091bc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80091be:	602e      	str	r6, [r5, #0]
 80091c0:	2900      	cmp	r1, #0
 80091c2:	d017      	beq.n	80091f4 <__sflush_r+0xb8>
 80091c4:	0023      	movs	r3, r4
 80091c6:	3344      	adds	r3, #68	@ 0x44
 80091c8:	4299      	cmp	r1, r3
 80091ca:	d002      	beq.n	80091d2 <__sflush_r+0x96>
 80091cc:	0028      	movs	r0, r5
 80091ce:	f7fe f9e3 	bl	8007598 <_free_r>
 80091d2:	2300      	movs	r3, #0
 80091d4:	6363      	str	r3, [r4, #52]	@ 0x34
 80091d6:	e00d      	b.n	80091f4 <__sflush_r+0xb8>
 80091d8:	2301      	movs	r3, #1
 80091da:	0028      	movs	r0, r5
 80091dc:	47b8      	blx	r7
 80091de:	0002      	movs	r2, r0
 80091e0:	1c43      	adds	r3, r0, #1
 80091e2:	d1c6      	bne.n	8009172 <__sflush_r+0x36>
 80091e4:	682b      	ldr	r3, [r5, #0]
 80091e6:	2b00      	cmp	r3, #0
 80091e8:	d0c3      	beq.n	8009172 <__sflush_r+0x36>
 80091ea:	2b1d      	cmp	r3, #29
 80091ec:	d001      	beq.n	80091f2 <__sflush_r+0xb6>
 80091ee:	2b16      	cmp	r3, #22
 80091f0:	d11a      	bne.n	8009228 <__sflush_r+0xec>
 80091f2:	602e      	str	r6, [r5, #0]
 80091f4:	2000      	movs	r0, #0
 80091f6:	e01e      	b.n	8009236 <__sflush_r+0xfa>
 80091f8:	690e      	ldr	r6, [r1, #16]
 80091fa:	2e00      	cmp	r6, #0
 80091fc:	d0fa      	beq.n	80091f4 <__sflush_r+0xb8>
 80091fe:	680f      	ldr	r7, [r1, #0]
 8009200:	600e      	str	r6, [r1, #0]
 8009202:	1bba      	subs	r2, r7, r6
 8009204:	9201      	str	r2, [sp, #4]
 8009206:	2200      	movs	r2, #0
 8009208:	079b      	lsls	r3, r3, #30
 800920a:	d100      	bne.n	800920e <__sflush_r+0xd2>
 800920c:	694a      	ldr	r2, [r1, #20]
 800920e:	60a2      	str	r2, [r4, #8]
 8009210:	9b01      	ldr	r3, [sp, #4]
 8009212:	2b00      	cmp	r3, #0
 8009214:	ddee      	ble.n	80091f4 <__sflush_r+0xb8>
 8009216:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8009218:	0032      	movs	r2, r6
 800921a:	001f      	movs	r7, r3
 800921c:	0028      	movs	r0, r5
 800921e:	9b01      	ldr	r3, [sp, #4]
 8009220:	6a21      	ldr	r1, [r4, #32]
 8009222:	47b8      	blx	r7
 8009224:	2800      	cmp	r0, #0
 8009226:	dc07      	bgt.n	8009238 <__sflush_r+0xfc>
 8009228:	89a2      	ldrh	r2, [r4, #12]
 800922a:	2340      	movs	r3, #64	@ 0x40
 800922c:	2001      	movs	r0, #1
 800922e:	4313      	orrs	r3, r2
 8009230:	b21b      	sxth	r3, r3
 8009232:	81a3      	strh	r3, [r4, #12]
 8009234:	4240      	negs	r0, r0
 8009236:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8009238:	9b01      	ldr	r3, [sp, #4]
 800923a:	1836      	adds	r6, r6, r0
 800923c:	1a1b      	subs	r3, r3, r0
 800923e:	9301      	str	r3, [sp, #4]
 8009240:	e7e6      	b.n	8009210 <__sflush_r+0xd4>
 8009242:	46c0      	nop			@ (mov r8, r8)
 8009244:	20400001 	.word	0x20400001

08009248 <_fflush_r>:
 8009248:	690b      	ldr	r3, [r1, #16]
 800924a:	b570      	push	{r4, r5, r6, lr}
 800924c:	0005      	movs	r5, r0
 800924e:	000c      	movs	r4, r1
 8009250:	2b00      	cmp	r3, #0
 8009252:	d102      	bne.n	800925a <_fflush_r+0x12>
 8009254:	2500      	movs	r5, #0
 8009256:	0028      	movs	r0, r5
 8009258:	bd70      	pop	{r4, r5, r6, pc}
 800925a:	2800      	cmp	r0, #0
 800925c:	d004      	beq.n	8009268 <_fflush_r+0x20>
 800925e:	6a03      	ldr	r3, [r0, #32]
 8009260:	2b00      	cmp	r3, #0
 8009262:	d101      	bne.n	8009268 <_fflush_r+0x20>
 8009264:	f7fd f8b4 	bl	80063d0 <__sinit>
 8009268:	220c      	movs	r2, #12
 800926a:	5ea3      	ldrsh	r3, [r4, r2]
 800926c:	2b00      	cmp	r3, #0
 800926e:	d0f1      	beq.n	8009254 <_fflush_r+0xc>
 8009270:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8009272:	07d2      	lsls	r2, r2, #31
 8009274:	d404      	bmi.n	8009280 <_fflush_r+0x38>
 8009276:	059b      	lsls	r3, r3, #22
 8009278:	d402      	bmi.n	8009280 <_fflush_r+0x38>
 800927a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800927c:	f7fd fb05 	bl	800688a <__retarget_lock_acquire_recursive>
 8009280:	0028      	movs	r0, r5
 8009282:	0021      	movs	r1, r4
 8009284:	f7ff ff5a 	bl	800913c <__sflush_r>
 8009288:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800928a:	0005      	movs	r5, r0
 800928c:	07db      	lsls	r3, r3, #31
 800928e:	d4e2      	bmi.n	8009256 <_fflush_r+0xe>
 8009290:	89a3      	ldrh	r3, [r4, #12]
 8009292:	059b      	lsls	r3, r3, #22
 8009294:	d4df      	bmi.n	8009256 <_fflush_r+0xe>
 8009296:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8009298:	f7fd faf8 	bl	800688c <__retarget_lock_release_recursive>
 800929c:	e7db      	b.n	8009256 <_fflush_r+0xe>
	...

080092a0 <__swhatbuf_r>:
 80092a0:	b570      	push	{r4, r5, r6, lr}
 80092a2:	000e      	movs	r6, r1
 80092a4:	001d      	movs	r5, r3
 80092a6:	230e      	movs	r3, #14
 80092a8:	5ec9      	ldrsh	r1, [r1, r3]
 80092aa:	0014      	movs	r4, r2
 80092ac:	b096      	sub	sp, #88	@ 0x58
 80092ae:	2900      	cmp	r1, #0
 80092b0:	da0c      	bge.n	80092cc <__swhatbuf_r+0x2c>
 80092b2:	89b2      	ldrh	r2, [r6, #12]
 80092b4:	2380      	movs	r3, #128	@ 0x80
 80092b6:	0011      	movs	r1, r2
 80092b8:	4019      	ands	r1, r3
 80092ba:	421a      	tst	r2, r3
 80092bc:	d114      	bne.n	80092e8 <__swhatbuf_r+0x48>
 80092be:	2380      	movs	r3, #128	@ 0x80
 80092c0:	00db      	lsls	r3, r3, #3
 80092c2:	2000      	movs	r0, #0
 80092c4:	6029      	str	r1, [r5, #0]
 80092c6:	6023      	str	r3, [r4, #0]
 80092c8:	b016      	add	sp, #88	@ 0x58
 80092ca:	bd70      	pop	{r4, r5, r6, pc}
 80092cc:	466a      	mov	r2, sp
 80092ce:	f000 f875 	bl	80093bc <_fstat_r>
 80092d2:	2800      	cmp	r0, #0
 80092d4:	dbed      	blt.n	80092b2 <__swhatbuf_r+0x12>
 80092d6:	23f0      	movs	r3, #240	@ 0xf0
 80092d8:	9901      	ldr	r1, [sp, #4]
 80092da:	021b      	lsls	r3, r3, #8
 80092dc:	4019      	ands	r1, r3
 80092de:	4b04      	ldr	r3, [pc, #16]	@ (80092f0 <__swhatbuf_r+0x50>)
 80092e0:	18c9      	adds	r1, r1, r3
 80092e2:	424b      	negs	r3, r1
 80092e4:	4159      	adcs	r1, r3
 80092e6:	e7ea      	b.n	80092be <__swhatbuf_r+0x1e>
 80092e8:	2100      	movs	r1, #0
 80092ea:	2340      	movs	r3, #64	@ 0x40
 80092ec:	e7e9      	b.n	80092c2 <__swhatbuf_r+0x22>
 80092ee:	46c0      	nop			@ (mov r8, r8)
 80092f0:	ffffe000 	.word	0xffffe000

080092f4 <__smakebuf_r>:
 80092f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80092f6:	2602      	movs	r6, #2
 80092f8:	898b      	ldrh	r3, [r1, #12]
 80092fa:	0005      	movs	r5, r0
 80092fc:	000c      	movs	r4, r1
 80092fe:	b085      	sub	sp, #20
 8009300:	4233      	tst	r3, r6
 8009302:	d007      	beq.n	8009314 <__smakebuf_r+0x20>
 8009304:	0023      	movs	r3, r4
 8009306:	3347      	adds	r3, #71	@ 0x47
 8009308:	6023      	str	r3, [r4, #0]
 800930a:	6123      	str	r3, [r4, #16]
 800930c:	2301      	movs	r3, #1
 800930e:	6163      	str	r3, [r4, #20]
 8009310:	b005      	add	sp, #20
 8009312:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009314:	ab03      	add	r3, sp, #12
 8009316:	aa02      	add	r2, sp, #8
 8009318:	f7ff ffc2 	bl	80092a0 <__swhatbuf_r>
 800931c:	9f02      	ldr	r7, [sp, #8]
 800931e:	9001      	str	r0, [sp, #4]
 8009320:	0039      	movs	r1, r7
 8009322:	0028      	movs	r0, r5
 8009324:	f7fe f9ae 	bl	8007684 <_malloc_r>
 8009328:	2800      	cmp	r0, #0
 800932a:	d108      	bne.n	800933e <__smakebuf_r+0x4a>
 800932c:	220c      	movs	r2, #12
 800932e:	5ea3      	ldrsh	r3, [r4, r2]
 8009330:	059a      	lsls	r2, r3, #22
 8009332:	d4ed      	bmi.n	8009310 <__smakebuf_r+0x1c>
 8009334:	2203      	movs	r2, #3
 8009336:	4393      	bics	r3, r2
 8009338:	431e      	orrs	r6, r3
 800933a:	81a6      	strh	r6, [r4, #12]
 800933c:	e7e2      	b.n	8009304 <__smakebuf_r+0x10>
 800933e:	2380      	movs	r3, #128	@ 0x80
 8009340:	89a2      	ldrh	r2, [r4, #12]
 8009342:	6020      	str	r0, [r4, #0]
 8009344:	4313      	orrs	r3, r2
 8009346:	81a3      	strh	r3, [r4, #12]
 8009348:	9b03      	ldr	r3, [sp, #12]
 800934a:	6120      	str	r0, [r4, #16]
 800934c:	6167      	str	r7, [r4, #20]
 800934e:	2b00      	cmp	r3, #0
 8009350:	d00c      	beq.n	800936c <__smakebuf_r+0x78>
 8009352:	0028      	movs	r0, r5
 8009354:	230e      	movs	r3, #14
 8009356:	5ee1      	ldrsh	r1, [r4, r3]
 8009358:	f000 f842 	bl	80093e0 <_isatty_r>
 800935c:	2800      	cmp	r0, #0
 800935e:	d005      	beq.n	800936c <__smakebuf_r+0x78>
 8009360:	2303      	movs	r3, #3
 8009362:	89a2      	ldrh	r2, [r4, #12]
 8009364:	439a      	bics	r2, r3
 8009366:	3b02      	subs	r3, #2
 8009368:	4313      	orrs	r3, r2
 800936a:	81a3      	strh	r3, [r4, #12]
 800936c:	89a3      	ldrh	r3, [r4, #12]
 800936e:	9a01      	ldr	r2, [sp, #4]
 8009370:	4313      	orrs	r3, r2
 8009372:	81a3      	strh	r3, [r4, #12]
 8009374:	e7cc      	b.n	8009310 <__smakebuf_r+0x1c>

08009376 <memmove>:
 8009376:	b510      	push	{r4, lr}
 8009378:	4288      	cmp	r0, r1
 800937a:	d902      	bls.n	8009382 <memmove+0xc>
 800937c:	188b      	adds	r3, r1, r2
 800937e:	4298      	cmp	r0, r3
 8009380:	d308      	bcc.n	8009394 <memmove+0x1e>
 8009382:	2300      	movs	r3, #0
 8009384:	429a      	cmp	r2, r3
 8009386:	d007      	beq.n	8009398 <memmove+0x22>
 8009388:	5ccc      	ldrb	r4, [r1, r3]
 800938a:	54c4      	strb	r4, [r0, r3]
 800938c:	3301      	adds	r3, #1
 800938e:	e7f9      	b.n	8009384 <memmove+0xe>
 8009390:	5c8b      	ldrb	r3, [r1, r2]
 8009392:	5483      	strb	r3, [r0, r2]
 8009394:	3a01      	subs	r2, #1
 8009396:	d2fb      	bcs.n	8009390 <memmove+0x1a>
 8009398:	bd10      	pop	{r4, pc}

0800939a <strncmp>:
 800939a:	b530      	push	{r4, r5, lr}
 800939c:	0005      	movs	r5, r0
 800939e:	1e10      	subs	r0, r2, #0
 80093a0:	d00b      	beq.n	80093ba <strncmp+0x20>
 80093a2:	2400      	movs	r4, #0
 80093a4:	3a01      	subs	r2, #1
 80093a6:	5d2b      	ldrb	r3, [r5, r4]
 80093a8:	5d08      	ldrb	r0, [r1, r4]
 80093aa:	4283      	cmp	r3, r0
 80093ac:	d104      	bne.n	80093b8 <strncmp+0x1e>
 80093ae:	4294      	cmp	r4, r2
 80093b0:	d002      	beq.n	80093b8 <strncmp+0x1e>
 80093b2:	3401      	adds	r4, #1
 80093b4:	2b00      	cmp	r3, #0
 80093b6:	d1f6      	bne.n	80093a6 <strncmp+0xc>
 80093b8:	1a18      	subs	r0, r3, r0
 80093ba:	bd30      	pop	{r4, r5, pc}

080093bc <_fstat_r>:
 80093bc:	2300      	movs	r3, #0
 80093be:	b570      	push	{r4, r5, r6, lr}
 80093c0:	4d06      	ldr	r5, [pc, #24]	@ (80093dc <_fstat_r+0x20>)
 80093c2:	0004      	movs	r4, r0
 80093c4:	0008      	movs	r0, r1
 80093c6:	0011      	movs	r1, r2
 80093c8:	602b      	str	r3, [r5, #0]
 80093ca:	f7f9 ff18 	bl	80031fe <_fstat>
 80093ce:	1c43      	adds	r3, r0, #1
 80093d0:	d103      	bne.n	80093da <_fstat_r+0x1e>
 80093d2:	682b      	ldr	r3, [r5, #0]
 80093d4:	2b00      	cmp	r3, #0
 80093d6:	d000      	beq.n	80093da <_fstat_r+0x1e>
 80093d8:	6023      	str	r3, [r4, #0]
 80093da:	bd70      	pop	{r4, r5, r6, pc}
 80093dc:	20000410 	.word	0x20000410

080093e0 <_isatty_r>:
 80093e0:	2300      	movs	r3, #0
 80093e2:	b570      	push	{r4, r5, r6, lr}
 80093e4:	4d06      	ldr	r5, [pc, #24]	@ (8009400 <_isatty_r+0x20>)
 80093e6:	0004      	movs	r4, r0
 80093e8:	0008      	movs	r0, r1
 80093ea:	602b      	str	r3, [r5, #0]
 80093ec:	f7f9 ff15 	bl	800321a <_isatty>
 80093f0:	1c43      	adds	r3, r0, #1
 80093f2:	d103      	bne.n	80093fc <_isatty_r+0x1c>
 80093f4:	682b      	ldr	r3, [r5, #0]
 80093f6:	2b00      	cmp	r3, #0
 80093f8:	d000      	beq.n	80093fc <_isatty_r+0x1c>
 80093fa:	6023      	str	r3, [r4, #0]
 80093fc:	bd70      	pop	{r4, r5, r6, pc}
 80093fe:	46c0      	nop			@ (mov r8, r8)
 8009400:	20000410 	.word	0x20000410

08009404 <_sbrk_r>:
 8009404:	2300      	movs	r3, #0
 8009406:	b570      	push	{r4, r5, r6, lr}
 8009408:	4d06      	ldr	r5, [pc, #24]	@ (8009424 <_sbrk_r+0x20>)
 800940a:	0004      	movs	r4, r0
 800940c:	0008      	movs	r0, r1
 800940e:	602b      	str	r3, [r5, #0]
 8009410:	f7f9 ff18 	bl	8003244 <_sbrk>
 8009414:	1c43      	adds	r3, r0, #1
 8009416:	d103      	bne.n	8009420 <_sbrk_r+0x1c>
 8009418:	682b      	ldr	r3, [r5, #0]
 800941a:	2b00      	cmp	r3, #0
 800941c:	d000      	beq.n	8009420 <_sbrk_r+0x1c>
 800941e:	6023      	str	r3, [r4, #0]
 8009420:	bd70      	pop	{r4, r5, r6, pc}
 8009422:	46c0      	nop			@ (mov r8, r8)
 8009424:	20000410 	.word	0x20000410

08009428 <memcpy>:
 8009428:	2300      	movs	r3, #0
 800942a:	b510      	push	{r4, lr}
 800942c:	429a      	cmp	r2, r3
 800942e:	d100      	bne.n	8009432 <memcpy+0xa>
 8009430:	bd10      	pop	{r4, pc}
 8009432:	5ccc      	ldrb	r4, [r1, r3]
 8009434:	54c4      	strb	r4, [r0, r3]
 8009436:	3301      	adds	r3, #1
 8009438:	e7f8      	b.n	800942c <memcpy+0x4>
	...

0800943c <nan>:
 800943c:	2000      	movs	r0, #0
 800943e:	4901      	ldr	r1, [pc, #4]	@ (8009444 <nan+0x8>)
 8009440:	4770      	bx	lr
 8009442:	46c0      	nop			@ (mov r8, r8)
 8009444:	7ff80000 	.word	0x7ff80000

08009448 <__assert_func>:
 8009448:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800944a:	0014      	movs	r4, r2
 800944c:	001a      	movs	r2, r3
 800944e:	4b09      	ldr	r3, [pc, #36]	@ (8009474 <__assert_func+0x2c>)
 8009450:	0005      	movs	r5, r0
 8009452:	681b      	ldr	r3, [r3, #0]
 8009454:	000e      	movs	r6, r1
 8009456:	68d8      	ldr	r0, [r3, #12]
 8009458:	4b07      	ldr	r3, [pc, #28]	@ (8009478 <__assert_func+0x30>)
 800945a:	2c00      	cmp	r4, #0
 800945c:	d101      	bne.n	8009462 <__assert_func+0x1a>
 800945e:	4b07      	ldr	r3, [pc, #28]	@ (800947c <__assert_func+0x34>)
 8009460:	001c      	movs	r4, r3
 8009462:	4907      	ldr	r1, [pc, #28]	@ (8009480 <__assert_func+0x38>)
 8009464:	9301      	str	r3, [sp, #4]
 8009466:	9402      	str	r4, [sp, #8]
 8009468:	002b      	movs	r3, r5
 800946a:	9600      	str	r6, [sp, #0]
 800946c:	f000 fbe2 	bl	8009c34 <fiprintf>
 8009470:	f000 fbf0 	bl	8009c54 <abort>
 8009474:	20000018 	.word	0x20000018
 8009478:	0800a176 	.word	0x0800a176
 800947c:	0800a1b1 	.word	0x0800a1b1
 8009480:	0800a183 	.word	0x0800a183

08009484 <_calloc_r>:
 8009484:	b570      	push	{r4, r5, r6, lr}
 8009486:	0c0b      	lsrs	r3, r1, #16
 8009488:	0c15      	lsrs	r5, r2, #16
 800948a:	2b00      	cmp	r3, #0
 800948c:	d11e      	bne.n	80094cc <_calloc_r+0x48>
 800948e:	2d00      	cmp	r5, #0
 8009490:	d10c      	bne.n	80094ac <_calloc_r+0x28>
 8009492:	b289      	uxth	r1, r1
 8009494:	b294      	uxth	r4, r2
 8009496:	434c      	muls	r4, r1
 8009498:	0021      	movs	r1, r4
 800949a:	f7fe f8f3 	bl	8007684 <_malloc_r>
 800949e:	1e05      	subs	r5, r0, #0
 80094a0:	d01b      	beq.n	80094da <_calloc_r+0x56>
 80094a2:	0022      	movs	r2, r4
 80094a4:	2100      	movs	r1, #0
 80094a6:	f7fd f96b 	bl	8006780 <memset>
 80094aa:	e016      	b.n	80094da <_calloc_r+0x56>
 80094ac:	1c2b      	adds	r3, r5, #0
 80094ae:	1c0c      	adds	r4, r1, #0
 80094b0:	b289      	uxth	r1, r1
 80094b2:	b292      	uxth	r2, r2
 80094b4:	434a      	muls	r2, r1
 80094b6:	b29b      	uxth	r3, r3
 80094b8:	b2a1      	uxth	r1, r4
 80094ba:	4359      	muls	r1, r3
 80094bc:	0c14      	lsrs	r4, r2, #16
 80094be:	190c      	adds	r4, r1, r4
 80094c0:	0c23      	lsrs	r3, r4, #16
 80094c2:	d107      	bne.n	80094d4 <_calloc_r+0x50>
 80094c4:	0424      	lsls	r4, r4, #16
 80094c6:	b292      	uxth	r2, r2
 80094c8:	4314      	orrs	r4, r2
 80094ca:	e7e5      	b.n	8009498 <_calloc_r+0x14>
 80094cc:	2d00      	cmp	r5, #0
 80094ce:	d101      	bne.n	80094d4 <_calloc_r+0x50>
 80094d0:	1c14      	adds	r4, r2, #0
 80094d2:	e7ed      	b.n	80094b0 <_calloc_r+0x2c>
 80094d4:	230c      	movs	r3, #12
 80094d6:	2500      	movs	r5, #0
 80094d8:	6003      	str	r3, [r0, #0]
 80094da:	0028      	movs	r0, r5
 80094dc:	bd70      	pop	{r4, r5, r6, pc}

080094de <rshift>:
 80094de:	0002      	movs	r2, r0
 80094e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80094e2:	6904      	ldr	r4, [r0, #16]
 80094e4:	b085      	sub	sp, #20
 80094e6:	3214      	adds	r2, #20
 80094e8:	114b      	asrs	r3, r1, #5
 80094ea:	0016      	movs	r6, r2
 80094ec:	9302      	str	r3, [sp, #8]
 80094ee:	429c      	cmp	r4, r3
 80094f0:	dd31      	ble.n	8009556 <rshift+0x78>
 80094f2:	261f      	movs	r6, #31
 80094f4:	000f      	movs	r7, r1
 80094f6:	009b      	lsls	r3, r3, #2
 80094f8:	00a5      	lsls	r5, r4, #2
 80094fa:	18d3      	adds	r3, r2, r3
 80094fc:	4037      	ands	r7, r6
 80094fe:	1955      	adds	r5, r2, r5
 8009500:	9300      	str	r3, [sp, #0]
 8009502:	9701      	str	r7, [sp, #4]
 8009504:	4231      	tst	r1, r6
 8009506:	d10d      	bne.n	8009524 <rshift+0x46>
 8009508:	0016      	movs	r6, r2
 800950a:	0019      	movs	r1, r3
 800950c:	428d      	cmp	r5, r1
 800950e:	d836      	bhi.n	800957e <rshift+0xa0>
 8009510:	9b00      	ldr	r3, [sp, #0]
 8009512:	2600      	movs	r6, #0
 8009514:	3b03      	subs	r3, #3
 8009516:	429d      	cmp	r5, r3
 8009518:	d302      	bcc.n	8009520 <rshift+0x42>
 800951a:	9b02      	ldr	r3, [sp, #8]
 800951c:	1ae4      	subs	r4, r4, r3
 800951e:	00a6      	lsls	r6, r4, #2
 8009520:	1996      	adds	r6, r2, r6
 8009522:	e018      	b.n	8009556 <rshift+0x78>
 8009524:	2120      	movs	r1, #32
 8009526:	9e01      	ldr	r6, [sp, #4]
 8009528:	9f01      	ldr	r7, [sp, #4]
 800952a:	1b89      	subs	r1, r1, r6
 800952c:	9e00      	ldr	r6, [sp, #0]
 800952e:	9103      	str	r1, [sp, #12]
 8009530:	ce02      	ldmia	r6!, {r1}
 8009532:	4694      	mov	ip, r2
 8009534:	40f9      	lsrs	r1, r7
 8009536:	42b5      	cmp	r5, r6
 8009538:	d816      	bhi.n	8009568 <rshift+0x8a>
 800953a:	9b00      	ldr	r3, [sp, #0]
 800953c:	2600      	movs	r6, #0
 800953e:	3301      	adds	r3, #1
 8009540:	429d      	cmp	r5, r3
 8009542:	d303      	bcc.n	800954c <rshift+0x6e>
 8009544:	9b02      	ldr	r3, [sp, #8]
 8009546:	1ae4      	subs	r4, r4, r3
 8009548:	00a6      	lsls	r6, r4, #2
 800954a:	3e04      	subs	r6, #4
 800954c:	1996      	adds	r6, r2, r6
 800954e:	6031      	str	r1, [r6, #0]
 8009550:	2900      	cmp	r1, #0
 8009552:	d000      	beq.n	8009556 <rshift+0x78>
 8009554:	3604      	adds	r6, #4
 8009556:	1ab1      	subs	r1, r6, r2
 8009558:	1089      	asrs	r1, r1, #2
 800955a:	6101      	str	r1, [r0, #16]
 800955c:	4296      	cmp	r6, r2
 800955e:	d101      	bne.n	8009564 <rshift+0x86>
 8009560:	2300      	movs	r3, #0
 8009562:	6143      	str	r3, [r0, #20]
 8009564:	b005      	add	sp, #20
 8009566:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009568:	6837      	ldr	r7, [r6, #0]
 800956a:	9b03      	ldr	r3, [sp, #12]
 800956c:	409f      	lsls	r7, r3
 800956e:	430f      	orrs	r7, r1
 8009570:	4661      	mov	r1, ip
 8009572:	c180      	stmia	r1!, {r7}
 8009574:	468c      	mov	ip, r1
 8009576:	9b01      	ldr	r3, [sp, #4]
 8009578:	ce02      	ldmia	r6!, {r1}
 800957a:	40d9      	lsrs	r1, r3
 800957c:	e7db      	b.n	8009536 <rshift+0x58>
 800957e:	c980      	ldmia	r1!, {r7}
 8009580:	c680      	stmia	r6!, {r7}
 8009582:	e7c3      	b.n	800950c <rshift+0x2e>

08009584 <__hexdig_fun>:
 8009584:	0002      	movs	r2, r0
 8009586:	3a30      	subs	r2, #48	@ 0x30
 8009588:	0003      	movs	r3, r0
 800958a:	2a09      	cmp	r2, #9
 800958c:	d802      	bhi.n	8009594 <__hexdig_fun+0x10>
 800958e:	3b20      	subs	r3, #32
 8009590:	b2d8      	uxtb	r0, r3
 8009592:	4770      	bx	lr
 8009594:	0002      	movs	r2, r0
 8009596:	3a61      	subs	r2, #97	@ 0x61
 8009598:	2a05      	cmp	r2, #5
 800959a:	d801      	bhi.n	80095a0 <__hexdig_fun+0x1c>
 800959c:	3b47      	subs	r3, #71	@ 0x47
 800959e:	e7f7      	b.n	8009590 <__hexdig_fun+0xc>
 80095a0:	001a      	movs	r2, r3
 80095a2:	3a41      	subs	r2, #65	@ 0x41
 80095a4:	2000      	movs	r0, #0
 80095a6:	2a05      	cmp	r2, #5
 80095a8:	d8f3      	bhi.n	8009592 <__hexdig_fun+0xe>
 80095aa:	3b27      	subs	r3, #39	@ 0x27
 80095ac:	e7f0      	b.n	8009590 <__hexdig_fun+0xc>
	...

080095b0 <__gethex>:
 80095b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80095b2:	b089      	sub	sp, #36	@ 0x24
 80095b4:	9307      	str	r3, [sp, #28]
 80095b6:	680b      	ldr	r3, [r1, #0]
 80095b8:	9201      	str	r2, [sp, #4]
 80095ba:	9003      	str	r0, [sp, #12]
 80095bc:	9106      	str	r1, [sp, #24]
 80095be:	1c9a      	adds	r2, r3, #2
 80095c0:	0011      	movs	r1, r2
 80095c2:	3201      	adds	r2, #1
 80095c4:	1e50      	subs	r0, r2, #1
 80095c6:	7800      	ldrb	r0, [r0, #0]
 80095c8:	2830      	cmp	r0, #48	@ 0x30
 80095ca:	d0f9      	beq.n	80095c0 <__gethex+0x10>
 80095cc:	1acb      	subs	r3, r1, r3
 80095ce:	3b02      	subs	r3, #2
 80095d0:	9305      	str	r3, [sp, #20]
 80095d2:	9100      	str	r1, [sp, #0]
 80095d4:	f7ff ffd6 	bl	8009584 <__hexdig_fun>
 80095d8:	2300      	movs	r3, #0
 80095da:	001d      	movs	r5, r3
 80095dc:	9302      	str	r3, [sp, #8]
 80095de:	4298      	cmp	r0, r3
 80095e0:	d11e      	bne.n	8009620 <__gethex+0x70>
 80095e2:	2201      	movs	r2, #1
 80095e4:	49a6      	ldr	r1, [pc, #664]	@ (8009880 <__gethex+0x2d0>)
 80095e6:	9800      	ldr	r0, [sp, #0]
 80095e8:	f7ff fed7 	bl	800939a <strncmp>
 80095ec:	0007      	movs	r7, r0
 80095ee:	42a8      	cmp	r0, r5
 80095f0:	d000      	beq.n	80095f4 <__gethex+0x44>
 80095f2:	e06a      	b.n	80096ca <__gethex+0x11a>
 80095f4:	9b00      	ldr	r3, [sp, #0]
 80095f6:	7858      	ldrb	r0, [r3, #1]
 80095f8:	1c5c      	adds	r4, r3, #1
 80095fa:	f7ff ffc3 	bl	8009584 <__hexdig_fun>
 80095fe:	2301      	movs	r3, #1
 8009600:	9302      	str	r3, [sp, #8]
 8009602:	42a8      	cmp	r0, r5
 8009604:	d02f      	beq.n	8009666 <__gethex+0xb6>
 8009606:	9400      	str	r4, [sp, #0]
 8009608:	9b00      	ldr	r3, [sp, #0]
 800960a:	7818      	ldrb	r0, [r3, #0]
 800960c:	2830      	cmp	r0, #48	@ 0x30
 800960e:	d009      	beq.n	8009624 <__gethex+0x74>
 8009610:	f7ff ffb8 	bl	8009584 <__hexdig_fun>
 8009614:	4242      	negs	r2, r0
 8009616:	4142      	adcs	r2, r0
 8009618:	2301      	movs	r3, #1
 800961a:	0025      	movs	r5, r4
 800961c:	9202      	str	r2, [sp, #8]
 800961e:	9305      	str	r3, [sp, #20]
 8009620:	9c00      	ldr	r4, [sp, #0]
 8009622:	e004      	b.n	800962e <__gethex+0x7e>
 8009624:	9b00      	ldr	r3, [sp, #0]
 8009626:	3301      	adds	r3, #1
 8009628:	9300      	str	r3, [sp, #0]
 800962a:	e7ed      	b.n	8009608 <__gethex+0x58>
 800962c:	3401      	adds	r4, #1
 800962e:	7820      	ldrb	r0, [r4, #0]
 8009630:	f7ff ffa8 	bl	8009584 <__hexdig_fun>
 8009634:	1e07      	subs	r7, r0, #0
 8009636:	d1f9      	bne.n	800962c <__gethex+0x7c>
 8009638:	2201      	movs	r2, #1
 800963a:	0020      	movs	r0, r4
 800963c:	4990      	ldr	r1, [pc, #576]	@ (8009880 <__gethex+0x2d0>)
 800963e:	f7ff feac 	bl	800939a <strncmp>
 8009642:	2800      	cmp	r0, #0
 8009644:	d10d      	bne.n	8009662 <__gethex+0xb2>
 8009646:	2d00      	cmp	r5, #0
 8009648:	d106      	bne.n	8009658 <__gethex+0xa8>
 800964a:	3401      	adds	r4, #1
 800964c:	0025      	movs	r5, r4
 800964e:	7820      	ldrb	r0, [r4, #0]
 8009650:	f7ff ff98 	bl	8009584 <__hexdig_fun>
 8009654:	2800      	cmp	r0, #0
 8009656:	d102      	bne.n	800965e <__gethex+0xae>
 8009658:	1b2d      	subs	r5, r5, r4
 800965a:	00af      	lsls	r7, r5, #2
 800965c:	e003      	b.n	8009666 <__gethex+0xb6>
 800965e:	3401      	adds	r4, #1
 8009660:	e7f5      	b.n	800964e <__gethex+0x9e>
 8009662:	2d00      	cmp	r5, #0
 8009664:	d1f8      	bne.n	8009658 <__gethex+0xa8>
 8009666:	2220      	movs	r2, #32
 8009668:	7823      	ldrb	r3, [r4, #0]
 800966a:	0026      	movs	r6, r4
 800966c:	4393      	bics	r3, r2
 800966e:	2b50      	cmp	r3, #80	@ 0x50
 8009670:	d11d      	bne.n	80096ae <__gethex+0xfe>
 8009672:	7863      	ldrb	r3, [r4, #1]
 8009674:	2b2b      	cmp	r3, #43	@ 0x2b
 8009676:	d02d      	beq.n	80096d4 <__gethex+0x124>
 8009678:	2b2d      	cmp	r3, #45	@ 0x2d
 800967a:	d02f      	beq.n	80096dc <__gethex+0x12c>
 800967c:	2300      	movs	r3, #0
 800967e:	1c66      	adds	r6, r4, #1
 8009680:	9304      	str	r3, [sp, #16]
 8009682:	7830      	ldrb	r0, [r6, #0]
 8009684:	f7ff ff7e 	bl	8009584 <__hexdig_fun>
 8009688:	1e43      	subs	r3, r0, #1
 800968a:	b2db      	uxtb	r3, r3
 800968c:	0005      	movs	r5, r0
 800968e:	2b18      	cmp	r3, #24
 8009690:	d82a      	bhi.n	80096e8 <__gethex+0x138>
 8009692:	7870      	ldrb	r0, [r6, #1]
 8009694:	f7ff ff76 	bl	8009584 <__hexdig_fun>
 8009698:	1e43      	subs	r3, r0, #1
 800969a:	b2db      	uxtb	r3, r3
 800969c:	3601      	adds	r6, #1
 800969e:	3d10      	subs	r5, #16
 80096a0:	2b18      	cmp	r3, #24
 80096a2:	d91d      	bls.n	80096e0 <__gethex+0x130>
 80096a4:	9b04      	ldr	r3, [sp, #16]
 80096a6:	2b00      	cmp	r3, #0
 80096a8:	d000      	beq.n	80096ac <__gethex+0xfc>
 80096aa:	426d      	negs	r5, r5
 80096ac:	197f      	adds	r7, r7, r5
 80096ae:	9b06      	ldr	r3, [sp, #24]
 80096b0:	601e      	str	r6, [r3, #0]
 80096b2:	9b02      	ldr	r3, [sp, #8]
 80096b4:	2b00      	cmp	r3, #0
 80096b6:	d019      	beq.n	80096ec <__gethex+0x13c>
 80096b8:	9b05      	ldr	r3, [sp, #20]
 80096ba:	2606      	movs	r6, #6
 80096bc:	425a      	negs	r2, r3
 80096be:	4153      	adcs	r3, r2
 80096c0:	425b      	negs	r3, r3
 80096c2:	401e      	ands	r6, r3
 80096c4:	0030      	movs	r0, r6
 80096c6:	b009      	add	sp, #36	@ 0x24
 80096c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80096ca:	2301      	movs	r3, #1
 80096cc:	2700      	movs	r7, #0
 80096ce:	9c00      	ldr	r4, [sp, #0]
 80096d0:	9302      	str	r3, [sp, #8]
 80096d2:	e7c8      	b.n	8009666 <__gethex+0xb6>
 80096d4:	2300      	movs	r3, #0
 80096d6:	9304      	str	r3, [sp, #16]
 80096d8:	1ca6      	adds	r6, r4, #2
 80096da:	e7d2      	b.n	8009682 <__gethex+0xd2>
 80096dc:	2301      	movs	r3, #1
 80096de:	e7fa      	b.n	80096d6 <__gethex+0x126>
 80096e0:	230a      	movs	r3, #10
 80096e2:	435d      	muls	r5, r3
 80096e4:	182d      	adds	r5, r5, r0
 80096e6:	e7d4      	b.n	8009692 <__gethex+0xe2>
 80096e8:	0026      	movs	r6, r4
 80096ea:	e7e0      	b.n	80096ae <__gethex+0xfe>
 80096ec:	9b00      	ldr	r3, [sp, #0]
 80096ee:	9902      	ldr	r1, [sp, #8]
 80096f0:	1ae3      	subs	r3, r4, r3
 80096f2:	3b01      	subs	r3, #1
 80096f4:	2b07      	cmp	r3, #7
 80096f6:	dc0a      	bgt.n	800970e <__gethex+0x15e>
 80096f8:	9803      	ldr	r0, [sp, #12]
 80096fa:	f7fe f853 	bl	80077a4 <_Balloc>
 80096fe:	1e05      	subs	r5, r0, #0
 8009700:	d108      	bne.n	8009714 <__gethex+0x164>
 8009702:	002a      	movs	r2, r5
 8009704:	21e4      	movs	r1, #228	@ 0xe4
 8009706:	4b5f      	ldr	r3, [pc, #380]	@ (8009884 <__gethex+0x2d4>)
 8009708:	485f      	ldr	r0, [pc, #380]	@ (8009888 <__gethex+0x2d8>)
 800970a:	f7ff fe9d 	bl	8009448 <__assert_func>
 800970e:	3101      	adds	r1, #1
 8009710:	105b      	asrs	r3, r3, #1
 8009712:	e7ef      	b.n	80096f4 <__gethex+0x144>
 8009714:	0003      	movs	r3, r0
 8009716:	3314      	adds	r3, #20
 8009718:	9302      	str	r3, [sp, #8]
 800971a:	9305      	str	r3, [sp, #20]
 800971c:	2300      	movs	r3, #0
 800971e:	001e      	movs	r6, r3
 8009720:	9304      	str	r3, [sp, #16]
 8009722:	9b00      	ldr	r3, [sp, #0]
 8009724:	42a3      	cmp	r3, r4
 8009726:	d338      	bcc.n	800979a <__gethex+0x1ea>
 8009728:	9c05      	ldr	r4, [sp, #20]
 800972a:	9b02      	ldr	r3, [sp, #8]
 800972c:	c440      	stmia	r4!, {r6}
 800972e:	1ae4      	subs	r4, r4, r3
 8009730:	10a4      	asrs	r4, r4, #2
 8009732:	0030      	movs	r0, r6
 8009734:	612c      	str	r4, [r5, #16]
 8009736:	f7fe f92d 	bl	8007994 <__hi0bits>
 800973a:	9b01      	ldr	r3, [sp, #4]
 800973c:	0164      	lsls	r4, r4, #5
 800973e:	681b      	ldr	r3, [r3, #0]
 8009740:	1a26      	subs	r6, r4, r0
 8009742:	9300      	str	r3, [sp, #0]
 8009744:	429e      	cmp	r6, r3
 8009746:	dd52      	ble.n	80097ee <__gethex+0x23e>
 8009748:	1af6      	subs	r6, r6, r3
 800974a:	0031      	movs	r1, r6
 800974c:	0028      	movs	r0, r5
 800974e:	f7fe fcc8 	bl	80080e2 <__any_on>
 8009752:	1e04      	subs	r4, r0, #0
 8009754:	d00f      	beq.n	8009776 <__gethex+0x1c6>
 8009756:	2401      	movs	r4, #1
 8009758:	211f      	movs	r1, #31
 800975a:	0020      	movs	r0, r4
 800975c:	1e73      	subs	r3, r6, #1
 800975e:	4019      	ands	r1, r3
 8009760:	4088      	lsls	r0, r1
 8009762:	0001      	movs	r1, r0
 8009764:	115a      	asrs	r2, r3, #5
 8009766:	9802      	ldr	r0, [sp, #8]
 8009768:	0092      	lsls	r2, r2, #2
 800976a:	5812      	ldr	r2, [r2, r0]
 800976c:	420a      	tst	r2, r1
 800976e:	d002      	beq.n	8009776 <__gethex+0x1c6>
 8009770:	42a3      	cmp	r3, r4
 8009772:	dc34      	bgt.n	80097de <__gethex+0x22e>
 8009774:	2402      	movs	r4, #2
 8009776:	0031      	movs	r1, r6
 8009778:	0028      	movs	r0, r5
 800977a:	f7ff feb0 	bl	80094de <rshift>
 800977e:	19bf      	adds	r7, r7, r6
 8009780:	9b01      	ldr	r3, [sp, #4]
 8009782:	689b      	ldr	r3, [r3, #8]
 8009784:	42bb      	cmp	r3, r7
 8009786:	da42      	bge.n	800980e <__gethex+0x25e>
 8009788:	0029      	movs	r1, r5
 800978a:	9803      	ldr	r0, [sp, #12]
 800978c:	f7fe f84e 	bl	800782c <_Bfree>
 8009790:	2300      	movs	r3, #0
 8009792:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8009794:	26a3      	movs	r6, #163	@ 0xa3
 8009796:	6013      	str	r3, [r2, #0]
 8009798:	e794      	b.n	80096c4 <__gethex+0x114>
 800979a:	3c01      	subs	r4, #1
 800979c:	7823      	ldrb	r3, [r4, #0]
 800979e:	2b2e      	cmp	r3, #46	@ 0x2e
 80097a0:	d012      	beq.n	80097c8 <__gethex+0x218>
 80097a2:	9b04      	ldr	r3, [sp, #16]
 80097a4:	2b20      	cmp	r3, #32
 80097a6:	d104      	bne.n	80097b2 <__gethex+0x202>
 80097a8:	9b05      	ldr	r3, [sp, #20]
 80097aa:	c340      	stmia	r3!, {r6}
 80097ac:	2600      	movs	r6, #0
 80097ae:	9305      	str	r3, [sp, #20]
 80097b0:	9604      	str	r6, [sp, #16]
 80097b2:	7820      	ldrb	r0, [r4, #0]
 80097b4:	f7ff fee6 	bl	8009584 <__hexdig_fun>
 80097b8:	230f      	movs	r3, #15
 80097ba:	4018      	ands	r0, r3
 80097bc:	9b04      	ldr	r3, [sp, #16]
 80097be:	4098      	lsls	r0, r3
 80097c0:	3304      	adds	r3, #4
 80097c2:	4306      	orrs	r6, r0
 80097c4:	9304      	str	r3, [sp, #16]
 80097c6:	e7ac      	b.n	8009722 <__gethex+0x172>
 80097c8:	9b00      	ldr	r3, [sp, #0]
 80097ca:	42a3      	cmp	r3, r4
 80097cc:	d8e9      	bhi.n	80097a2 <__gethex+0x1f2>
 80097ce:	2201      	movs	r2, #1
 80097d0:	0020      	movs	r0, r4
 80097d2:	492b      	ldr	r1, [pc, #172]	@ (8009880 <__gethex+0x2d0>)
 80097d4:	f7ff fde1 	bl	800939a <strncmp>
 80097d8:	2800      	cmp	r0, #0
 80097da:	d1e2      	bne.n	80097a2 <__gethex+0x1f2>
 80097dc:	e7a1      	b.n	8009722 <__gethex+0x172>
 80097de:	0028      	movs	r0, r5
 80097e0:	1eb1      	subs	r1, r6, #2
 80097e2:	f7fe fc7e 	bl	80080e2 <__any_on>
 80097e6:	2800      	cmp	r0, #0
 80097e8:	d0c4      	beq.n	8009774 <__gethex+0x1c4>
 80097ea:	2403      	movs	r4, #3
 80097ec:	e7c3      	b.n	8009776 <__gethex+0x1c6>
 80097ee:	9b00      	ldr	r3, [sp, #0]
 80097f0:	2400      	movs	r4, #0
 80097f2:	429e      	cmp	r6, r3
 80097f4:	dac4      	bge.n	8009780 <__gethex+0x1d0>
 80097f6:	1b9e      	subs	r6, r3, r6
 80097f8:	0029      	movs	r1, r5
 80097fa:	0032      	movs	r2, r6
 80097fc:	9803      	ldr	r0, [sp, #12]
 80097fe:	f7fe fa37 	bl	8007c70 <__lshift>
 8009802:	0003      	movs	r3, r0
 8009804:	3314      	adds	r3, #20
 8009806:	0005      	movs	r5, r0
 8009808:	1bbf      	subs	r7, r7, r6
 800980a:	9302      	str	r3, [sp, #8]
 800980c:	e7b8      	b.n	8009780 <__gethex+0x1d0>
 800980e:	9b01      	ldr	r3, [sp, #4]
 8009810:	685e      	ldr	r6, [r3, #4]
 8009812:	42be      	cmp	r6, r7
 8009814:	dd6f      	ble.n	80098f6 <__gethex+0x346>
 8009816:	9b00      	ldr	r3, [sp, #0]
 8009818:	1bf6      	subs	r6, r6, r7
 800981a:	42b3      	cmp	r3, r6
 800981c:	dc36      	bgt.n	800988c <__gethex+0x2dc>
 800981e:	9b01      	ldr	r3, [sp, #4]
 8009820:	68db      	ldr	r3, [r3, #12]
 8009822:	2b02      	cmp	r3, #2
 8009824:	d024      	beq.n	8009870 <__gethex+0x2c0>
 8009826:	2b03      	cmp	r3, #3
 8009828:	d026      	beq.n	8009878 <__gethex+0x2c8>
 800982a:	2b01      	cmp	r3, #1
 800982c:	d117      	bne.n	800985e <__gethex+0x2ae>
 800982e:	9b00      	ldr	r3, [sp, #0]
 8009830:	42b3      	cmp	r3, r6
 8009832:	d114      	bne.n	800985e <__gethex+0x2ae>
 8009834:	2b01      	cmp	r3, #1
 8009836:	d10b      	bne.n	8009850 <__gethex+0x2a0>
 8009838:	9b01      	ldr	r3, [sp, #4]
 800983a:	9a07      	ldr	r2, [sp, #28]
 800983c:	685b      	ldr	r3, [r3, #4]
 800983e:	2662      	movs	r6, #98	@ 0x62
 8009840:	6013      	str	r3, [r2, #0]
 8009842:	2301      	movs	r3, #1
 8009844:	9a02      	ldr	r2, [sp, #8]
 8009846:	612b      	str	r3, [r5, #16]
 8009848:	6013      	str	r3, [r2, #0]
 800984a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800984c:	601d      	str	r5, [r3, #0]
 800984e:	e739      	b.n	80096c4 <__gethex+0x114>
 8009850:	9900      	ldr	r1, [sp, #0]
 8009852:	0028      	movs	r0, r5
 8009854:	3901      	subs	r1, #1
 8009856:	f7fe fc44 	bl	80080e2 <__any_on>
 800985a:	2800      	cmp	r0, #0
 800985c:	d1ec      	bne.n	8009838 <__gethex+0x288>
 800985e:	0029      	movs	r1, r5
 8009860:	9803      	ldr	r0, [sp, #12]
 8009862:	f7fd ffe3 	bl	800782c <_Bfree>
 8009866:	2300      	movs	r3, #0
 8009868:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800986a:	2650      	movs	r6, #80	@ 0x50
 800986c:	6013      	str	r3, [r2, #0]
 800986e:	e729      	b.n	80096c4 <__gethex+0x114>
 8009870:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8009872:	2b00      	cmp	r3, #0
 8009874:	d1f3      	bne.n	800985e <__gethex+0x2ae>
 8009876:	e7df      	b.n	8009838 <__gethex+0x288>
 8009878:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800987a:	2b00      	cmp	r3, #0
 800987c:	d1dc      	bne.n	8009838 <__gethex+0x288>
 800987e:	e7ee      	b.n	800985e <__gethex+0x2ae>
 8009880:	0800a15b 	.word	0x0800a15b
 8009884:	0800a0f1 	.word	0x0800a0f1
 8009888:	0800a1b2 	.word	0x0800a1b2
 800988c:	1e77      	subs	r7, r6, #1
 800988e:	2c00      	cmp	r4, #0
 8009890:	d12f      	bne.n	80098f2 <__gethex+0x342>
 8009892:	2f00      	cmp	r7, #0
 8009894:	d004      	beq.n	80098a0 <__gethex+0x2f0>
 8009896:	0039      	movs	r1, r7
 8009898:	0028      	movs	r0, r5
 800989a:	f7fe fc22 	bl	80080e2 <__any_on>
 800989e:	0004      	movs	r4, r0
 80098a0:	231f      	movs	r3, #31
 80098a2:	117a      	asrs	r2, r7, #5
 80098a4:	401f      	ands	r7, r3
 80098a6:	3b1e      	subs	r3, #30
 80098a8:	40bb      	lsls	r3, r7
 80098aa:	9902      	ldr	r1, [sp, #8]
 80098ac:	0092      	lsls	r2, r2, #2
 80098ae:	5852      	ldr	r2, [r2, r1]
 80098b0:	421a      	tst	r2, r3
 80098b2:	d001      	beq.n	80098b8 <__gethex+0x308>
 80098b4:	2302      	movs	r3, #2
 80098b6:	431c      	orrs	r4, r3
 80098b8:	9b00      	ldr	r3, [sp, #0]
 80098ba:	0031      	movs	r1, r6
 80098bc:	1b9b      	subs	r3, r3, r6
 80098be:	2602      	movs	r6, #2
 80098c0:	0028      	movs	r0, r5
 80098c2:	9300      	str	r3, [sp, #0]
 80098c4:	f7ff fe0b 	bl	80094de <rshift>
 80098c8:	9b01      	ldr	r3, [sp, #4]
 80098ca:	685f      	ldr	r7, [r3, #4]
 80098cc:	2c00      	cmp	r4, #0
 80098ce:	d03f      	beq.n	8009950 <__gethex+0x3a0>
 80098d0:	9b01      	ldr	r3, [sp, #4]
 80098d2:	68db      	ldr	r3, [r3, #12]
 80098d4:	2b02      	cmp	r3, #2
 80098d6:	d010      	beq.n	80098fa <__gethex+0x34a>
 80098d8:	2b03      	cmp	r3, #3
 80098da:	d012      	beq.n	8009902 <__gethex+0x352>
 80098dc:	2b01      	cmp	r3, #1
 80098de:	d106      	bne.n	80098ee <__gethex+0x33e>
 80098e0:	07a2      	lsls	r2, r4, #30
 80098e2:	d504      	bpl.n	80098ee <__gethex+0x33e>
 80098e4:	9a02      	ldr	r2, [sp, #8]
 80098e6:	6812      	ldr	r2, [r2, #0]
 80098e8:	4314      	orrs	r4, r2
 80098ea:	421c      	tst	r4, r3
 80098ec:	d10c      	bne.n	8009908 <__gethex+0x358>
 80098ee:	2310      	movs	r3, #16
 80098f0:	e02d      	b.n	800994e <__gethex+0x39e>
 80098f2:	2401      	movs	r4, #1
 80098f4:	e7d4      	b.n	80098a0 <__gethex+0x2f0>
 80098f6:	2601      	movs	r6, #1
 80098f8:	e7e8      	b.n	80098cc <__gethex+0x31c>
 80098fa:	2301      	movs	r3, #1
 80098fc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80098fe:	1a9b      	subs	r3, r3, r2
 8009900:	930f      	str	r3, [sp, #60]	@ 0x3c
 8009902:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8009904:	2b00      	cmp	r3, #0
 8009906:	d0f2      	beq.n	80098ee <__gethex+0x33e>
 8009908:	692b      	ldr	r3, [r5, #16]
 800990a:	2000      	movs	r0, #0
 800990c:	9302      	str	r3, [sp, #8]
 800990e:	009b      	lsls	r3, r3, #2
 8009910:	9304      	str	r3, [sp, #16]
 8009912:	002b      	movs	r3, r5
 8009914:	9a04      	ldr	r2, [sp, #16]
 8009916:	3314      	adds	r3, #20
 8009918:	1899      	adds	r1, r3, r2
 800991a:	681a      	ldr	r2, [r3, #0]
 800991c:	1c54      	adds	r4, r2, #1
 800991e:	d01c      	beq.n	800995a <__gethex+0x3aa>
 8009920:	3201      	adds	r2, #1
 8009922:	601a      	str	r2, [r3, #0]
 8009924:	002b      	movs	r3, r5
 8009926:	3314      	adds	r3, #20
 8009928:	2e02      	cmp	r6, #2
 800992a:	d13f      	bne.n	80099ac <__gethex+0x3fc>
 800992c:	9a01      	ldr	r2, [sp, #4]
 800992e:	9900      	ldr	r1, [sp, #0]
 8009930:	6812      	ldr	r2, [r2, #0]
 8009932:	3a01      	subs	r2, #1
 8009934:	428a      	cmp	r2, r1
 8009936:	d109      	bne.n	800994c <__gethex+0x39c>
 8009938:	000a      	movs	r2, r1
 800993a:	201f      	movs	r0, #31
 800993c:	4010      	ands	r0, r2
 800993e:	2201      	movs	r2, #1
 8009940:	4082      	lsls	r2, r0
 8009942:	1149      	asrs	r1, r1, #5
 8009944:	0089      	lsls	r1, r1, #2
 8009946:	58cb      	ldr	r3, [r1, r3]
 8009948:	4213      	tst	r3, r2
 800994a:	d13d      	bne.n	80099c8 <__gethex+0x418>
 800994c:	2320      	movs	r3, #32
 800994e:	431e      	orrs	r6, r3
 8009950:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8009952:	601d      	str	r5, [r3, #0]
 8009954:	9b07      	ldr	r3, [sp, #28]
 8009956:	601f      	str	r7, [r3, #0]
 8009958:	e6b4      	b.n	80096c4 <__gethex+0x114>
 800995a:	c301      	stmia	r3!, {r0}
 800995c:	4299      	cmp	r1, r3
 800995e:	d8dc      	bhi.n	800991a <__gethex+0x36a>
 8009960:	68ab      	ldr	r3, [r5, #8]
 8009962:	9a02      	ldr	r2, [sp, #8]
 8009964:	429a      	cmp	r2, r3
 8009966:	db18      	blt.n	800999a <__gethex+0x3ea>
 8009968:	6869      	ldr	r1, [r5, #4]
 800996a:	9803      	ldr	r0, [sp, #12]
 800996c:	3101      	adds	r1, #1
 800996e:	f7fd ff19 	bl	80077a4 <_Balloc>
 8009972:	1e04      	subs	r4, r0, #0
 8009974:	d104      	bne.n	8009980 <__gethex+0x3d0>
 8009976:	0022      	movs	r2, r4
 8009978:	2184      	movs	r1, #132	@ 0x84
 800997a:	4b1d      	ldr	r3, [pc, #116]	@ (80099f0 <__gethex+0x440>)
 800997c:	481d      	ldr	r0, [pc, #116]	@ (80099f4 <__gethex+0x444>)
 800997e:	e6c4      	b.n	800970a <__gethex+0x15a>
 8009980:	0029      	movs	r1, r5
 8009982:	692a      	ldr	r2, [r5, #16]
 8009984:	310c      	adds	r1, #12
 8009986:	3202      	adds	r2, #2
 8009988:	0092      	lsls	r2, r2, #2
 800998a:	300c      	adds	r0, #12
 800998c:	f7ff fd4c 	bl	8009428 <memcpy>
 8009990:	0029      	movs	r1, r5
 8009992:	9803      	ldr	r0, [sp, #12]
 8009994:	f7fd ff4a 	bl	800782c <_Bfree>
 8009998:	0025      	movs	r5, r4
 800999a:	692b      	ldr	r3, [r5, #16]
 800999c:	1c5a      	adds	r2, r3, #1
 800999e:	612a      	str	r2, [r5, #16]
 80099a0:	2201      	movs	r2, #1
 80099a2:	3304      	adds	r3, #4
 80099a4:	009b      	lsls	r3, r3, #2
 80099a6:	18eb      	adds	r3, r5, r3
 80099a8:	605a      	str	r2, [r3, #4]
 80099aa:	e7bb      	b.n	8009924 <__gethex+0x374>
 80099ac:	692a      	ldr	r2, [r5, #16]
 80099ae:	9902      	ldr	r1, [sp, #8]
 80099b0:	428a      	cmp	r2, r1
 80099b2:	dd0b      	ble.n	80099cc <__gethex+0x41c>
 80099b4:	2101      	movs	r1, #1
 80099b6:	0028      	movs	r0, r5
 80099b8:	f7ff fd91 	bl	80094de <rshift>
 80099bc:	9b01      	ldr	r3, [sp, #4]
 80099be:	3701      	adds	r7, #1
 80099c0:	689b      	ldr	r3, [r3, #8]
 80099c2:	42bb      	cmp	r3, r7
 80099c4:	da00      	bge.n	80099c8 <__gethex+0x418>
 80099c6:	e6df      	b.n	8009788 <__gethex+0x1d8>
 80099c8:	2601      	movs	r6, #1
 80099ca:	e7bf      	b.n	800994c <__gethex+0x39c>
 80099cc:	221f      	movs	r2, #31
 80099ce:	9c00      	ldr	r4, [sp, #0]
 80099d0:	9900      	ldr	r1, [sp, #0]
 80099d2:	4014      	ands	r4, r2
 80099d4:	4211      	tst	r1, r2
 80099d6:	d0f7      	beq.n	80099c8 <__gethex+0x418>
 80099d8:	9a04      	ldr	r2, [sp, #16]
 80099da:	189b      	adds	r3, r3, r2
 80099dc:	3b04      	subs	r3, #4
 80099de:	6818      	ldr	r0, [r3, #0]
 80099e0:	f7fd ffd8 	bl	8007994 <__hi0bits>
 80099e4:	2320      	movs	r3, #32
 80099e6:	1b1b      	subs	r3, r3, r4
 80099e8:	4298      	cmp	r0, r3
 80099ea:	dbe3      	blt.n	80099b4 <__gethex+0x404>
 80099ec:	e7ec      	b.n	80099c8 <__gethex+0x418>
 80099ee:	46c0      	nop			@ (mov r8, r8)
 80099f0:	0800a0f1 	.word	0x0800a0f1
 80099f4:	0800a1b2 	.word	0x0800a1b2

080099f8 <L_shift>:
 80099f8:	2308      	movs	r3, #8
 80099fa:	b570      	push	{r4, r5, r6, lr}
 80099fc:	2520      	movs	r5, #32
 80099fe:	1a9a      	subs	r2, r3, r2
 8009a00:	0092      	lsls	r2, r2, #2
 8009a02:	1aad      	subs	r5, r5, r2
 8009a04:	6843      	ldr	r3, [r0, #4]
 8009a06:	6804      	ldr	r4, [r0, #0]
 8009a08:	001e      	movs	r6, r3
 8009a0a:	40ae      	lsls	r6, r5
 8009a0c:	40d3      	lsrs	r3, r2
 8009a0e:	4334      	orrs	r4, r6
 8009a10:	6004      	str	r4, [r0, #0]
 8009a12:	6043      	str	r3, [r0, #4]
 8009a14:	3004      	adds	r0, #4
 8009a16:	4288      	cmp	r0, r1
 8009a18:	d3f4      	bcc.n	8009a04 <L_shift+0xc>
 8009a1a:	bd70      	pop	{r4, r5, r6, pc}

08009a1c <__match>:
 8009a1c:	b530      	push	{r4, r5, lr}
 8009a1e:	6803      	ldr	r3, [r0, #0]
 8009a20:	780c      	ldrb	r4, [r1, #0]
 8009a22:	3301      	adds	r3, #1
 8009a24:	2c00      	cmp	r4, #0
 8009a26:	d102      	bne.n	8009a2e <__match+0x12>
 8009a28:	6003      	str	r3, [r0, #0]
 8009a2a:	2001      	movs	r0, #1
 8009a2c:	bd30      	pop	{r4, r5, pc}
 8009a2e:	781a      	ldrb	r2, [r3, #0]
 8009a30:	0015      	movs	r5, r2
 8009a32:	3d41      	subs	r5, #65	@ 0x41
 8009a34:	2d19      	cmp	r5, #25
 8009a36:	d800      	bhi.n	8009a3a <__match+0x1e>
 8009a38:	3220      	adds	r2, #32
 8009a3a:	3101      	adds	r1, #1
 8009a3c:	42a2      	cmp	r2, r4
 8009a3e:	d0ef      	beq.n	8009a20 <__match+0x4>
 8009a40:	2000      	movs	r0, #0
 8009a42:	e7f3      	b.n	8009a2c <__match+0x10>

08009a44 <__hexnan>:
 8009a44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009a46:	680b      	ldr	r3, [r1, #0]
 8009a48:	b08b      	sub	sp, #44	@ 0x2c
 8009a4a:	9201      	str	r2, [sp, #4]
 8009a4c:	9901      	ldr	r1, [sp, #4]
 8009a4e:	115a      	asrs	r2, r3, #5
 8009a50:	0092      	lsls	r2, r2, #2
 8009a52:	188a      	adds	r2, r1, r2
 8009a54:	9202      	str	r2, [sp, #8]
 8009a56:	0019      	movs	r1, r3
 8009a58:	221f      	movs	r2, #31
 8009a5a:	4011      	ands	r1, r2
 8009a5c:	9008      	str	r0, [sp, #32]
 8009a5e:	9106      	str	r1, [sp, #24]
 8009a60:	4213      	tst	r3, r2
 8009a62:	d002      	beq.n	8009a6a <__hexnan+0x26>
 8009a64:	9b02      	ldr	r3, [sp, #8]
 8009a66:	3304      	adds	r3, #4
 8009a68:	9302      	str	r3, [sp, #8]
 8009a6a:	9b02      	ldr	r3, [sp, #8]
 8009a6c:	2500      	movs	r5, #0
 8009a6e:	1f1f      	subs	r7, r3, #4
 8009a70:	003e      	movs	r6, r7
 8009a72:	003c      	movs	r4, r7
 8009a74:	9b08      	ldr	r3, [sp, #32]
 8009a76:	603d      	str	r5, [r7, #0]
 8009a78:	681b      	ldr	r3, [r3, #0]
 8009a7a:	9507      	str	r5, [sp, #28]
 8009a7c:	9305      	str	r3, [sp, #20]
 8009a7e:	9503      	str	r5, [sp, #12]
 8009a80:	9b05      	ldr	r3, [sp, #20]
 8009a82:	3301      	adds	r3, #1
 8009a84:	9309      	str	r3, [sp, #36]	@ 0x24
 8009a86:	9b05      	ldr	r3, [sp, #20]
 8009a88:	785b      	ldrb	r3, [r3, #1]
 8009a8a:	9304      	str	r3, [sp, #16]
 8009a8c:	2b00      	cmp	r3, #0
 8009a8e:	d028      	beq.n	8009ae2 <__hexnan+0x9e>
 8009a90:	9804      	ldr	r0, [sp, #16]
 8009a92:	f7ff fd77 	bl	8009584 <__hexdig_fun>
 8009a96:	2800      	cmp	r0, #0
 8009a98:	d155      	bne.n	8009b46 <__hexnan+0x102>
 8009a9a:	9b04      	ldr	r3, [sp, #16]
 8009a9c:	2b20      	cmp	r3, #32
 8009a9e:	d819      	bhi.n	8009ad4 <__hexnan+0x90>
 8009aa0:	9b03      	ldr	r3, [sp, #12]
 8009aa2:	9a07      	ldr	r2, [sp, #28]
 8009aa4:	4293      	cmp	r3, r2
 8009aa6:	dd12      	ble.n	8009ace <__hexnan+0x8a>
 8009aa8:	42b4      	cmp	r4, r6
 8009aaa:	d206      	bcs.n	8009aba <__hexnan+0x76>
 8009aac:	2d07      	cmp	r5, #7
 8009aae:	dc04      	bgt.n	8009aba <__hexnan+0x76>
 8009ab0:	002a      	movs	r2, r5
 8009ab2:	0031      	movs	r1, r6
 8009ab4:	0020      	movs	r0, r4
 8009ab6:	f7ff ff9f 	bl	80099f8 <L_shift>
 8009aba:	9b01      	ldr	r3, [sp, #4]
 8009abc:	2508      	movs	r5, #8
 8009abe:	429c      	cmp	r4, r3
 8009ac0:	d905      	bls.n	8009ace <__hexnan+0x8a>
 8009ac2:	1f26      	subs	r6, r4, #4
 8009ac4:	2500      	movs	r5, #0
 8009ac6:	0034      	movs	r4, r6
 8009ac8:	9b03      	ldr	r3, [sp, #12]
 8009aca:	6035      	str	r5, [r6, #0]
 8009acc:	9307      	str	r3, [sp, #28]
 8009ace:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009ad0:	9305      	str	r3, [sp, #20]
 8009ad2:	e7d5      	b.n	8009a80 <__hexnan+0x3c>
 8009ad4:	9b04      	ldr	r3, [sp, #16]
 8009ad6:	2b29      	cmp	r3, #41	@ 0x29
 8009ad8:	d15a      	bne.n	8009b90 <__hexnan+0x14c>
 8009ada:	9b05      	ldr	r3, [sp, #20]
 8009adc:	9a08      	ldr	r2, [sp, #32]
 8009ade:	3302      	adds	r3, #2
 8009ae0:	6013      	str	r3, [r2, #0]
 8009ae2:	9b03      	ldr	r3, [sp, #12]
 8009ae4:	2b00      	cmp	r3, #0
 8009ae6:	d053      	beq.n	8009b90 <__hexnan+0x14c>
 8009ae8:	42b4      	cmp	r4, r6
 8009aea:	d206      	bcs.n	8009afa <__hexnan+0xb6>
 8009aec:	2d07      	cmp	r5, #7
 8009aee:	dc04      	bgt.n	8009afa <__hexnan+0xb6>
 8009af0:	002a      	movs	r2, r5
 8009af2:	0031      	movs	r1, r6
 8009af4:	0020      	movs	r0, r4
 8009af6:	f7ff ff7f 	bl	80099f8 <L_shift>
 8009afa:	9b01      	ldr	r3, [sp, #4]
 8009afc:	429c      	cmp	r4, r3
 8009afe:	d936      	bls.n	8009b6e <__hexnan+0x12a>
 8009b00:	001a      	movs	r2, r3
 8009b02:	0023      	movs	r3, r4
 8009b04:	cb02      	ldmia	r3!, {r1}
 8009b06:	c202      	stmia	r2!, {r1}
 8009b08:	429f      	cmp	r7, r3
 8009b0a:	d2fb      	bcs.n	8009b04 <__hexnan+0xc0>
 8009b0c:	9b02      	ldr	r3, [sp, #8]
 8009b0e:	1c62      	adds	r2, r4, #1
 8009b10:	1ed9      	subs	r1, r3, #3
 8009b12:	2304      	movs	r3, #4
 8009b14:	4291      	cmp	r1, r2
 8009b16:	d305      	bcc.n	8009b24 <__hexnan+0xe0>
 8009b18:	9b02      	ldr	r3, [sp, #8]
 8009b1a:	3b04      	subs	r3, #4
 8009b1c:	1b1b      	subs	r3, r3, r4
 8009b1e:	089b      	lsrs	r3, r3, #2
 8009b20:	3301      	adds	r3, #1
 8009b22:	009b      	lsls	r3, r3, #2
 8009b24:	9a01      	ldr	r2, [sp, #4]
 8009b26:	18d3      	adds	r3, r2, r3
 8009b28:	2200      	movs	r2, #0
 8009b2a:	c304      	stmia	r3!, {r2}
 8009b2c:	429f      	cmp	r7, r3
 8009b2e:	d2fc      	bcs.n	8009b2a <__hexnan+0xe6>
 8009b30:	683b      	ldr	r3, [r7, #0]
 8009b32:	2b00      	cmp	r3, #0
 8009b34:	d104      	bne.n	8009b40 <__hexnan+0xfc>
 8009b36:	9b01      	ldr	r3, [sp, #4]
 8009b38:	429f      	cmp	r7, r3
 8009b3a:	d127      	bne.n	8009b8c <__hexnan+0x148>
 8009b3c:	2301      	movs	r3, #1
 8009b3e:	603b      	str	r3, [r7, #0]
 8009b40:	2005      	movs	r0, #5
 8009b42:	b00b      	add	sp, #44	@ 0x2c
 8009b44:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009b46:	9b03      	ldr	r3, [sp, #12]
 8009b48:	3501      	adds	r5, #1
 8009b4a:	3301      	adds	r3, #1
 8009b4c:	9303      	str	r3, [sp, #12]
 8009b4e:	2d08      	cmp	r5, #8
 8009b50:	dd06      	ble.n	8009b60 <__hexnan+0x11c>
 8009b52:	9b01      	ldr	r3, [sp, #4]
 8009b54:	429c      	cmp	r4, r3
 8009b56:	d9ba      	bls.n	8009ace <__hexnan+0x8a>
 8009b58:	2300      	movs	r3, #0
 8009b5a:	2501      	movs	r5, #1
 8009b5c:	3c04      	subs	r4, #4
 8009b5e:	6023      	str	r3, [r4, #0]
 8009b60:	220f      	movs	r2, #15
 8009b62:	6823      	ldr	r3, [r4, #0]
 8009b64:	4010      	ands	r0, r2
 8009b66:	011b      	lsls	r3, r3, #4
 8009b68:	4303      	orrs	r3, r0
 8009b6a:	6023      	str	r3, [r4, #0]
 8009b6c:	e7af      	b.n	8009ace <__hexnan+0x8a>
 8009b6e:	9b06      	ldr	r3, [sp, #24]
 8009b70:	2b00      	cmp	r3, #0
 8009b72:	d0dd      	beq.n	8009b30 <__hexnan+0xec>
 8009b74:	2320      	movs	r3, #32
 8009b76:	9a06      	ldr	r2, [sp, #24]
 8009b78:	9902      	ldr	r1, [sp, #8]
 8009b7a:	1a9b      	subs	r3, r3, r2
 8009b7c:	2201      	movs	r2, #1
 8009b7e:	4252      	negs	r2, r2
 8009b80:	40da      	lsrs	r2, r3
 8009b82:	3904      	subs	r1, #4
 8009b84:	680b      	ldr	r3, [r1, #0]
 8009b86:	4013      	ands	r3, r2
 8009b88:	600b      	str	r3, [r1, #0]
 8009b8a:	e7d1      	b.n	8009b30 <__hexnan+0xec>
 8009b8c:	3f04      	subs	r7, #4
 8009b8e:	e7cf      	b.n	8009b30 <__hexnan+0xec>
 8009b90:	2004      	movs	r0, #4
 8009b92:	e7d6      	b.n	8009b42 <__hexnan+0xfe>

08009b94 <__ascii_mbtowc>:
 8009b94:	b082      	sub	sp, #8
 8009b96:	2900      	cmp	r1, #0
 8009b98:	d100      	bne.n	8009b9c <__ascii_mbtowc+0x8>
 8009b9a:	a901      	add	r1, sp, #4
 8009b9c:	1e10      	subs	r0, r2, #0
 8009b9e:	d006      	beq.n	8009bae <__ascii_mbtowc+0x1a>
 8009ba0:	2b00      	cmp	r3, #0
 8009ba2:	d006      	beq.n	8009bb2 <__ascii_mbtowc+0x1e>
 8009ba4:	7813      	ldrb	r3, [r2, #0]
 8009ba6:	600b      	str	r3, [r1, #0]
 8009ba8:	7810      	ldrb	r0, [r2, #0]
 8009baa:	1e43      	subs	r3, r0, #1
 8009bac:	4198      	sbcs	r0, r3
 8009bae:	b002      	add	sp, #8
 8009bb0:	4770      	bx	lr
 8009bb2:	2002      	movs	r0, #2
 8009bb4:	4240      	negs	r0, r0
 8009bb6:	e7fa      	b.n	8009bae <__ascii_mbtowc+0x1a>

08009bb8 <_realloc_r>:
 8009bb8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009bba:	0006      	movs	r6, r0
 8009bbc:	000c      	movs	r4, r1
 8009bbe:	0015      	movs	r5, r2
 8009bc0:	2900      	cmp	r1, #0
 8009bc2:	d105      	bne.n	8009bd0 <_realloc_r+0x18>
 8009bc4:	0011      	movs	r1, r2
 8009bc6:	f7fd fd5d 	bl	8007684 <_malloc_r>
 8009bca:	0004      	movs	r4, r0
 8009bcc:	0020      	movs	r0, r4
 8009bce:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8009bd0:	2a00      	cmp	r2, #0
 8009bd2:	d103      	bne.n	8009bdc <_realloc_r+0x24>
 8009bd4:	f7fd fce0 	bl	8007598 <_free_r>
 8009bd8:	002c      	movs	r4, r5
 8009bda:	e7f7      	b.n	8009bcc <_realloc_r+0x14>
 8009bdc:	f000 f841 	bl	8009c62 <_malloc_usable_size_r>
 8009be0:	0007      	movs	r7, r0
 8009be2:	4285      	cmp	r5, r0
 8009be4:	d802      	bhi.n	8009bec <_realloc_r+0x34>
 8009be6:	0843      	lsrs	r3, r0, #1
 8009be8:	42ab      	cmp	r3, r5
 8009bea:	d3ef      	bcc.n	8009bcc <_realloc_r+0x14>
 8009bec:	0029      	movs	r1, r5
 8009bee:	0030      	movs	r0, r6
 8009bf0:	f7fd fd48 	bl	8007684 <_malloc_r>
 8009bf4:	9001      	str	r0, [sp, #4]
 8009bf6:	2800      	cmp	r0, #0
 8009bf8:	d101      	bne.n	8009bfe <_realloc_r+0x46>
 8009bfa:	9c01      	ldr	r4, [sp, #4]
 8009bfc:	e7e6      	b.n	8009bcc <_realloc_r+0x14>
 8009bfe:	002a      	movs	r2, r5
 8009c00:	42bd      	cmp	r5, r7
 8009c02:	d900      	bls.n	8009c06 <_realloc_r+0x4e>
 8009c04:	003a      	movs	r2, r7
 8009c06:	0021      	movs	r1, r4
 8009c08:	9801      	ldr	r0, [sp, #4]
 8009c0a:	f7ff fc0d 	bl	8009428 <memcpy>
 8009c0e:	0021      	movs	r1, r4
 8009c10:	0030      	movs	r0, r6
 8009c12:	f7fd fcc1 	bl	8007598 <_free_r>
 8009c16:	e7f0      	b.n	8009bfa <_realloc_r+0x42>

08009c18 <__ascii_wctomb>:
 8009c18:	0003      	movs	r3, r0
 8009c1a:	1e08      	subs	r0, r1, #0
 8009c1c:	d005      	beq.n	8009c2a <__ascii_wctomb+0x12>
 8009c1e:	2aff      	cmp	r2, #255	@ 0xff
 8009c20:	d904      	bls.n	8009c2c <__ascii_wctomb+0x14>
 8009c22:	228a      	movs	r2, #138	@ 0x8a
 8009c24:	2001      	movs	r0, #1
 8009c26:	601a      	str	r2, [r3, #0]
 8009c28:	4240      	negs	r0, r0
 8009c2a:	4770      	bx	lr
 8009c2c:	2001      	movs	r0, #1
 8009c2e:	700a      	strb	r2, [r1, #0]
 8009c30:	e7fb      	b.n	8009c2a <__ascii_wctomb+0x12>
	...

08009c34 <fiprintf>:
 8009c34:	b40e      	push	{r1, r2, r3}
 8009c36:	b517      	push	{r0, r1, r2, r4, lr}
 8009c38:	4c05      	ldr	r4, [pc, #20]	@ (8009c50 <fiprintf+0x1c>)
 8009c3a:	ab05      	add	r3, sp, #20
 8009c3c:	cb04      	ldmia	r3!, {r2}
 8009c3e:	0001      	movs	r1, r0
 8009c40:	6820      	ldr	r0, [r4, #0]
 8009c42:	9301      	str	r3, [sp, #4]
 8009c44:	f000 f83c 	bl	8009cc0 <_vfiprintf_r>
 8009c48:	bc1e      	pop	{r1, r2, r3, r4}
 8009c4a:	bc08      	pop	{r3}
 8009c4c:	b003      	add	sp, #12
 8009c4e:	4718      	bx	r3
 8009c50:	20000018 	.word	0x20000018

08009c54 <abort>:
 8009c54:	2006      	movs	r0, #6
 8009c56:	b510      	push	{r4, lr}
 8009c58:	f000 f978 	bl	8009f4c <raise>
 8009c5c:	2001      	movs	r0, #1
 8009c5e:	f7f9 fa7e 	bl	800315e <_exit>

08009c62 <_malloc_usable_size_r>:
 8009c62:	1f0b      	subs	r3, r1, #4
 8009c64:	681b      	ldr	r3, [r3, #0]
 8009c66:	1f18      	subs	r0, r3, #4
 8009c68:	2b00      	cmp	r3, #0
 8009c6a:	da01      	bge.n	8009c70 <_malloc_usable_size_r+0xe>
 8009c6c:	580b      	ldr	r3, [r1, r0]
 8009c6e:	18c0      	adds	r0, r0, r3
 8009c70:	4770      	bx	lr

08009c72 <__sfputc_r>:
 8009c72:	6893      	ldr	r3, [r2, #8]
 8009c74:	b510      	push	{r4, lr}
 8009c76:	3b01      	subs	r3, #1
 8009c78:	6093      	str	r3, [r2, #8]
 8009c7a:	2b00      	cmp	r3, #0
 8009c7c:	da04      	bge.n	8009c88 <__sfputc_r+0x16>
 8009c7e:	6994      	ldr	r4, [r2, #24]
 8009c80:	42a3      	cmp	r3, r4
 8009c82:	db07      	blt.n	8009c94 <__sfputc_r+0x22>
 8009c84:	290a      	cmp	r1, #10
 8009c86:	d005      	beq.n	8009c94 <__sfputc_r+0x22>
 8009c88:	6813      	ldr	r3, [r2, #0]
 8009c8a:	1c58      	adds	r0, r3, #1
 8009c8c:	6010      	str	r0, [r2, #0]
 8009c8e:	7019      	strb	r1, [r3, #0]
 8009c90:	0008      	movs	r0, r1
 8009c92:	bd10      	pop	{r4, pc}
 8009c94:	f7fc fcd4 	bl	8006640 <__swbuf_r>
 8009c98:	0001      	movs	r1, r0
 8009c9a:	e7f9      	b.n	8009c90 <__sfputc_r+0x1e>

08009c9c <__sfputs_r>:
 8009c9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009c9e:	0006      	movs	r6, r0
 8009ca0:	000f      	movs	r7, r1
 8009ca2:	0014      	movs	r4, r2
 8009ca4:	18d5      	adds	r5, r2, r3
 8009ca6:	42ac      	cmp	r4, r5
 8009ca8:	d101      	bne.n	8009cae <__sfputs_r+0x12>
 8009caa:	2000      	movs	r0, #0
 8009cac:	e007      	b.n	8009cbe <__sfputs_r+0x22>
 8009cae:	7821      	ldrb	r1, [r4, #0]
 8009cb0:	003a      	movs	r2, r7
 8009cb2:	0030      	movs	r0, r6
 8009cb4:	f7ff ffdd 	bl	8009c72 <__sfputc_r>
 8009cb8:	3401      	adds	r4, #1
 8009cba:	1c43      	adds	r3, r0, #1
 8009cbc:	d1f3      	bne.n	8009ca6 <__sfputs_r+0xa>
 8009cbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08009cc0 <_vfiprintf_r>:
 8009cc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009cc2:	b0a1      	sub	sp, #132	@ 0x84
 8009cc4:	000f      	movs	r7, r1
 8009cc6:	0015      	movs	r5, r2
 8009cc8:	001e      	movs	r6, r3
 8009cca:	9003      	str	r0, [sp, #12]
 8009ccc:	2800      	cmp	r0, #0
 8009cce:	d004      	beq.n	8009cda <_vfiprintf_r+0x1a>
 8009cd0:	6a03      	ldr	r3, [r0, #32]
 8009cd2:	2b00      	cmp	r3, #0
 8009cd4:	d101      	bne.n	8009cda <_vfiprintf_r+0x1a>
 8009cd6:	f7fc fb7b 	bl	80063d0 <__sinit>
 8009cda:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8009cdc:	07db      	lsls	r3, r3, #31
 8009cde:	d405      	bmi.n	8009cec <_vfiprintf_r+0x2c>
 8009ce0:	89bb      	ldrh	r3, [r7, #12]
 8009ce2:	059b      	lsls	r3, r3, #22
 8009ce4:	d402      	bmi.n	8009cec <_vfiprintf_r+0x2c>
 8009ce6:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8009ce8:	f7fc fdcf 	bl	800688a <__retarget_lock_acquire_recursive>
 8009cec:	89bb      	ldrh	r3, [r7, #12]
 8009cee:	071b      	lsls	r3, r3, #28
 8009cf0:	d502      	bpl.n	8009cf8 <_vfiprintf_r+0x38>
 8009cf2:	693b      	ldr	r3, [r7, #16]
 8009cf4:	2b00      	cmp	r3, #0
 8009cf6:	d113      	bne.n	8009d20 <_vfiprintf_r+0x60>
 8009cf8:	0039      	movs	r1, r7
 8009cfa:	9803      	ldr	r0, [sp, #12]
 8009cfc:	f7fc fce2 	bl	80066c4 <__swsetup_r>
 8009d00:	2800      	cmp	r0, #0
 8009d02:	d00d      	beq.n	8009d20 <_vfiprintf_r+0x60>
 8009d04:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8009d06:	07db      	lsls	r3, r3, #31
 8009d08:	d503      	bpl.n	8009d12 <_vfiprintf_r+0x52>
 8009d0a:	2001      	movs	r0, #1
 8009d0c:	4240      	negs	r0, r0
 8009d0e:	b021      	add	sp, #132	@ 0x84
 8009d10:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009d12:	89bb      	ldrh	r3, [r7, #12]
 8009d14:	059b      	lsls	r3, r3, #22
 8009d16:	d4f8      	bmi.n	8009d0a <_vfiprintf_r+0x4a>
 8009d18:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8009d1a:	f7fc fdb7 	bl	800688c <__retarget_lock_release_recursive>
 8009d1e:	e7f4      	b.n	8009d0a <_vfiprintf_r+0x4a>
 8009d20:	2300      	movs	r3, #0
 8009d22:	ac08      	add	r4, sp, #32
 8009d24:	6163      	str	r3, [r4, #20]
 8009d26:	3320      	adds	r3, #32
 8009d28:	7663      	strb	r3, [r4, #25]
 8009d2a:	3310      	adds	r3, #16
 8009d2c:	76a3      	strb	r3, [r4, #26]
 8009d2e:	9607      	str	r6, [sp, #28]
 8009d30:	002e      	movs	r6, r5
 8009d32:	7833      	ldrb	r3, [r6, #0]
 8009d34:	2b00      	cmp	r3, #0
 8009d36:	d001      	beq.n	8009d3c <_vfiprintf_r+0x7c>
 8009d38:	2b25      	cmp	r3, #37	@ 0x25
 8009d3a:	d148      	bne.n	8009dce <_vfiprintf_r+0x10e>
 8009d3c:	1b73      	subs	r3, r6, r5
 8009d3e:	9305      	str	r3, [sp, #20]
 8009d40:	42ae      	cmp	r6, r5
 8009d42:	d00b      	beq.n	8009d5c <_vfiprintf_r+0x9c>
 8009d44:	002a      	movs	r2, r5
 8009d46:	0039      	movs	r1, r7
 8009d48:	9803      	ldr	r0, [sp, #12]
 8009d4a:	f7ff ffa7 	bl	8009c9c <__sfputs_r>
 8009d4e:	3001      	adds	r0, #1
 8009d50:	d100      	bne.n	8009d54 <_vfiprintf_r+0x94>
 8009d52:	e0ae      	b.n	8009eb2 <_vfiprintf_r+0x1f2>
 8009d54:	6963      	ldr	r3, [r4, #20]
 8009d56:	9a05      	ldr	r2, [sp, #20]
 8009d58:	189b      	adds	r3, r3, r2
 8009d5a:	6163      	str	r3, [r4, #20]
 8009d5c:	7833      	ldrb	r3, [r6, #0]
 8009d5e:	2b00      	cmp	r3, #0
 8009d60:	d100      	bne.n	8009d64 <_vfiprintf_r+0xa4>
 8009d62:	e0a6      	b.n	8009eb2 <_vfiprintf_r+0x1f2>
 8009d64:	2201      	movs	r2, #1
 8009d66:	2300      	movs	r3, #0
 8009d68:	4252      	negs	r2, r2
 8009d6a:	6062      	str	r2, [r4, #4]
 8009d6c:	a904      	add	r1, sp, #16
 8009d6e:	3254      	adds	r2, #84	@ 0x54
 8009d70:	1852      	adds	r2, r2, r1
 8009d72:	1c75      	adds	r5, r6, #1
 8009d74:	6023      	str	r3, [r4, #0]
 8009d76:	60e3      	str	r3, [r4, #12]
 8009d78:	60a3      	str	r3, [r4, #8]
 8009d7a:	7013      	strb	r3, [r2, #0]
 8009d7c:	65a3      	str	r3, [r4, #88]	@ 0x58
 8009d7e:	4b59      	ldr	r3, [pc, #356]	@ (8009ee4 <_vfiprintf_r+0x224>)
 8009d80:	2205      	movs	r2, #5
 8009d82:	0018      	movs	r0, r3
 8009d84:	7829      	ldrb	r1, [r5, #0]
 8009d86:	9305      	str	r3, [sp, #20]
 8009d88:	f7fc fd81 	bl	800688e <memchr>
 8009d8c:	1c6e      	adds	r6, r5, #1
 8009d8e:	2800      	cmp	r0, #0
 8009d90:	d11f      	bne.n	8009dd2 <_vfiprintf_r+0x112>
 8009d92:	6822      	ldr	r2, [r4, #0]
 8009d94:	06d3      	lsls	r3, r2, #27
 8009d96:	d504      	bpl.n	8009da2 <_vfiprintf_r+0xe2>
 8009d98:	2353      	movs	r3, #83	@ 0x53
 8009d9a:	a904      	add	r1, sp, #16
 8009d9c:	185b      	adds	r3, r3, r1
 8009d9e:	2120      	movs	r1, #32
 8009da0:	7019      	strb	r1, [r3, #0]
 8009da2:	0713      	lsls	r3, r2, #28
 8009da4:	d504      	bpl.n	8009db0 <_vfiprintf_r+0xf0>
 8009da6:	2353      	movs	r3, #83	@ 0x53
 8009da8:	a904      	add	r1, sp, #16
 8009daa:	185b      	adds	r3, r3, r1
 8009dac:	212b      	movs	r1, #43	@ 0x2b
 8009dae:	7019      	strb	r1, [r3, #0]
 8009db0:	782b      	ldrb	r3, [r5, #0]
 8009db2:	2b2a      	cmp	r3, #42	@ 0x2a
 8009db4:	d016      	beq.n	8009de4 <_vfiprintf_r+0x124>
 8009db6:	002e      	movs	r6, r5
 8009db8:	2100      	movs	r1, #0
 8009dba:	200a      	movs	r0, #10
 8009dbc:	68e3      	ldr	r3, [r4, #12]
 8009dbe:	7832      	ldrb	r2, [r6, #0]
 8009dc0:	1c75      	adds	r5, r6, #1
 8009dc2:	3a30      	subs	r2, #48	@ 0x30
 8009dc4:	2a09      	cmp	r2, #9
 8009dc6:	d950      	bls.n	8009e6a <_vfiprintf_r+0x1aa>
 8009dc8:	2900      	cmp	r1, #0
 8009dca:	d111      	bne.n	8009df0 <_vfiprintf_r+0x130>
 8009dcc:	e017      	b.n	8009dfe <_vfiprintf_r+0x13e>
 8009dce:	3601      	adds	r6, #1
 8009dd0:	e7af      	b.n	8009d32 <_vfiprintf_r+0x72>
 8009dd2:	9b05      	ldr	r3, [sp, #20]
 8009dd4:	6822      	ldr	r2, [r4, #0]
 8009dd6:	1ac0      	subs	r0, r0, r3
 8009dd8:	2301      	movs	r3, #1
 8009dda:	4083      	lsls	r3, r0
 8009ddc:	4313      	orrs	r3, r2
 8009dde:	0035      	movs	r5, r6
 8009de0:	6023      	str	r3, [r4, #0]
 8009de2:	e7cc      	b.n	8009d7e <_vfiprintf_r+0xbe>
 8009de4:	9b07      	ldr	r3, [sp, #28]
 8009de6:	1d19      	adds	r1, r3, #4
 8009de8:	681b      	ldr	r3, [r3, #0]
 8009dea:	9107      	str	r1, [sp, #28]
 8009dec:	2b00      	cmp	r3, #0
 8009dee:	db01      	blt.n	8009df4 <_vfiprintf_r+0x134>
 8009df0:	930b      	str	r3, [sp, #44]	@ 0x2c
 8009df2:	e004      	b.n	8009dfe <_vfiprintf_r+0x13e>
 8009df4:	425b      	negs	r3, r3
 8009df6:	60e3      	str	r3, [r4, #12]
 8009df8:	2302      	movs	r3, #2
 8009dfa:	4313      	orrs	r3, r2
 8009dfc:	6023      	str	r3, [r4, #0]
 8009dfe:	7833      	ldrb	r3, [r6, #0]
 8009e00:	2b2e      	cmp	r3, #46	@ 0x2e
 8009e02:	d10c      	bne.n	8009e1e <_vfiprintf_r+0x15e>
 8009e04:	7873      	ldrb	r3, [r6, #1]
 8009e06:	2b2a      	cmp	r3, #42	@ 0x2a
 8009e08:	d134      	bne.n	8009e74 <_vfiprintf_r+0x1b4>
 8009e0a:	9b07      	ldr	r3, [sp, #28]
 8009e0c:	3602      	adds	r6, #2
 8009e0e:	1d1a      	adds	r2, r3, #4
 8009e10:	681b      	ldr	r3, [r3, #0]
 8009e12:	9207      	str	r2, [sp, #28]
 8009e14:	2b00      	cmp	r3, #0
 8009e16:	da01      	bge.n	8009e1c <_vfiprintf_r+0x15c>
 8009e18:	2301      	movs	r3, #1
 8009e1a:	425b      	negs	r3, r3
 8009e1c:	9309      	str	r3, [sp, #36]	@ 0x24
 8009e1e:	4d32      	ldr	r5, [pc, #200]	@ (8009ee8 <_vfiprintf_r+0x228>)
 8009e20:	2203      	movs	r2, #3
 8009e22:	0028      	movs	r0, r5
 8009e24:	7831      	ldrb	r1, [r6, #0]
 8009e26:	f7fc fd32 	bl	800688e <memchr>
 8009e2a:	2800      	cmp	r0, #0
 8009e2c:	d006      	beq.n	8009e3c <_vfiprintf_r+0x17c>
 8009e2e:	2340      	movs	r3, #64	@ 0x40
 8009e30:	1b40      	subs	r0, r0, r5
 8009e32:	4083      	lsls	r3, r0
 8009e34:	6822      	ldr	r2, [r4, #0]
 8009e36:	3601      	adds	r6, #1
 8009e38:	4313      	orrs	r3, r2
 8009e3a:	6023      	str	r3, [r4, #0]
 8009e3c:	7831      	ldrb	r1, [r6, #0]
 8009e3e:	2206      	movs	r2, #6
 8009e40:	482a      	ldr	r0, [pc, #168]	@ (8009eec <_vfiprintf_r+0x22c>)
 8009e42:	1c75      	adds	r5, r6, #1
 8009e44:	7621      	strb	r1, [r4, #24]
 8009e46:	f7fc fd22 	bl	800688e <memchr>
 8009e4a:	2800      	cmp	r0, #0
 8009e4c:	d040      	beq.n	8009ed0 <_vfiprintf_r+0x210>
 8009e4e:	4b28      	ldr	r3, [pc, #160]	@ (8009ef0 <_vfiprintf_r+0x230>)
 8009e50:	2b00      	cmp	r3, #0
 8009e52:	d122      	bne.n	8009e9a <_vfiprintf_r+0x1da>
 8009e54:	2207      	movs	r2, #7
 8009e56:	9b07      	ldr	r3, [sp, #28]
 8009e58:	3307      	adds	r3, #7
 8009e5a:	4393      	bics	r3, r2
 8009e5c:	3308      	adds	r3, #8
 8009e5e:	9307      	str	r3, [sp, #28]
 8009e60:	6963      	ldr	r3, [r4, #20]
 8009e62:	9a04      	ldr	r2, [sp, #16]
 8009e64:	189b      	adds	r3, r3, r2
 8009e66:	6163      	str	r3, [r4, #20]
 8009e68:	e762      	b.n	8009d30 <_vfiprintf_r+0x70>
 8009e6a:	4343      	muls	r3, r0
 8009e6c:	002e      	movs	r6, r5
 8009e6e:	2101      	movs	r1, #1
 8009e70:	189b      	adds	r3, r3, r2
 8009e72:	e7a4      	b.n	8009dbe <_vfiprintf_r+0xfe>
 8009e74:	2300      	movs	r3, #0
 8009e76:	200a      	movs	r0, #10
 8009e78:	0019      	movs	r1, r3
 8009e7a:	3601      	adds	r6, #1
 8009e7c:	6063      	str	r3, [r4, #4]
 8009e7e:	7832      	ldrb	r2, [r6, #0]
 8009e80:	1c75      	adds	r5, r6, #1
 8009e82:	3a30      	subs	r2, #48	@ 0x30
 8009e84:	2a09      	cmp	r2, #9
 8009e86:	d903      	bls.n	8009e90 <_vfiprintf_r+0x1d0>
 8009e88:	2b00      	cmp	r3, #0
 8009e8a:	d0c8      	beq.n	8009e1e <_vfiprintf_r+0x15e>
 8009e8c:	9109      	str	r1, [sp, #36]	@ 0x24
 8009e8e:	e7c6      	b.n	8009e1e <_vfiprintf_r+0x15e>
 8009e90:	4341      	muls	r1, r0
 8009e92:	002e      	movs	r6, r5
 8009e94:	2301      	movs	r3, #1
 8009e96:	1889      	adds	r1, r1, r2
 8009e98:	e7f1      	b.n	8009e7e <_vfiprintf_r+0x1be>
 8009e9a:	aa07      	add	r2, sp, #28
 8009e9c:	9200      	str	r2, [sp, #0]
 8009e9e:	0021      	movs	r1, r4
 8009ea0:	003a      	movs	r2, r7
 8009ea2:	4b14      	ldr	r3, [pc, #80]	@ (8009ef4 <_vfiprintf_r+0x234>)
 8009ea4:	9803      	ldr	r0, [sp, #12]
 8009ea6:	f7fb fc3d 	bl	8005724 <_printf_float>
 8009eaa:	9004      	str	r0, [sp, #16]
 8009eac:	9b04      	ldr	r3, [sp, #16]
 8009eae:	3301      	adds	r3, #1
 8009eb0:	d1d6      	bne.n	8009e60 <_vfiprintf_r+0x1a0>
 8009eb2:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8009eb4:	07db      	lsls	r3, r3, #31
 8009eb6:	d405      	bmi.n	8009ec4 <_vfiprintf_r+0x204>
 8009eb8:	89bb      	ldrh	r3, [r7, #12]
 8009eba:	059b      	lsls	r3, r3, #22
 8009ebc:	d402      	bmi.n	8009ec4 <_vfiprintf_r+0x204>
 8009ebe:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8009ec0:	f7fc fce4 	bl	800688c <__retarget_lock_release_recursive>
 8009ec4:	89bb      	ldrh	r3, [r7, #12]
 8009ec6:	065b      	lsls	r3, r3, #25
 8009ec8:	d500      	bpl.n	8009ecc <_vfiprintf_r+0x20c>
 8009eca:	e71e      	b.n	8009d0a <_vfiprintf_r+0x4a>
 8009ecc:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8009ece:	e71e      	b.n	8009d0e <_vfiprintf_r+0x4e>
 8009ed0:	aa07      	add	r2, sp, #28
 8009ed2:	9200      	str	r2, [sp, #0]
 8009ed4:	0021      	movs	r1, r4
 8009ed6:	003a      	movs	r2, r7
 8009ed8:	4b06      	ldr	r3, [pc, #24]	@ (8009ef4 <_vfiprintf_r+0x234>)
 8009eda:	9803      	ldr	r0, [sp, #12]
 8009edc:	f7fb fed0 	bl	8005c80 <_printf_i>
 8009ee0:	e7e3      	b.n	8009eaa <_vfiprintf_r+0x1ea>
 8009ee2:	46c0      	nop			@ (mov r8, r8)
 8009ee4:	0800a15d 	.word	0x0800a15d
 8009ee8:	0800a163 	.word	0x0800a163
 8009eec:	0800a167 	.word	0x0800a167
 8009ef0:	08005725 	.word	0x08005725
 8009ef4:	08009c9d 	.word	0x08009c9d

08009ef8 <_raise_r>:
 8009ef8:	b570      	push	{r4, r5, r6, lr}
 8009efa:	0004      	movs	r4, r0
 8009efc:	000d      	movs	r5, r1
 8009efe:	291f      	cmp	r1, #31
 8009f00:	d904      	bls.n	8009f0c <_raise_r+0x14>
 8009f02:	2316      	movs	r3, #22
 8009f04:	6003      	str	r3, [r0, #0]
 8009f06:	2001      	movs	r0, #1
 8009f08:	4240      	negs	r0, r0
 8009f0a:	bd70      	pop	{r4, r5, r6, pc}
 8009f0c:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8009f0e:	2b00      	cmp	r3, #0
 8009f10:	d004      	beq.n	8009f1c <_raise_r+0x24>
 8009f12:	008a      	lsls	r2, r1, #2
 8009f14:	189b      	adds	r3, r3, r2
 8009f16:	681a      	ldr	r2, [r3, #0]
 8009f18:	2a00      	cmp	r2, #0
 8009f1a:	d108      	bne.n	8009f2e <_raise_r+0x36>
 8009f1c:	0020      	movs	r0, r4
 8009f1e:	f000 f831 	bl	8009f84 <_getpid_r>
 8009f22:	002a      	movs	r2, r5
 8009f24:	0001      	movs	r1, r0
 8009f26:	0020      	movs	r0, r4
 8009f28:	f000 f81a 	bl	8009f60 <_kill_r>
 8009f2c:	e7ed      	b.n	8009f0a <_raise_r+0x12>
 8009f2e:	2a01      	cmp	r2, #1
 8009f30:	d009      	beq.n	8009f46 <_raise_r+0x4e>
 8009f32:	1c51      	adds	r1, r2, #1
 8009f34:	d103      	bne.n	8009f3e <_raise_r+0x46>
 8009f36:	2316      	movs	r3, #22
 8009f38:	6003      	str	r3, [r0, #0]
 8009f3a:	2001      	movs	r0, #1
 8009f3c:	e7e5      	b.n	8009f0a <_raise_r+0x12>
 8009f3e:	2100      	movs	r1, #0
 8009f40:	0028      	movs	r0, r5
 8009f42:	6019      	str	r1, [r3, #0]
 8009f44:	4790      	blx	r2
 8009f46:	2000      	movs	r0, #0
 8009f48:	e7df      	b.n	8009f0a <_raise_r+0x12>
	...

08009f4c <raise>:
 8009f4c:	b510      	push	{r4, lr}
 8009f4e:	4b03      	ldr	r3, [pc, #12]	@ (8009f5c <raise+0x10>)
 8009f50:	0001      	movs	r1, r0
 8009f52:	6818      	ldr	r0, [r3, #0]
 8009f54:	f7ff ffd0 	bl	8009ef8 <_raise_r>
 8009f58:	bd10      	pop	{r4, pc}
 8009f5a:	46c0      	nop			@ (mov r8, r8)
 8009f5c:	20000018 	.word	0x20000018

08009f60 <_kill_r>:
 8009f60:	2300      	movs	r3, #0
 8009f62:	b570      	push	{r4, r5, r6, lr}
 8009f64:	4d06      	ldr	r5, [pc, #24]	@ (8009f80 <_kill_r+0x20>)
 8009f66:	0004      	movs	r4, r0
 8009f68:	0008      	movs	r0, r1
 8009f6a:	0011      	movs	r1, r2
 8009f6c:	602b      	str	r3, [r5, #0]
 8009f6e:	f7f9 f8e6 	bl	800313e <_kill>
 8009f72:	1c43      	adds	r3, r0, #1
 8009f74:	d103      	bne.n	8009f7e <_kill_r+0x1e>
 8009f76:	682b      	ldr	r3, [r5, #0]
 8009f78:	2b00      	cmp	r3, #0
 8009f7a:	d000      	beq.n	8009f7e <_kill_r+0x1e>
 8009f7c:	6023      	str	r3, [r4, #0]
 8009f7e:	bd70      	pop	{r4, r5, r6, pc}
 8009f80:	20000410 	.word	0x20000410

08009f84 <_getpid_r>:
 8009f84:	b510      	push	{r4, lr}
 8009f86:	f7f9 f8d4 	bl	8003132 <_getpid>
 8009f8a:	bd10      	pop	{r4, pc}

08009f8c <_init>:
 8009f8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009f8e:	46c0      	nop			@ (mov r8, r8)
 8009f90:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8009f92:	bc08      	pop	{r3}
 8009f94:	469e      	mov	lr, r3
 8009f96:	4770      	bx	lr

08009f98 <_fini>:
 8009f98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009f9a:	46c0      	nop			@ (mov r8, r8)
 8009f9c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8009f9e:	bc08      	pop	{r3}
 8009fa0:	469e      	mov	lr, r3
 8009fa2:	4770      	bx	lr
